{"id":"09b2c6c9e0df0b52cd403196fc486570","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/metatx/ERC2771Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (metatx/ERC2771Context.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Context variant with ERC-2771 support.\n *\n * WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n * be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n * specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n * behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n * function only accessible if `msg.data.length == 0`.\n *\n * WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n * Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n * recovery.\n */\nabstract contract ERC2771Context is Context {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable _trustedForwarder;\n\n    /**\n     * @dev Initializes the contract with a trusted forwarder, which will be able to\n     * invoke functions on this contract on behalf of other accounts.\n     *\n     * NOTE: The trusted forwarder can be replaced by overriding {trustedForwarder}.\n     */\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address trustedForwarder_) {\n        _trustedForwarder = trustedForwarder_;\n    }\n\n    /**\n     * @dev Returns the address of the trusted forwarder.\n     */\n    function trustedForwarder() public view virtual returns (address) {\n        return _trustedForwarder;\n    }\n\n    /**\n     * @dev Indicates whether any particular address is the trusted forwarder.\n     */\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\n        return forwarder == trustedForwarder();\n    }\n\n    /**\n     * @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgSender() internal view virtual override returns (address) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender)) {\n            unchecked {\n                return address(bytes20(msg.data[calldataLength - contextSuffixLength:]));\n            }\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    /**\n     * @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n     * a call is not performed by the trusted forwarder or the calldata length is less than\n     * 20 bytes (an address length).\n     */\n    function _msgData() internal view virtual override returns (bytes calldata) {\n        uint256 calldataLength = msg.data.length;\n        uint256 contextSuffixLength = _contextSuffixLength();\n        if (calldataLength >= contextSuffixLength && isTrustedForwarder(msg.sender)) {\n            unchecked {\n                return msg.data[:calldataLength - contextSuffixLength];\n            }\n        } else {\n            return super._msgData();\n        }\n    }\n\n    /**\n     * @dev ERC-2771 specifies the context as being a single address (20 bytes).\n     */\n    function _contextSuffixLength() internal view virtual override returns (uint256) {\n        return 20;\n    }\n}\n"},"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (metatx/ERC2771Forwarder.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC2771Context} from \"./ERC2771Context.sol\";\nimport {ECDSA} from \"../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../utils/Nonces.sol\";\nimport {Address} from \"../utils/Address.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev A forwarder compatible with ERC-2771 contracts. See {ERC2771Context}.\n *\n * This forwarder operates on forward requests that include:\n *\n * * `from`: An address to operate on behalf of. It is required to be equal to the request signer.\n * * `to`: The address that should be called.\n * * `value`: The amount of native token to attach with the requested call.\n * * `gas`: The amount of gas limit that will be forwarded with the requested call.\n * * `nonce`: A unique transaction ordering identifier to avoid replayability and request invalidation.\n * * `deadline`: A timestamp after which the request is not executable anymore.\n * * `data`: Encoded `msg.data` to send with the requested call.\n *\n * Relayers are able to submit batches if they are processing a high volume of requests. With high\n * throughput, relayers may run into limitations of the chain such as limits on the number of\n * transactions in the mempool. In these cases the recommendation is to distribute the load among\n * multiple accounts.\n *\n * NOTE: Batching requests includes an optional refund for unused `msg.value` that is achieved by\n * performing a call with empty calldata. While this is within the bounds of ERC-2771 compliance,\n * if the refund receiver happens to consider the forwarder a trusted forwarder, it MUST properly\n * handle `msg.data.length == 0`. `ERC2771Context` in OpenZeppelin Contracts versions prior to 4.9.3\n * do not handle this properly.\n *\n * ==== Security Considerations\n *\n * If a relayer submits a forward request, it should be willing to pay up to 100% of the gas amount\n * specified in the request. This contract does not implement any kind of retribution for this gas,\n * and it is assumed that there is an out of band incentive for relayers to pay for execution on\n * behalf of signers. Often, the relayer is operated by a project that will consider it a user\n * acquisition cost.\n *\n * By offering to pay for gas, relayers are at risk of having that gas used by an attacker toward\n * some other purpose that is not aligned with the expected out of band incentives. If you operate a\n * relayer, consider whitelisting target contracts and function selectors. When relaying ERC-721 or\n * ERC-1155 transfers specifically, consider rejecting the use of the `data` field, since it can be\n * used to execute arbitrary code.\n */\ncontract ERC2771Forwarder is EIP712, Nonces {\n    using ECDSA for bytes32;\n\n    struct ForwardRequestData {\n        address from;\n        address to;\n        uint256 value;\n        uint256 gas;\n        uint48 deadline;\n        bytes data;\n        bytes signature;\n    }\n\n    bytes32 internal constant _FORWARD_REQUEST_TYPEHASH =\n        keccak256(\n            \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,uint48 deadline,bytes data)\"\n        );\n\n    /**\n     * @dev Emitted when a `ForwardRequest` is executed.\n     *\n     * NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline,\n     * or simply a revert in the requested call. The contract guarantees that the relayer is not able to force\n     * the requested call to run out of gas.\n     */\n    event ExecutedForwardRequest(address indexed signer, uint256 nonce, bool success);\n\n    /**\n     * @dev The request `from` doesn't match with the recovered `signer`.\n     */\n    error ERC2771ForwarderInvalidSigner(address signer, address from);\n\n    /**\n     * @dev The `requestedValue` doesn't match with the available `msgValue`.\n     */\n    error ERC2771ForwarderMismatchedValue(uint256 requestedValue, uint256 msgValue);\n\n    /**\n     * @dev The request `deadline` has expired.\n     */\n    error ERC2771ForwarderExpiredRequest(uint48 deadline);\n\n    /**\n     * @dev The request target doesn't trust the `forwarder`.\n     */\n    error ERC2771UntrustfulTarget(address target, address forwarder);\n\n    /**\n     * @dev See {EIP712-constructor}.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev Returns `true` if a request is valid for a provided `signature` at the current block timestamp.\n     *\n     * A transaction is considered valid when the target trusts this forwarder, the request hasn't expired\n     * (deadline is not met), and the signer matches the `from` parameter of the signed request.\n     *\n     * NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund\n     * receiver is provided.\n     */\n    function verify(ForwardRequestData calldata request) public view virtual returns (bool) {\n        (bool isTrustedForwarder, bool active, bool signerMatch, ) = _validate(request);\n        return isTrustedForwarder && active && signerMatch;\n    }\n\n    /**\n     * @dev Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas\n     * provided to the requested call may not be exactly the amount requested, but the call will not run\n     * out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed.\n     *\n     * Requirements:\n     *\n     * - The request value should be equal to the provided `msg.value`.\n     * - The request should be valid according to {verify}.\n     */\n    function execute(ForwardRequestData calldata request) public payable virtual {\n        // We make sure that msg.value and request.value match exactly.\n        // If the request is invalid or the call reverts, this whole function\n        // will revert, ensuring value isn't stuck.\n        if (msg.value != request.value) {\n            revert ERC2771ForwarderMismatchedValue(request.value, msg.value);\n        }\n\n        if (!_execute(request, true)) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Batch version of {execute} with optional refunding and atomic execution.\n     *\n     * In case a batch contains at least one invalid request (see {verify}), the\n     * request will be skipped and the `refundReceiver` parameter will receive back the\n     * unused requested value at the end of the execution. This is done to prevent reverting\n     * the entire batch when a request is invalid or has already been submitted.\n     *\n     * If the `refundReceiver` is the `address(0)`, this function will revert when at least\n     * one of the requests was not valid instead of skipping it. This could be useful if\n     * a batch is required to get executed atomically (at least at the top-level). For example,\n     * refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids\n     * including reverted transactions.\n     *\n     * Requirements:\n     *\n     * - The sum of the requests' values should be equal to the provided `msg.value`.\n     * - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address.\n     *\n     * NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for\n     * the first-level forwarded calls. In case a forwarded request calls to a contract with another\n     * subcall, the second-level call may revert without the top-level call reverting.\n     */\n    function executeBatch(\n        ForwardRequestData[] calldata requests,\n        address payable refundReceiver\n    ) public payable virtual {\n        bool atomic = refundReceiver == address(0);\n\n        uint256 requestsValue;\n        uint256 refundValue;\n\n        for (uint256 i; i < requests.length; ++i) {\n            requestsValue += requests[i].value;\n            bool success = _execute(requests[i], atomic);\n            if (!success) {\n                refundValue += requests[i].value;\n            }\n        }\n\n        // The batch should revert if there's a mismatched msg.value provided\n        // to avoid request value tampering\n        if (requestsValue != msg.value) {\n            revert ERC2771ForwarderMismatchedValue(requestsValue, msg.value);\n        }\n\n        // Some requests with value were invalid (possibly due to frontrunning).\n        // To avoid leaving ETH in the contract this value is refunded.\n        if (refundValue != 0) {\n            // We know refundReceiver != address(0) && requestsValue == msg.value\n            // meaning we can ensure refundValue is not taken from the original contract's balance\n            // and refundReceiver is a known account.\n            Address.sendValue(refundReceiver, refundValue);\n        }\n    }\n\n    /**\n     * @dev Validates if the provided request can be executed at current block timestamp with\n     * the given `request.signature` on behalf of `request.signer`.\n     */\n    function _validate(\n        ForwardRequestData calldata request\n    ) internal view virtual returns (bool isTrustedForwarder, bool active, bool signerMatch, address signer) {\n        (bool isValid, address recovered) = _recoverForwardRequestSigner(request);\n\n        return (\n            _isTrustedByTarget(request.to),\n            request.deadline >= block.timestamp,\n            isValid && recovered == request.from,\n            recovered\n        );\n    }\n\n    /**\n     * @dev Returns a tuple with the recovered the signer of an EIP712 forward request message hash\n     * and a boolean indicating if the signature is valid.\n     *\n     * NOTE: The signature is considered valid if {ECDSA-tryRecover} indicates no recover error for it.\n     */\n    function _recoverForwardRequestSigner(\n        ForwardRequestData calldata request\n    ) internal view virtual returns (bool isValid, address signer) {\n        (address recovered, ECDSA.RecoverError err, ) = _hashTypedDataV4(\n            keccak256(\n                abi.encode(\n                    _FORWARD_REQUEST_TYPEHASH,\n                    request.from,\n                    request.to,\n                    request.value,\n                    request.gas,\n                    nonces(request.from),\n                    request.deadline,\n                    keccak256(request.data)\n                )\n            )\n        ).tryRecover(request.signature);\n\n        return (err == ECDSA.RecoverError.NoError, recovered);\n    }\n\n    /**\n     * @dev Validates and executes a signed request returning the request call `success` value.\n     *\n     * Internal function without msg.value validation.\n     *\n     * Requirements:\n     *\n     * - The caller must have provided enough gas to forward with the call.\n     * - The request must be valid (see {verify}) if the `requireValidRequest` is true.\n     *\n     * Emits an {ExecutedForwardRequest} event.\n     *\n     * IMPORTANT: Using this function doesn't check that all the `msg.value` was sent, potentially\n     * leaving value stuck in the contract.\n     */\n    function _execute(\n        ForwardRequestData calldata request,\n        bool requireValidRequest\n    ) internal virtual returns (bool success) {\n        (bool isTrustedForwarder, bool active, bool signerMatch, address signer) = _validate(request);\n\n        // Need to explicitly specify if a revert is required since non-reverting is default for\n        // batches and reversion is opt-in since it could be useful in some scenarios\n        if (requireValidRequest) {\n            if (!isTrustedForwarder) {\n                revert ERC2771UntrustfulTarget(request.to, address(this));\n            }\n\n            if (!active) {\n                revert ERC2771ForwarderExpiredRequest(request.deadline);\n            }\n\n            if (!signerMatch) {\n                revert ERC2771ForwarderInvalidSigner(signer, request.from);\n            }\n        }\n\n        // Ignore an invalid request because requireValidRequest = false\n        if (isTrustedForwarder && signerMatch && active) {\n            // Nonce should be used before the call to prevent reusing by reentrancy\n            uint256 currentNonce = _useNonce(signer);\n\n            uint256 reqGas = request.gas;\n            address to = request.to;\n            uint256 value = request.value;\n            bytes memory data = abi.encodePacked(request.data, request.from);\n\n            uint256 gasLeft;\n\n            assembly (\"memory-safe\") {\n                success := call(reqGas, to, value, add(data, 0x20), mload(data), 0, 0)\n                gasLeft := gas()\n            }\n\n            _checkForwardedGas(gasLeft, request);\n\n            emit ExecutedForwardRequest(signer, currentNonce, success);\n        }\n    }\n\n    /**\n     * @dev Returns whether the target trusts this forwarder.\n     *\n     * This function performs a static call to the target contract calling the\n     * {ERC2771Context-isTrustedForwarder} function.\n     *\n     * NOTE: Consider the execution of this forwarder is permissionless. Without this check, anyone may transfer assets\n     * that are owned by, or are approved to this forwarder.\n     */\n    function _isTrustedByTarget(address target) internal view virtual returns (bool) {\n        bytes memory encodedParams = abi.encodeCall(ERC2771Context.isTrustedForwarder, (address(this)));\n\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            // Perform the staticcall and save the result in the scratch space.\n            // | Location  | Content  | Content (Hex)                                                      |\n            // |-----------|----------|--------------------------------------------------------------------|\n            // |           |          |                                                           result ↓ |\n            // | 0x00:0x1F | selector | 0x0000000000000000000000000000000000000000000000000000000000000001 |\n            success := staticcall(gas(), target, add(encodedParams, 0x20), mload(encodedParams), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n\n    /**\n     * @dev Checks if the requested gas was correctly forwarded to the callee.\n     *\n     * As a consequence of https://eips.ethereum.org/EIPS/eip-150[EIP-150]:\n     * - At most `gasleft() - floor(gasleft() / 64)` is forwarded to the callee.\n     * - At least `floor(gasleft() / 64)` is kept in the caller.\n     *\n     * It reverts consuming all the available gas if the forwarded gas is not the requested gas.\n     *\n     * IMPORTANT: The `gasLeft` parameter should be measured exactly at the end of the forwarded call.\n     * Any gas consumed in between will make room for bypassing this check.\n     */\n    function _checkForwardedGas(uint256 gasLeft, ForwardRequestData calldata request) private pure {\n        // To avoid insufficient gas griefing attacks, as referenced in https://ronan.eth.limo/blog/ethereum-gas-dangers/\n        //\n        // A malicious relayer can attempt to shrink the gas forwarded so that the underlying call reverts out-of-gas\n        // but the forwarding itself still succeeds. In order to make sure that the subcall received sufficient gas,\n        // we will inspect gasleft() after the forwarding.\n        //\n        // Let X be the gas available before the subcall, such that the subcall gets at most X * 63 / 64.\n        // We can't know X after CALL dynamic costs, but we want it to be such that X * 63 / 64 >= req.gas.\n        // Let Y be the gas used in the subcall. gasleft() measured immediately after the subcall will be gasleft() = X - Y.\n        // If the subcall ran out of gas, then Y = X * 63 / 64 and gasleft() = X - Y = X / 64.\n        // Under this assumption req.gas / 63 > gasleft() is true if and only if\n        // req.gas / 63 > X / 64, or equivalently req.gas > X * 63 / 64.\n        // This means that if the subcall runs out of gas we are able to detect that insufficient gas was passed.\n        //\n        // We will now also see that req.gas / 63 > gasleft() implies that req.gas >= X * 63 / 64.\n        // The contract guarantees Y <= req.gas, thus gasleft() = X - Y >= X - req.gas.\n        // -    req.gas / 63 > gasleft()\n        // -    req.gas / 63 >= X - req.gas\n        // -    req.gas >= X * 63 / 64\n        // In other words if req.gas < X * 63 / 64 then req.gas / 63 <= gasleft(), thus if the relayer behaves honestly\n        // the forwarding does not revert.\n        if (gasLeft < request.gas / 63) {\n            // We explicitly trigger invalid opcode to consume all gas and bubble-up the effects, since\n            // neither revert or assert consume all gas since Solidity 0.8.20\n            // https://docs.soliditylang.org/en/v0.8.20/control-structures.html#panic-via-assert-and-error-via-require\n            assembly (\"memory-safe\") {\n                invalid()\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                revert(add(returndata, 0x20), mload(returndata))\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/AppForwarder.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol\";\n\n/**\n * @title AppForwarder\n * @dev ERC2771Forwarder implementation for offline QR payments\n * @notice This contract handles meta-transactions for offline payment processing\n */\ncontract AppForwarder is ERC2771Forwarder {\n    constructor() ERC2771Forwarder(\"AppForwarder\") {}\n    \n    /**\n     * @dev Get the forwarder name\n     * @return The name of the forwarder\n     */\n    function name() public pure returns (string memory) {\n        return \"AppForwarder\";\n    }\n    \n    /**\n     * @dev Get the forwarder version\n     * @return The version of the forwarder\n     */\n    function version() public pure returns (string memory) {\n        return \"1\";\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[24]},"id":25,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":24,"linearizedBaseContracts":[24],"name":"IERC5267","nameLocation":"144:8:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"159:84:0","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":4,"name":"EIP712DomainChanged","nameLocation":"254:19:0","nodeType":"EventDefinition","parameters":{"id":3,"nodeType":"ParameterList","parameters":[],"src":"273:2:0"},"src":"248:28:0"},{"documentation":{"id":5,"nodeType":"StructuredDocumentation","src":"282:140:0","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":23,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[],"src":"448:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"fields","nameLocation":"518:6:0","nodeType":"VariableDeclaration","scope":23,"src":"511:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":7,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:0","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"name","nameLocation":"552:4:0","nodeType":"VariableDeclaration","scope":23,"src":"538:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12,"mutability":"mutable","name":"version","nameLocation":"584:7:0","nodeType":"VariableDeclaration","scope":23,"src":"570:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"chainId","nameLocation":"613:7:0","nodeType":"VariableDeclaration","scope":23,"src":"605:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:0","nodeType":"VariableDeclaration","scope":23,"src":"634:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"salt","nameLocation":"681:4:0","nodeType":"VariableDeclaration","scope":23,"src":"673:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"extensions","nameLocation":"716:10:0","nodeType":"VariableDeclaration","scope":23,"src":"699:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":19,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":20,"nodeType":"ArrayTypeName","src":"699:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:0"},"scope":24,"src":"427:310:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":25,"src":"134:605:0","usedErrors":[],"usedEvents":[4]}],"src":"107:633:0"},"id":0},"@openzeppelin/contracts/metatx/ERC2771Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Context.sol","exportedSymbols":{"Context":[968],"ERC2771Context":[169]},"id":170,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":26,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":28,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":170,"sourceUnit":969,"src":"135:45:1","symbolAliases":[{"foreign":{"id":27,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"143:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":30,"name":"Context","nameLocations":["1005:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":968,"src":"1005:7:1"},"id":31,"nodeType":"InheritanceSpecifier","src":"1005:7:1"}],"canonicalName":"ERC2771Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":29,"nodeType":"StructuredDocumentation","src":"182:786:1","text":" @dev Context variant with ERC-2771 support.\n WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll\n be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771\n specification adding the address size in bytes (20) to the calldata size. An example of an unexpected\n behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive`\n function only accessible if `msg.data.length == 0`.\n WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption.\n Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender}\n recovery."},"fullyImplemented":true,"id":169,"linearizedBaseContracts":[169,968],"name":"ERC2771Context","nameLocation":"987:14:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1019:61:1","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":34,"mutability":"immutable","name":"_trustedForwarder","nameLocation":"1111:17:1","nodeType":"VariableDeclaration","scope":169,"src":"1085:43:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":33,"name":"address","nodeType":"ElementaryTypeName","src":"1085:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":44,"nodeType":"Block","src":"1490:54:1","statements":[{"expression":{"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":40,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"1500:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":41,"name":"trustedForwarder_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37,"src":"1520:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1500:37:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":43,"nodeType":"ExpressionStatement","src":"1500:37:1"}]},"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"1398:48:1","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":45,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"trustedForwarder_","nameLocation":"1471:17:1","nodeType":"VariableDeclaration","scope":45,"src":"1463:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1463:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1462:27:1"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1490:0:1"},"scope":169,"src":"1451:93:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":53,"nodeType":"Block","src":"1690:41:1","statements":[{"expression":{"id":51,"name":"_trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":34,"src":"1707:17:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":50,"id":52,"nodeType":"Return","src":"1700:24:1"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1550:69:1","text":" @dev Returns the address of the trusted forwarder."},"functionSelector":"7da0a877","id":54,"implemented":true,"kind":"function","modifiers":[],"name":"trustedForwarder","nameLocation":"1633:16:1","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1649:2:1"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":54,"src":"1681:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1681:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1680:9:1"},"scope":169,"src":"1624:107:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"1914:55:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62,"name":"forwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"1931:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":63,"name":"trustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1944:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1944:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1931:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":61,"id":66,"nodeType":"Return","src":"1924:38:1"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1737:90:1","text":" @dev Indicates whether any particular address is the trusted forwarder."},"functionSelector":"572b6c05","id":68,"implemented":true,"kind":"function","modifiers":[],"name":"isTrustedForwarder","nameLocation":"1841:18:1","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"forwarder","nameLocation":"1868:9:1","nodeType":"VariableDeclaration","scope":68,"src":"1860:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"1860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1859:19:1"},"returnParameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":68,"src":"1908:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59,"name":"bool","nodeType":"ElementaryTypeName","src":"1908:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1907:6:1"},"scope":169,"src":"1832:137:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[950],"body":{"id":115,"nodeType":"Block","src":"2277:400:1","statements":[{"assignments":[76],"declarations":[{"constant":false,"id":76,"mutability":"mutable","name":"calldataLength","nameLocation":"2295:14:1","nodeType":"VariableDeclaration","scope":115,"src":"2287:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"2287:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":80,"initialValue":{"expression":{"expression":{"id":77,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2312:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2316:4:1","memberName":"data","nodeType":"MemberAccess","src":"2312:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2321:6:1","memberName":"length","nodeType":"MemberAccess","src":"2312:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2287:40:1"},{"assignments":[82],"declarations":[{"constant":false,"id":82,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"2345:19:1","nodeType":"VariableDeclaration","scope":115,"src":"2337:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"2337:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":85,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":83,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[168],"referencedDeclaration":168,"src":"2367:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2367:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2337:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":86,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"2403:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":87,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"2421:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2403:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"expression":{"id":90,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2463:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2467:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2463:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":89,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2444:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":92,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2444:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2403:71:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":113,"nodeType":"Block","src":"2621:50:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":109,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2642:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771Context_$169_$","typeString":"type(contract super ERC2771Context)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2648:10:1","memberName":"_msgSender","nodeType":"MemberAccess","referencedDeclaration":950,"src":"2642:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2642:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":74,"id":112,"nodeType":"Return","src":"2635:25:1"}]},"id":114,"nodeType":"IfStatement","src":"2399:272:1","trueBody":{"id":108,"nodeType":"Block","src":"2476:139:1","statements":[{"id":107,"nodeType":"UncheckedBlock","src":"2490:115:1","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":98,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2541:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2545:4:1","memberName":"data","nodeType":"MemberAccess","src":"2541:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2541:47:1","startExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":100,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"2550:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":101,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"2567:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2550:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":97,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2533:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":96,"name":"bytes20","nodeType":"ElementaryTypeName","src":"2533:7:1","typeDescriptions":{}}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":95,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2525:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"2525:7:1","typeDescriptions":{}}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2525:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":74,"id":106,"nodeType":"Return","src":"2518:72:1"}]}]}}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1975:226:1","text":" @dev Override for `msg.sender`. Defaults to the original `msg.sender` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"id":116,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"2215:10:1","nodeType":"FunctionDefinition","overrides":{"id":71,"nodeType":"OverrideSpecifier","overrides":[],"src":"2250:8:1"},"parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"2225:2:1"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"2268:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2267:9:1"},"scope":169,"src":"2206:471:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[959],"body":{"id":157,"nodeType":"Block","src":"2986:380:1","statements":[{"assignments":[124],"declarations":[{"constant":false,"id":124,"mutability":"mutable","name":"calldataLength","nameLocation":"3004:14:1","nodeType":"VariableDeclaration","scope":157,"src":"2996:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2996:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":128,"initialValue":{"expression":{"expression":{"id":125,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3021:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3025:4:1","memberName":"data","nodeType":"MemberAccess","src":"3021:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3030:6:1","memberName":"length","nodeType":"MemberAccess","src":"3021:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2996:40:1"},{"assignments":[130],"declarations":[{"constant":false,"id":130,"mutability":"mutable","name":"contextSuffixLength","nameLocation":"3054:19:1","nodeType":"VariableDeclaration","scope":157,"src":"3046:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3046:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":133,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":131,"name":"_contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[168],"referencedDeclaration":168,"src":"3076:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3076:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3046:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":134,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"3112:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":135,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"3130:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3112:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"expression":{"id":138,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3172:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3176:6:1","memberName":"sender","nodeType":"MemberAccess","src":"3172:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"3153:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3153:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3112:71:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":155,"nodeType":"Block","src":"3312:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":151,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3333:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC2771Context_$169_$","typeString":"type(contract super ERC2771Context)"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3339:8:1","memberName":"_msgData","nodeType":"MemberAccess","referencedDeclaration":959,"src":"3333:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$","typeString":"function () view returns (bytes calldata)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3333:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":122,"id":154,"nodeType":"Return","src":"3326:23:1"}]},"id":156,"nodeType":"IfStatement","src":"3108:252:1","trueBody":{"id":150,"nodeType":"Block","src":"3185:121:1","statements":[{"id":149,"nodeType":"UncheckedBlock","src":"3199:97:1","statements":[{"expression":{"baseExpression":{"expression":{"id":142,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3234:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3238:4:1","memberName":"data","nodeType":"MemberAccess","src":"3234:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"calldataLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"3244:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":145,"name":"contextSuffixLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"3261:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3244:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3234:47:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},"functionReturnParameters":122,"id":148,"nodeType":"Return","src":"3227:54:1"}]}]}}]},"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"2683:222:1","text":" @dev Override for `msg.data`. Defaults to the original `msg.data` whenever\n a call is not performed by the trusted forwarder or the calldata length is less than\n 20 bytes (an address length)."},"id":158,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"2919:8:1","nodeType":"FunctionDefinition","overrides":{"id":119,"nodeType":"OverrideSpecifier","overrides":[],"src":"2952:8:1"},"parameters":{"id":118,"nodeType":"ParameterList","parameters":[],"src":"2927:2:1"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":158,"src":"2970:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":120,"name":"bytes","nodeType":"ElementaryTypeName","src":"2970:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2969:16:1"},"scope":169,"src":"2910:456:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[967],"body":{"id":167,"nodeType":"Block","src":"3550:26:1","statements":[{"expression":{"hexValue":"3230","id":165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3567:2:1","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"functionReturnParameters":164,"id":166,"nodeType":"Return","src":"3560:9:1"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"3372:92:1","text":" @dev ERC-2771 specifies the context as being a single address (20 bytes)."},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"3478:20:1","nodeType":"FunctionDefinition","overrides":{"id":161,"nodeType":"OverrideSpecifier","overrides":[],"src":"3523:8:1"},"parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"3498:2:1"},"returnParameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"3541:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:1"},"scope":169,"src":"3469:107:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":170,"src":"969:2609:1","usedErrors":[],"usedEvents":[]}],"src":"109:3470:1"},"id":1},"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol","exportedSymbols":{"Address":[938],"ECDSA":[3201],"EIP712":[3428],"ERC2771Context":[169],"ERC2771Forwarder":[678],"Errors":[990],"Nonces":[1058]},"id":679,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":171,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"111:24:2"},{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Context.sol","file":"./ERC2771Context.sol","id":173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":679,"sourceUnit":170,"src":"137:52:2","symbolAliases":[{"foreign":{"id":172,"name":"ERC2771Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"145:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../utils/cryptography/ECDSA.sol","id":175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":679,"sourceUnit":3202,"src":"190:54:2","symbolAliases":[{"foreign":{"id":174,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"198:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../utils/cryptography/EIP712.sol","id":177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":679,"sourceUnit":3429,"src":"245:56:2","symbolAliases":[{"foreign":{"id":176,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"253:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../utils/Nonces.sol","id":179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":679,"sourceUnit":1059,"src":"302:43:2","symbolAliases":[{"foreign":{"id":178,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"310:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../utils/Address.sol","id":181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":679,"sourceUnit":939,"src":"346:45:2","symbolAliases":[{"foreign":{"id":180,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"354:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"../utils/Errors.sol","id":183,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":679,"sourceUnit":991,"src":"392:43:2","symbolAliases":[{"foreign":{"id":182,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"400:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":185,"name":"EIP712","nameLocations":["2807:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":3428,"src":"2807:6:2"},"id":186,"nodeType":"InheritanceSpecifier","src":"2807:6:2"},{"baseName":{"id":187,"name":"Nonces","nameLocations":["2815:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":1058,"src":"2815:6:2"},"id":188,"nodeType":"InheritanceSpecifier","src":"2815:6:2"}],"canonicalName":"ERC2771Forwarder","contractDependencies":[],"contractKind":"contract","documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"437:2340:2","text":" @dev A forwarder compatible with ERC-2771 contracts. See {ERC2771Context}.\n This forwarder operates on forward requests that include:\n * `from`: An address to operate on behalf of. It is required to be equal to the request signer.\n * `to`: The address that should be called.\n * `value`: The amount of native token to attach with the requested call.\n * `gas`: The amount of gas limit that will be forwarded with the requested call.\n * `nonce`: A unique transaction ordering identifier to avoid replayability and request invalidation.\n * `deadline`: A timestamp after which the request is not executable anymore.\n * `data`: Encoded `msg.data` to send with the requested call.\n Relayers are able to submit batches if they are processing a high volume of requests. With high\n throughput, relayers may run into limitations of the chain such as limits on the number of\n transactions in the mempool. In these cases the recommendation is to distribute the load among\n multiple accounts.\n NOTE: Batching requests includes an optional refund for unused `msg.value` that is achieved by\n performing a call with empty calldata. While this is within the bounds of ERC-2771 compliance,\n if the refund receiver happens to consider the forwarder a trusted forwarder, it MUST properly\n handle `msg.data.length == 0`. `ERC2771Context` in OpenZeppelin Contracts versions prior to 4.9.3\n do not handle this properly.\n ==== Security Considerations\n If a relayer submits a forward request, it should be willing to pay up to 100% of the gas amount\n specified in the request. This contract does not implement any kind of retribution for this gas,\n and it is assumed that there is an out of band incentive for relayers to pay for execution on\n behalf of signers. Often, the relayer is operated by a project that will consider it a user\n acquisition cost.\n By offering to pay for gas, relayers are at risk of having that gas used by an attacker toward\n some other purpose that is not aligned with the expected out of band incentives. If you operate a\n relayer, consider whitelisting target contracts and function selectors. When relaying ERC-721 or\n ERC-1155 transfers specifically, consider rejecting the use of the `data` field, since it can be\n used to execute arbitrary code."},"fullyImplemented":true,"id":678,"linearizedBaseContracts":[678,1058,3428,24],"name":"ERC2771Forwarder","nameLocation":"2787:16:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":191,"libraryName":{"id":189,"name":"ECDSA","nameLocations":["2834:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":3201,"src":"2834:5:2"},"nodeType":"UsingForDirective","src":"2828:24:2","typeName":{"id":190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2844:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"canonicalName":"ERC2771Forwarder.ForwardRequestData","id":206,"members":[{"constant":false,"id":193,"mutability":"mutable","name":"from","nameLocation":"2902:4:2","nodeType":"VariableDeclaration","scope":206,"src":"2894:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2894:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"to","nameLocation":"2924:2:2","nodeType":"VariableDeclaration","scope":206,"src":"2916:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"2916:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"value","nameLocation":"2944:5:2","nodeType":"VariableDeclaration","scope":206,"src":"2936:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":196,"name":"uint256","nodeType":"ElementaryTypeName","src":"2936:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"gas","nameLocation":"2967:3:2","nodeType":"VariableDeclaration","scope":206,"src":"2959:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"2959:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"deadline","nameLocation":"2987:8:2","nodeType":"VariableDeclaration","scope":206,"src":"2980:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":200,"name":"uint48","nodeType":"ElementaryTypeName","src":"2980:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":203,"mutability":"mutable","name":"data","nameLocation":"3011:4:2","nodeType":"VariableDeclaration","scope":206,"src":"3005:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":202,"name":"bytes","nodeType":"ElementaryTypeName","src":"3005:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"signature","nameLocation":"3031:9:2","nodeType":"VariableDeclaration","scope":206,"src":"3025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":204,"name":"bytes","nodeType":"ElementaryTypeName","src":"3025:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ForwardRequestData","nameLocation":"2865:18:2","nodeType":"StructDefinition","scope":678,"src":"2858:189:2","visibility":"public"},{"constant":true,"id":211,"mutability":"constant","name":"_FORWARD_REQUEST_TYPEHASH","nameLocation":"3079:25:2","nodeType":"VariableDeclaration","scope":678,"src":"3053:203:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3053:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"466f72776172645265717565737428616464726573732066726f6d2c6164647265737320746f2c75696e743235362076616c75652c75696e74323536206761732c75696e74323536206e6f6e63652c75696e74343820646561646c696e652c6279746573206461746129","id":209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3138:108:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac","typeString":"literal_string \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,uint48 deadline,bytes data)\""},"value":"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,uint48 deadline,bytes data)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac","typeString":"literal_string \"ForwardRequest(address from,address to,uint256 value,uint256 gas,uint256 nonce,uint48 deadline,bytes data)\""}],"id":208,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3115:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3115:141:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"anonymous":false,"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3263:335:2","text":" @dev Emitted when a `ForwardRequest` is executed.\n NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline,\n or simply a revert in the requested call. The contract guarantees that the relayer is not able to force\n the requested call to run out of gas."},"eventSelector":"842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c","id":220,"name":"ExecutedForwardRequest","nameLocation":"3609:22:2","nodeType":"EventDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"indexed":true,"mutability":"mutable","name":"signer","nameLocation":"3648:6:2","nodeType":"VariableDeclaration","scope":220,"src":"3632:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"3632:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":216,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3664:5:2","nodeType":"VariableDeclaration","scope":220,"src":"3656:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":218,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"3676:7:2","nodeType":"VariableDeclaration","scope":220,"src":"3671:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":217,"name":"bool","nodeType":"ElementaryTypeName","src":"3671:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3631:53:2"},"src":"3603:82:2"},{"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"3691:85:2","text":" @dev The request `from` doesn't match with the recovered `signer`."},"errorSelector":"c845a056","id":227,"name":"ERC2771ForwarderInvalidSigner","nameLocation":"3787:29:2","nodeType":"ErrorDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"signer","nameLocation":"3825:6:2","nodeType":"VariableDeclaration","scope":227,"src":"3817:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"3817:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":225,"mutability":"mutable","name":"from","nameLocation":"3841:4:2","nodeType":"VariableDeclaration","scope":227,"src":"3833:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"3833:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3816:30:2"},"src":"3781:66:2"},{"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"3853:89:2","text":" @dev The `requestedValue` doesn't match with the available `msgValue`."},"errorSelector":"70647f79","id":234,"name":"ERC2771ForwarderMismatchedValue","nameLocation":"3953:31:2","nodeType":"ErrorDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"requestedValue","nameLocation":"3993:14:2","nodeType":"VariableDeclaration","scope":234,"src":"3985:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"msgValue","nameLocation":"4017:8:2","nodeType":"VariableDeclaration","scope":234,"src":"4009:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"4009:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3984:42:2"},"src":"3947:80:2"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"4033:59:2","text":" @dev The request `deadline` has expired."},"errorSelector":"94eef58a","id":239,"name":"ERC2771ForwarderExpiredRequest","nameLocation":"4103:30:2","nodeType":"ErrorDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"deadline","nameLocation":"4141:8:2","nodeType":"VariableDeclaration","scope":239,"src":"4134:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":236,"name":"uint48","nodeType":"ElementaryTypeName","src":"4134:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"4133:17:2"},"src":"4097:54:2"},{"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"4157:73:2","text":" @dev The request target doesn't trust the `forwarder`."},"errorSelector":"d2650cd1","id":246,"name":"ERC2771UntrustfulTarget","nameLocation":"4241:23:2","nodeType":"ErrorDefinition","parameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"target","nameLocation":"4273:6:2","nodeType":"VariableDeclaration","scope":246,"src":"4265:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"4265:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"forwarder","nameLocation":"4289:9:2","nodeType":"VariableDeclaration","scope":246,"src":"4281:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"4281:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4264:35:2"},"src":"4235:65:2"},{"body":{"id":256,"nodeType":"Block","src":"4410:2:2","statements":[]},"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"4306:49:2","text":" @dev See {EIP712-constructor}."},"id":257,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":252,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"4399:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4405:3:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":254,"kind":"baseConstructorSpecifier","modifierName":{"id":251,"name":"EIP712","nameLocations":["4392:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":3428,"src":"4392:6:2"},"nodeType":"ModifierInvocation","src":"4392:17:2"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":249,"mutability":"mutable","name":"name","nameLocation":"4386:4:2","nodeType":"VariableDeclaration","scope":257,"src":"4372:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":248,"name":"string","nodeType":"ElementaryTypeName","src":"4372:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4371:20:2"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"4410:0:2"},"scope":678,"src":"4360:52:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":282,"nodeType":"Block","src":"4978:156:2","statements":[{"assignments":[267,269,271,null],"declarations":[{"constant":false,"id":267,"mutability":"mutable","name":"isTrustedForwarder","nameLocation":"4994:18:2","nodeType":"VariableDeclaration","scope":282,"src":"4989:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":266,"name":"bool","nodeType":"ElementaryTypeName","src":"4989:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"active","nameLocation":"5019:6:2","nodeType":"VariableDeclaration","scope":282,"src":"5014:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":268,"name":"bool","nodeType":"ElementaryTypeName","src":"5014:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"signerMatch","nameLocation":"5032:11:2","nodeType":"VariableDeclaration","scope":282,"src":"5027:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":270,"name":"bool","nodeType":"ElementaryTypeName","src":"5027:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":275,"initialValue":{"arguments":[{"id":273,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"5059:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}],"id":272,"name":"_validate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5049:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_ForwardRequestData_$206_calldata_ptr_$returns$_t_bool_$_t_bool_$_t_bool_$_t_address_$","typeString":"function (struct ERC2771Forwarder.ForwardRequestData calldata) view returns (bool,bool,bool,address)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5049:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_address_$","typeString":"tuple(bool,bool,bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"4988:79:2"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":276,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"5084:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":277,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"5106:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5084:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":279,"name":"signerMatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":271,"src":"5116:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5084:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":265,"id":281,"nodeType":"Return","src":"5077:50:2"}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"4418:467:2","text":" @dev Returns `true` if a request is valid for a provided `signature` at the current block timestamp.\n A transaction is considered valid when the target trusts this forwarder, the request hasn't expired\n (deadline is not met), and the signer matches the `from` parameter of the signed request.\n NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund\n receiver is provided."},"functionSelector":"19d8d38c","id":283,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"4899:6:2","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"request","nameLocation":"4934:7:2","nodeType":"VariableDeclaration","scope":283,"src":"4906:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"},"typeName":{"id":260,"nodeType":"UserDefinedTypeName","pathNode":{"id":259,"name":"ForwardRequestData","nameLocations":["4906:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"4906:18:2"},"referencedDeclaration":206,"src":"4906:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"visibility":"internal"}],"src":"4905:37:2"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":283,"src":"4972:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"4972:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4971:6:2"},"scope":678,"src":"4890:244:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":316,"nodeType":"Block","src":"5727:430:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":290,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5943:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5947:5:2","memberName":"value","nodeType":"MemberAccess","src":"5943:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":292,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"5956:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5964:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":197,"src":"5956:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5943:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"IfStatement","src":"5939:121:2","trueBody":{"id":302,"nodeType":"Block","src":"5971:89:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":296,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"6024:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6032:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":197,"src":"6024:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6039:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6043:5:2","memberName":"value","nodeType":"MemberAccess","src":"6039:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":295,"name":"ERC2771ForwarderMismatchedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"5992:31:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5992:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":301,"nodeType":"RevertStatement","src":"5985:64:2"}]}},{"condition":{"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6074:24:2","subExpression":{"arguments":[{"id":305,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"6084:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},{"hexValue":"74727565","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6093:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":304,"name":"_execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"6075:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_ForwardRequestData_$206_calldata_ptr_$_t_bool_$returns$_t_bool_$","typeString":"function (struct ERC2771Forwarder.ForwardRequestData calldata,bool) returns (bool)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6075:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":315,"nodeType":"IfStatement","src":"6070:81:2","trueBody":{"id":314,"nodeType":"Block","src":"6100:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":309,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"6121:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$990_$","typeString":"type(library Errors)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6128:10:2","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":981,"src":"6121:17:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6121:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"RevertStatement","src":"6114:26:2"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"5140:505:2","text":" @dev Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas\n provided to the requested call may not be exactly the amount requested, but the call will not run\n out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed.\n Requirements:\n - The request value should be equal to the provided `msg.value`.\n - The request should be valid according to {verify}."},"functionSelector":"df905caf","id":317,"implemented":true,"kind":"function","modifiers":[],"name":"execute","nameLocation":"5659:7:2","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"request","nameLocation":"5695:7:2","nodeType":"VariableDeclaration","scope":317,"src":"5667:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"},"typeName":{"id":286,"nodeType":"UserDefinedTypeName","pathNode":{"id":285,"name":"ForwardRequestData","nameLocations":["5667:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"5667:18:2"},"referencedDeclaration":206,"src":"5667:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"visibility":"internal"}],"src":"5666:37:2"},"returnParameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"5727:0:2"},"scope":678,"src":"5650:507:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":405,"nodeType":"Block","src":"7697:1125:2","statements":[{"assignments":[328],"declarations":[{"constant":false,"id":328,"mutability":"mutable","name":"atomic","nameLocation":"7712:6:2","nodeType":"VariableDeclaration","scope":405,"src":"7707:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":327,"name":"bool","nodeType":"ElementaryTypeName","src":"7707:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":335,"initialValue":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":329,"name":"refundReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"7721:14:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7747:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7739:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"7739:7:2","typeDescriptions":{}}},"id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7739:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7721:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7707:42:2"},{"assignments":[337],"declarations":[{"constant":false,"id":337,"mutability":"mutable","name":"requestsValue","nameLocation":"7768:13:2","nodeType":"VariableDeclaration","scope":405,"src":"7760:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"7760:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":338,"nodeType":"VariableDeclarationStatement","src":"7760:21:2"},{"assignments":[340],"declarations":[{"constant":false,"id":340,"mutability":"mutable","name":"refundValue","nameLocation":"7799:11:2","nodeType":"VariableDeclaration","scope":405,"src":"7791:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"7791:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":341,"nodeType":"VariableDeclarationStatement","src":"7791:19:2"},{"body":{"id":379,"nodeType":"Block","src":"7863:209:2","statements":[{"expression":{"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":352,"name":"requestsValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"7877:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":353,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"7894:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ForwardRequestData_$206_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata[] calldata"}},"id":355,"indexExpression":{"id":354,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"7903:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7894:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7906:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":197,"src":"7894:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7877:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":358,"nodeType":"ExpressionStatement","src":"7877:34:2"},{"assignments":[360],"declarations":[{"constant":false,"id":360,"mutability":"mutable","name":"success","nameLocation":"7930:7:2","nodeType":"VariableDeclaration","scope":379,"src":"7925:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":359,"name":"bool","nodeType":"ElementaryTypeName","src":"7925:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":367,"initialValue":{"arguments":[{"baseExpression":{"id":362,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"7949:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ForwardRequestData_$206_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata[] calldata"}},"id":364,"indexExpression":{"id":363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"7958:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7949:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},{"id":365,"name":"atomic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"7962:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":361,"name":"_execute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"7940:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_ForwardRequestData_$206_calldata_ptr_$_t_bool_$returns$_t_bool_$","typeString":"function (struct ERC2771Forwarder.ForwardRequestData calldata,bool) returns (bool)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7940:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7925:44:2"},{"condition":{"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7987:8:2","subExpression":{"id":368,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"7988:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":378,"nodeType":"IfStatement","src":"7983:79:2","trueBody":{"id":377,"nodeType":"Block","src":"7997:65:2","statements":[{"expression":{"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":370,"name":"refundValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"8015:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":371,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"8030:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ForwardRequestData_$206_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata[] calldata"}},"id":373,"indexExpression":{"id":372,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"8039:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8030:11:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8042:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":197,"src":"8030:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8015:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":376,"nodeType":"ExpressionStatement","src":"8015:32:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":345,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"7837:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":346,"name":"requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"7841:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ForwardRequestData_$206_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata[] calldata"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7850:6:2","memberName":"length","nodeType":"MemberAccess","src":"7841:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7837:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":380,"initializationExpression":{"assignments":[343],"declarations":[{"constant":false,"id":343,"mutability":"mutable","name":"i","nameLocation":"7834:1:2","nodeType":"VariableDeclaration","scope":380,"src":"7826:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"7826:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":344,"nodeType":"VariableDeclarationStatement","src":"7826:9:2"},"loopExpression":{"expression":{"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7858:3:2","subExpression":{"id":349,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"7860:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":351,"nodeType":"ExpressionStatement","src":"7858:3:2"},"nodeType":"ForStatement","src":"7821:251:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":381,"name":"requestsValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"8208:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8225:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8229:5:2","memberName":"value","nodeType":"MemberAccess","src":"8225:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8208:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":392,"nodeType":"IfStatement","src":"8204:121:2","trueBody":{"id":391,"nodeType":"Block","src":"8236:89:2","statements":[{"errorCall":{"arguments":[{"id":386,"name":"requestsValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"8289:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":387,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8304:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8308:5:2","memberName":"value","nodeType":"MemberAccess","src":"8304:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":385,"name":"ERC2771ForwarderMismatchedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"8257:31:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"RevertStatement","src":"8250:64:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"refundValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"8492:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8507:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8492:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":404,"nodeType":"IfStatement","src":"8488:328:2","trueBody":{"id":403,"nodeType":"Block","src":"8510:306:2","statements":[{"expression":{"arguments":[{"id":399,"name":"refundReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"8777:14:2","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":400,"name":"refundValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"8793:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":396,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"8759:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$938_$","typeString":"type(library Address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8767:9:2","memberName":"sendValue","nodeType":"MemberAccess","referencedDeclaration":736,"src":"8759:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8759:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":402,"nodeType":"ExpressionStatement","src":"8759:46:2"}]}}]},"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"6163:1390:2","text":" @dev Batch version of {execute} with optional refunding and atomic execution.\n In case a batch contains at least one invalid request (see {verify}), the\n request will be skipped and the `refundReceiver` parameter will receive back the\n unused requested value at the end of the execution. This is done to prevent reverting\n the entire batch when a request is invalid or has already been submitted.\n If the `refundReceiver` is the `address(0)`, this function will revert when at least\n one of the requests was not valid instead of skipping it. This could be useful if\n a batch is required to get executed atomically (at least at the top-level). For example,\n refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids\n including reverted transactions.\n Requirements:\n - The sum of the requests' values should be equal to the provided `msg.value`.\n - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address.\n NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for\n the first-level forwarded calls. In case a forwarded request calls to a contract with another\n subcall, the second-level call may revert without the top-level call reverting."},"functionSelector":"ccf96b4a","id":406,"implemented":true,"kind":"function","modifiers":[],"name":"executeBatch","nameLocation":"7567:12:2","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"requests","nameLocation":"7619:8:2","nodeType":"VariableDeclaration","scope":406,"src":"7589:38:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ForwardRequestData_$206_calldata_ptr_$dyn_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData[]"},"typeName":{"baseType":{"id":320,"nodeType":"UserDefinedTypeName","pathNode":{"id":319,"name":"ForwardRequestData","nameLocations":["7589:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"7589:18:2"},"referencedDeclaration":206,"src":"7589:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"id":321,"nodeType":"ArrayTypeName","src":"7589:20:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_ForwardRequestData_$206_storage_$dyn_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData[]"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"refundReceiver","nameLocation":"7653:14:2","nodeType":"VariableDeclaration","scope":406,"src":"7637:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"7637:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"7579:94:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"7697:0:2"},"scope":678,"src":"7558:1264:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":447,"nodeType":"Block","src":"9179:284:2","statements":[{"assignments":[422,424],"declarations":[{"constant":false,"id":422,"mutability":"mutable","name":"isValid","nameLocation":"9195:7:2","nodeType":"VariableDeclaration","scope":447,"src":"9190:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":421,"name":"bool","nodeType":"ElementaryTypeName","src":"9190:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"recovered","nameLocation":"9212:9:2","nodeType":"VariableDeclaration","scope":447,"src":"9204:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"9204:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":428,"initialValue":{"arguments":[{"id":426,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"9254:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}],"id":425,"name":"_recoverForwardRequestSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"9225:28:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_ForwardRequestData_$206_calldata_ptr_$returns$_t_bool_$_t_address_$","typeString":"function (struct ERC2771Forwarder.ForwardRequestData calldata) view returns (bool,address)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9225:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"9189:73:2"},{"expression":{"components":[{"arguments":[{"expression":{"id":430,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"9313:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9321:2:2","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":195,"src":"9313:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":429,"name":"_isTrustedByTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"9294:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9294:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":433,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"9338:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9346:8:2","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":201,"src":"9338:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":435,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9358:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9364:9:2","memberName":"timestamp","nodeType":"MemberAccess","src":"9358:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9338:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":438,"name":"isValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"9387:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":439,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"9398:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":440,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"9411:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9419:4:2","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":193,"src":"9411:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9398:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9387:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":444,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"9437:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9280:176:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_address_$","typeString":"tuple(bool,bool,bool,address)"}},"functionReturnParameters":420,"id":446,"nodeType":"Return","src":"9273:183:2"}]},"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"8828:173:2","text":" @dev Validates if the provided request can be executed at current block timestamp with\n the given `request.signature` on behalf of `request.signer`."},"id":448,"implemented":true,"kind":"function","modifiers":[],"name":"_validate","nameLocation":"9015:9:2","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"request","nameLocation":"9062:7:2","nodeType":"VariableDeclaration","scope":448,"src":"9034:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"},"typeName":{"id":409,"nodeType":"UserDefinedTypeName","pathNode":{"id":408,"name":"ForwardRequestData","nameLocations":["9034:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"9034:18:2"},"referencedDeclaration":206,"src":"9034:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"visibility":"internal"}],"src":"9024:51:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"isTrustedForwarder","nameLocation":"9112:18:2","nodeType":"VariableDeclaration","scope":448,"src":"9107:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":412,"name":"bool","nodeType":"ElementaryTypeName","src":"9107:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"active","nameLocation":"9137:6:2","nodeType":"VariableDeclaration","scope":448,"src":"9132:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":414,"name":"bool","nodeType":"ElementaryTypeName","src":"9132:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"signerMatch","nameLocation":"9150:11:2","nodeType":"VariableDeclaration","scope":448,"src":"9145:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":416,"name":"bool","nodeType":"ElementaryTypeName","src":"9145:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"signer","nameLocation":"9171:6:2","nodeType":"VariableDeclaration","scope":448,"src":"9163:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"9163:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9106:72:2"},"scope":678,"src":"9006:457:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":503,"nodeType":"Block","src":"9905:574:2","statements":[{"assignments":[460,463,null],"declarations":[{"constant":false,"id":460,"mutability":"mutable","name":"recovered","nameLocation":"9924:9:2","nodeType":"VariableDeclaration","scope":503,"src":"9916:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"9916:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"err","nameLocation":"9954:3:2","nodeType":"VariableDeclaration","scope":503,"src":"9935:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":462,"nodeType":"UserDefinedTypeName","pathNode":{"id":461,"name":"ECDSA.RecoverError","nameLocations":["9935:5:2","9941:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":2861,"src":"9935:18:2"},"referencedDeclaration":2861,"src":"9935:18:2","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},null],"id":494,"initialValue":{"arguments":[{"expression":{"id":491,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"10390:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10398:9:2","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":205,"src":"10390:17:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"arguments":[{"arguments":[{"id":468,"name":"_FORWARD_REQUEST_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"10052:25:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":469,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"10099:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10107:4:2","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":193,"src":"10099:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":471,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"10133:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10141:2:2","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":195,"src":"10133:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":473,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"10165:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10173:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":197,"src":"10165:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":475,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"10200:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10208:3:2","memberName":"gas","nodeType":"MemberAccess","referencedDeclaration":199,"src":"10200:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"id":478,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"10240:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10248:4:2","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":193,"src":"10240:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":477,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"10233:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10233:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":481,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"10275:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10283:8:2","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":201,"src":"10275:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"arguments":[{"expression":{"id":484,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"10323:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10331:4:2","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":203,"src":"10323:12:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":483,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10313:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10313:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":466,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10020:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10024:6:2","memberName":"encode","nodeType":"MemberAccess","src":"10020:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:334:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":465,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9993:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9993:375:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":464,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"9963:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9963:415:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10379:10:2","memberName":"tryRecover","nodeType":"MemberAccess","referencedDeclaration":2927,"src":"9963:426:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9963:445:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"9915:493:2"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":495,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"10427:3:2","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":496,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"10434:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3201_$","typeString":"type(library ECDSA)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10440:12:2","memberName":"RecoverError","nodeType":"MemberAccess","referencedDeclaration":2861,"src":"10434:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2861_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10453:7:2","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2857,"src":"10434:26:2","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"src":"10427:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":500,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"10462:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10426:46:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":458,"id":502,"nodeType":"Return","src":"10419:53:2"}]},"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"9469:281:2","text":" @dev Returns a tuple with the recovered the signer of an EIP712 forward request message hash\n and a boolean indicating if the signature is valid.\n NOTE: The signature is considered valid if {ECDSA-tryRecover} indicates no recover error for it."},"id":504,"implemented":true,"kind":"function","modifiers":[],"name":"_recoverForwardRequestSigner","nameLocation":"9764:28:2","nodeType":"FunctionDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"request","nameLocation":"9830:7:2","nodeType":"VariableDeclaration","scope":504,"src":"9802:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"ForwardRequestData","nameLocations":["9802:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"9802:18:2"},"referencedDeclaration":206,"src":"9802:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"visibility":"internal"}],"src":"9792:51:2"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"isValid","nameLocation":"9880:7:2","nodeType":"VariableDeclaration","scope":504,"src":"9875:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":454,"name":"bool","nodeType":"ElementaryTypeName","src":"9875:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"signer","nameLocation":"9897:6:2","nodeType":"VariableDeclaration","scope":504,"src":"9889:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"9889:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9874:30:2"},"scope":678,"src":"9755:724:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":615,"nodeType":"Block","src":"11206:1516:2","statements":[{"assignments":[516,518,520,522],"declarations":[{"constant":false,"id":516,"mutability":"mutable","name":"isTrustedForwarder","nameLocation":"11222:18:2","nodeType":"VariableDeclaration","scope":615,"src":"11217:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":515,"name":"bool","nodeType":"ElementaryTypeName","src":"11217:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"active","nameLocation":"11247:6:2","nodeType":"VariableDeclaration","scope":615,"src":"11242:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":517,"name":"bool","nodeType":"ElementaryTypeName","src":"11242:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"signerMatch","nameLocation":"11260:11:2","nodeType":"VariableDeclaration","scope":615,"src":"11255:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":519,"name":"bool","nodeType":"ElementaryTypeName","src":"11255:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"signer","nameLocation":"11281:6:2","nodeType":"VariableDeclaration","scope":615,"src":"11273:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"11273:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":526,"initialValue":{"arguments":[{"id":524,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"11301:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}],"id":523,"name":"_validate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"11291:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_ForwardRequestData_$206_calldata_ptr_$returns$_t_bool_$_t_bool_$_t_bool_$_t_address_$","typeString":"function (struct ERC2771Forwarder.ForwardRequestData calldata) view returns (bool,bool,bool,address)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11291:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bool_$_t_bool_$_t_address_$","typeString":"tuple(bool,bool,bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"11216:93:2"},{"condition":{"id":527,"name":"requireValidRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"11507:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"11503:402:2","trueBody":{"id":560,"nodeType":"Block","src":"11528:377:2","statements":[{"condition":{"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11546:19:2","subExpression":{"id":528,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"11547:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":540,"nodeType":"IfStatement","src":"11542:115:2","trueBody":{"id":539,"nodeType":"Block","src":"11567:90:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":531,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"11616:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11624:2:2","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":195,"src":"11616:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":535,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11636:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC2771Forwarder_$678","typeString":"contract ERC2771Forwarder"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC2771Forwarder_$678","typeString":"contract ERC2771Forwarder"}],"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11628:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"11628:7:2","typeDescriptions":{}}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"ERC2771UntrustfulTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"11592:23:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11592:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"RevertStatement","src":"11585:57:2"}]}},{"condition":{"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11675:7:2","subExpression":{"id":541,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"11676:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":549,"nodeType":"IfStatement","src":"11671:101:2","trueBody":{"id":548,"nodeType":"Block","src":"11684:88:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":544,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"11740:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11748:8:2","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":201,"src":"11740:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":543,"name":"ERC2771ForwarderExpiredRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"11709:30:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint48_$returns$__$","typeString":"function (uint48) pure"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11709:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":547,"nodeType":"RevertStatement","src":"11702:55:2"}]}},{"condition":{"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11790:12:2","subExpression":{"id":550,"name":"signerMatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"11791:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":559,"nodeType":"IfStatement","src":"11786:109:2","trueBody":{"id":558,"nodeType":"Block","src":"11804:91:2","statements":[{"errorCall":{"arguments":[{"id":553,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"11859:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":554,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"11867:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:4:2","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":193,"src":"11867:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":552,"name":"ERC2771ForwarderInvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"11829:29:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11829:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"RevertStatement","src":"11822:58:2"}]}}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":562,"name":"isTrustedForwarder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"11992:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":563,"name":"signerMatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"12014:11:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11992:33:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":565,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"12029:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11992:43:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":614,"nodeType":"IfStatement","src":"11988:728:2","trueBody":{"id":613,"nodeType":"Block","src":"12037:679:2","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"currentNonce","nameLocation":"12144:12:2","nodeType":"VariableDeclaration","scope":613,"src":"12136:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":572,"initialValue":{"arguments":[{"id":570,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"12169:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":569,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"12159:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12159:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12136:40:2"},{"assignments":[574],"declarations":[{"constant":false,"id":574,"mutability":"mutable","name":"reqGas","nameLocation":"12199:6:2","nodeType":"VariableDeclaration","scope":613,"src":"12191:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"12191:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":577,"initialValue":{"expression":{"id":575,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"12208:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12216:3:2","memberName":"gas","nodeType":"MemberAccess","referencedDeclaration":199,"src":"12208:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12191:28:2"},{"assignments":[579],"declarations":[{"constant":false,"id":579,"mutability":"mutable","name":"to","nameLocation":"12241:2:2","nodeType":"VariableDeclaration","scope":613,"src":"12233:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"12233:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":582,"initialValue":{"expression":{"id":580,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"12246:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12254:2:2","memberName":"to","nodeType":"MemberAccess","referencedDeclaration":195,"src":"12246:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12233:23:2"},{"assignments":[584],"declarations":[{"constant":false,"id":584,"mutability":"mutable","name":"value","nameLocation":"12278:5:2","nodeType":"VariableDeclaration","scope":613,"src":"12270:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"12270:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":587,"initialValue":{"expression":{"id":585,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"12286:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12294:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":197,"src":"12286:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12270:29:2"},{"assignments":[589],"declarations":[{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"12326:4:2","nodeType":"VariableDeclaration","scope":613,"src":"12313:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"12313:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":597,"initialValue":{"arguments":[{"expression":{"id":592,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"12350:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12358:4:2","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":203,"src":"12350:12:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"expression":{"id":594,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"12364:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12372:4:2","memberName":"from","nodeType":"MemberAccess","referencedDeclaration":193,"src":"12364:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":590,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12333:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12337:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"12333:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12333:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12313:64:2"},{"assignments":[599],"declarations":[{"constant":false,"id":599,"mutability":"mutable","name":"gasLeft","nameLocation":"12400:7:2","nodeType":"VariableDeclaration","scope":613,"src":"12392:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"12392:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":600,"nodeType":"VariableDeclarationStatement","src":"12392:15:2"},{"AST":{"nodeType":"YulBlock","src":"12447:135:2","statements":[{"nodeType":"YulAssignment","src":"12465:70:2","value":{"arguments":[{"name":"reqGas","nodeType":"YulIdentifier","src":"12481:6:2"},{"name":"to","nodeType":"YulIdentifier","src":"12489:2:2"},{"name":"value","nodeType":"YulIdentifier","src":"12493:5:2"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12504:4:2"},{"kind":"number","nodeType":"YulLiteral","src":"12510:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12500:3:2"},"nodeType":"YulFunctionCall","src":"12500:15:2"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"12523:4:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12517:5:2"},"nodeType":"YulFunctionCall","src":"12517:11:2"},{"kind":"number","nodeType":"YulLiteral","src":"12530:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12533:1:2","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"12476:4:2"},"nodeType":"YulFunctionCall","src":"12476:59:2"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"12465:7:2"}]},{"nodeType":"YulAssignment","src":"12552:16:2","value":{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"12563:3:2"},"nodeType":"YulFunctionCall","src":"12563:5:2"},"variableNames":[{"name":"gasLeft","nodeType":"YulIdentifier","src":"12552:7:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":589,"isOffset":false,"isSlot":false,"src":"12504:4:2","valueSize":1},{"declaration":589,"isOffset":false,"isSlot":false,"src":"12523:4:2","valueSize":1},{"declaration":599,"isOffset":false,"isSlot":false,"src":"12552:7:2","valueSize":1},{"declaration":574,"isOffset":false,"isSlot":false,"src":"12481:6:2","valueSize":1},{"declaration":513,"isOffset":false,"isSlot":false,"src":"12465:7:2","valueSize":1},{"declaration":579,"isOffset":false,"isSlot":false,"src":"12489:2:2","valueSize":1},{"declaration":584,"isOffset":false,"isSlot":false,"src":"12493:5:2","valueSize":1}],"flags":["memory-safe"],"id":601,"nodeType":"InlineAssembly","src":"12422:160:2"},{"expression":{"arguments":[{"id":603,"name":"gasLeft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"12615:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":604,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"12624:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}],"id":602,"name":"_checkForwardedGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"12596:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_struct$_ForwardRequestData_$206_calldata_ptr_$returns$__$","typeString":"function (uint256,struct ERC2771Forwarder.ForwardRequestData calldata) pure"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12596:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":606,"nodeType":"ExpressionStatement","src":"12596:36:2"},{"eventCall":{"arguments":[{"id":608,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"12675:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":609,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"12683:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":610,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"12697:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":607,"name":"ExecutedForwardRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"12652:22:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12652:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":612,"nodeType":"EmitStatement","src":"12647:58:2"}]}}]},"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"10485:573:2","text":" @dev Validates and executes a signed request returning the request call `success` value.\n Internal function without msg.value validation.\n Requirements:\n - The caller must have provided enough gas to forward with the call.\n - The request must be valid (see {verify}) if the `requireValidRequest` is true.\n Emits an {ExecutedForwardRequest} event.\n IMPORTANT: Using this function doesn't check that all the `msg.value` was sent, potentially\n leaving value stuck in the contract."},"id":616,"implemented":true,"kind":"function","modifiers":[],"name":"_execute","nameLocation":"11072:8:2","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"request","nameLocation":"11118:7:2","nodeType":"VariableDeclaration","scope":616,"src":"11090:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"},"typeName":{"id":507,"nodeType":"UserDefinedTypeName","pathNode":{"id":506,"name":"ForwardRequestData","nameLocations":["11090:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"11090:18:2"},"referencedDeclaration":206,"src":"11090:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"requireValidRequest","nameLocation":"11140:19:2","nodeType":"VariableDeclaration","scope":616,"src":"11135:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":509,"name":"bool","nodeType":"ElementaryTypeName","src":"11135:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11080:85:2"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"success","nameLocation":"11197:7:2","nodeType":"VariableDeclaration","scope":616,"src":"11192:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":512,"name":"bool","nodeType":"ElementaryTypeName","src":"11192:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11191:14:2"},"scope":678,"src":"11063:1659:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"13214:1006:2","statements":[{"assignments":[625],"declarations":[{"constant":false,"id":625,"mutability":"mutable","name":"encodedParams","nameLocation":"13237:13:2","nodeType":"VariableDeclaration","scope":657,"src":"13224:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":624,"name":"bytes","nodeType":"ElementaryTypeName","src":"13224:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":636,"initialValue":{"arguments":[{"expression":{"id":628,"name":"ERC2771Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"13268:14:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC2771Context_$169_$","typeString":"type(contract ERC2771Context)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13283:18:2","memberName":"isTrustedForwarder","nodeType":"MemberAccess","referencedDeclaration":68,"src":"13268:33:2","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_address_$returns$_t_bool_$","typeString":"function ERC2771Context.isTrustedForwarder(address) view returns (bool)"}},{"components":[{"arguments":[{"id":632,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13312:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_ERC2771Forwarder_$678","typeString":"contract ERC2771Forwarder"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC2771Forwarder_$678","typeString":"contract ERC2771Forwarder"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13304:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:2","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13304:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13303:15:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$_t_address_$returns$_t_bool_$","typeString":"function ERC2771Context.isTrustedForwarder(address) view returns (bool)"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":626,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13253:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13257:10:2","memberName":"encodeCall","nodeType":"MemberAccess","src":"13253:14:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13253:66:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"13224:95:2"},{"assignments":[638],"declarations":[{"constant":false,"id":638,"mutability":"mutable","name":"success","nameLocation":"13335:7:2","nodeType":"VariableDeclaration","scope":657,"src":"13330:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":637,"name":"bool","nodeType":"ElementaryTypeName","src":"13330:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":639,"nodeType":"VariableDeclarationStatement","src":"13330:12:2"},{"assignments":[641],"declarations":[{"constant":false,"id":641,"mutability":"mutable","name":"returnSize","nameLocation":"13360:10:2","nodeType":"VariableDeclaration","scope":657,"src":"13352:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"13352:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":642,"nodeType":"VariableDeclarationStatement","src":"13352:18:2"},{"assignments":[644],"declarations":[{"constant":false,"id":644,"mutability":"mutable","name":"returnValue","nameLocation":"13388:11:2","nodeType":"VariableDeclaration","scope":657,"src":"13380:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"13380:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":645,"nodeType":"VariableDeclarationStatement","src":"13380:19:2"},{"AST":{"nodeType":"YulBlock","src":"13434:714:2","statements":[{"nodeType":"YulAssignment","src":"13966:93:2","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"13988:3:2"},"nodeType":"YulFunctionCall","src":"13988:5:2"},{"name":"target","nodeType":"YulIdentifier","src":"13995:6:2"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"14007:13:2"},{"kind":"number","nodeType":"YulLiteral","src":"14022:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14003:3:2"},"nodeType":"YulFunctionCall","src":"14003:24:2"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"14035:13:2"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14029:5:2"},"nodeType":"YulFunctionCall","src":"14029:20:2"},{"kind":"number","nodeType":"YulLiteral","src":"14051:1:2","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14054:4:2","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"13977:10:2"},"nodeType":"YulFunctionCall","src":"13977:82:2"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"13966:7:2"}]},{"nodeType":"YulAssignment","src":"14072:30:2","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"14086:14:2"},"nodeType":"YulFunctionCall","src":"14086:16:2"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"14072:10:2"}]},{"nodeType":"YulAssignment","src":"14115:23:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14136:1:2","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14130:5:2"},"nodeType":"YulFunctionCall","src":"14130:8:2"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"14115:11:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":625,"isOffset":false,"isSlot":false,"src":"14007:13:2","valueSize":1},{"declaration":625,"isOffset":false,"isSlot":false,"src":"14035:13:2","valueSize":1},{"declaration":641,"isOffset":false,"isSlot":false,"src":"14072:10:2","valueSize":1},{"declaration":644,"isOffset":false,"isSlot":false,"src":"14115:11:2","valueSize":1},{"declaration":638,"isOffset":false,"isSlot":false,"src":"13966:7:2","valueSize":1},{"declaration":619,"isOffset":false,"isSlot":false,"src":"13995:6:2","valueSize":1}],"flags":["memory-safe"],"id":646,"nodeType":"InlineAssembly","src":"13409:739:2"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"14165:7:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":648,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"14176:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14190:4:2","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"14176:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14165:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":652,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"14198:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14212:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14198:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14165:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":623,"id":656,"nodeType":"Return","src":"14158:55:2"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"12728:400:2","text":" @dev Returns whether the target trusts this forwarder.\n This function performs a static call to the target contract calling the\n {ERC2771Context-isTrustedForwarder} function.\n NOTE: Consider the execution of this forwarder is permissionless. Without this check, anyone may transfer assets\n that are owned by, or are approved to this forwarder."},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_isTrustedByTarget","nameLocation":"13142:18:2","nodeType":"FunctionDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"target","nameLocation":"13169:6:2","nodeType":"VariableDeclaration","scope":658,"src":"13161:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"13161:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13160:16:2"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"13208:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":621,"name":"bool","nodeType":"ElementaryTypeName","src":"13208:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13207:6:2"},"scope":678,"src":"13133:1087:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":676,"nodeType":"Block","src":"14935:2064:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":667,"name":"gasLeft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"16574:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":668,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"16584:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData calldata"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16592:3:2","memberName":"gas","nodeType":"MemberAccess","referencedDeclaration":199,"src":"16584:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3633","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16598:2:2","typeDescriptions":{"typeIdentifier":"t_rational_63_by_1","typeString":"int_const 63"},"value":"63"},"src":"16584:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16574:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":675,"nodeType":"IfStatement","src":"16570:423:2","trueBody":{"id":674,"nodeType":"Block","src":"16602:391:2","statements":[{"AST":{"nodeType":"YulBlock","src":"16942:41:2","statements":[{"expression":{"arguments":[],"functionName":{"name":"invalid","nodeType":"YulIdentifier","src":"16960:7:2"},"nodeType":"YulFunctionCall","src":"16960:9:2"},"nodeType":"YulExpressionStatement","src":"16960:9:2"}]},"evmVersion":"paris","externalReferences":[],"flags":["memory-safe"],"id":673,"nodeType":"InlineAssembly","src":"16917:66:2"}]}}]},"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"14226:609:2","text":" @dev Checks if the requested gas was correctly forwarded to the callee.\n As a consequence of https://eips.ethereum.org/EIPS/eip-150[EIP-150]:\n - At most `gasleft() - floor(gasleft() / 64)` is forwarded to the callee.\n - At least `floor(gasleft() / 64)` is kept in the caller.\n It reverts consuming all the available gas if the forwarded gas is not the requested gas.\n IMPORTANT: The `gasLeft` parameter should be measured exactly at the end of the forwarded call.\n Any gas consumed in between will make room for bypassing this check."},"id":677,"implemented":true,"kind":"function","modifiers":[],"name":"_checkForwardedGas","nameLocation":"14849:18:2","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"gasLeft","nameLocation":"14876:7:2","nodeType":"VariableDeclaration","scope":677,"src":"14868:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"14868:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"request","nameLocation":"14913:7:2","nodeType":"VariableDeclaration","scope":677,"src":"14885:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_calldata_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"},"typeName":{"id":663,"nodeType":"UserDefinedTypeName","pathNode":{"id":662,"name":"ForwardRequestData","nameLocations":["14885:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":206,"src":"14885:18:2"},"referencedDeclaration":206,"src":"14885:18:2","typeDescriptions":{"typeIdentifier":"t_struct$_ForwardRequestData_$206_storage_ptr","typeString":"struct ERC2771Forwarder.ForwardRequestData"}},"visibility":"internal"}],"src":"14867:54:2"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"14935:0:2"},"scope":678,"src":"14840:2159:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":679,"src":"2778:14223:2","usedErrors":[227,234,239,246,978,981,1000,1124,1126],"usedEvents":[4,220]}],"src":"111:16891:2"},"id":2},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[938],"Errors":[990]},"id":939,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":680,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":682,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":939,"sourceUnit":991,"src":"127:36:3","symbolAliases":[{"foreign":{"id":681,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"135:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"165:67:3","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":938,"linearizedBaseContracts":[938],"name":"Address","nameLocation":"241:7:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"255:75:3","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":688,"name":"AddressEmptyCode","nameLocation":"341:16:3","nodeType":"ErrorDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"target","nameLocation":"366:6:3","nodeType":"VariableDeclaration","scope":688,"src":"358:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":685,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:3"},"src":"335:39:3"},{"body":{"id":735,"nodeType":"Block","src":"1361:294:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":698,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$938","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$938","typeString":"library Address"}],"id":697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:3","typeDescriptions":{}}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:3","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"1399:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":715,"nodeType":"IfStatement","src":"1371:125:3","trueBody":{"id":714,"nodeType":"Block","src":"1407:89:3","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":708,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$938","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$938","typeString":"library Address"}],"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":706,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:3","typeDescriptions":{}}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:3","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":711,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"1478:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":703,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"1428:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$990_$","typeString":"type(library Errors)"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:3","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":978,"src":"1428:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"RevertStatement","src":"1421:64:3"}]}},{"assignments":[717,719],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"success","nameLocation":"1512:7:3","nodeType":"VariableDeclaration","scope":735,"src":"1507:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":716,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"returndata","nameLocation":"1534:10:3","nodeType":"VariableDeclaration","scope":735,"src":"1521:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":718,"name":"bytes","nodeType":"ElementaryTypeName","src":"1521:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":726,"initialValue":{"arguments":[{"hexValue":"","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1578:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":720,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"1548:9:3","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1558:4:3","memberName":"call","nodeType":"MemberAccess","src":"1548:14:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":722,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"1570:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1548:29:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1548:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:75:3"},{"condition":{"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1595:8:3","subExpression":{"id":727,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"1596:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":734,"nodeType":"IfStatement","src":"1591:58:3","trueBody":{"id":733,"nodeType":"Block","src":"1605:44:3","statements":[{"expression":{"arguments":[{"id":730,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"1627:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":729,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"1619:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1619:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":732,"nodeType":"ExpressionStatement","src":"1619:19:3"}]}}]},"documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"380:905:3","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":736,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:3","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:3","nodeType":"VariableDeclaration","scope":736,"src":"1309:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:3","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"amount","nameLocation":"1344:6:3","nodeType":"VariableDeclaration","scope":736,"src":"1336:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:3"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[],"src":"1361:0:3"},"scope":938,"src":"1290:365:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":752,"nodeType":"Block","src":"2589:62:3","statements":[{"expression":{"arguments":[{"id":747,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"2628:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":748,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"2636:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2642:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":746,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"2606:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":745,"id":751,"nodeType":"Return","src":"2599:45:3"}]},"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"1661:834:3","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":753,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2509:12:3","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"target","nameLocation":"2530:6:3","nodeType":"VariableDeclaration","scope":753,"src":"2522:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"2522:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"data","nameLocation":"2551:4:3","nodeType":"VariableDeclaration","scope":753,"src":"2538:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":740,"name":"bytes","nodeType":"ElementaryTypeName","src":"2538:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2521:35:3"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":753,"src":"2575:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":743,"name":"bytes","nodeType":"ElementaryTypeName","src":"2575:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2574:14:3"},"scope":938,"src":"2500:151:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":802,"nodeType":"Block","src":"3088:294:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":767,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3110:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$938","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$938","typeString":"library Address"}],"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"3102:7:3","typeDescriptions":{}}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3116:7:3","memberName":"balance","nodeType":"MemberAccess","src":"3102:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3126:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3102:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"3098:123:3","trueBody":{"id":783,"nodeType":"Block","src":"3133:88:3","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":777,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3189:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$938","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$938","typeString":"library Address"}],"id":776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3181:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:3","typeDescriptions":{}}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:7:3","memberName":"balance","nodeType":"MemberAccess","src":"3181:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3204:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":772,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"3154:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$990_$","typeString":"type(library Errors)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3161:19:3","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":978,"src":"3154:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3154:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":782,"nodeType":"RevertStatement","src":"3147:63:3"}]}},{"assignments":[786,788],"declarations":[{"constant":false,"id":786,"mutability":"mutable","name":"success","nameLocation":"3236:7:3","nodeType":"VariableDeclaration","scope":802,"src":"3231:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":785,"name":"bool","nodeType":"ElementaryTypeName","src":"3231:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"returndata","nameLocation":"3258:10:3","nodeType":"VariableDeclaration","scope":802,"src":"3245:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":787,"name":"bytes","nodeType":"ElementaryTypeName","src":"3245:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":795,"initialValue":{"arguments":[{"id":793,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"3298:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":789,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"3272:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3279:4:3","memberName":"call","nodeType":"MemberAccess","src":"3272:11:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"3291:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3272:25:3","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3272:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3230:73:3"},{"expression":{"arguments":[{"id":797,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"3347:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":798,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3355:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":799,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"3364:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":796,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"3320:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3320:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":764,"id":801,"nodeType":"Return","src":"3313:62:3"}]},"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"2657:313:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":803,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2984:21:3","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"target","nameLocation":"3014:6:3","nodeType":"VariableDeclaration","scope":803,"src":"3006:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"data","nameLocation":"3035:4:3","nodeType":"VariableDeclaration","scope":803,"src":"3022:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":757,"name":"bytes","nodeType":"ElementaryTypeName","src":"3022:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":760,"mutability":"mutable","name":"value","nameLocation":"3049:5:3","nodeType":"VariableDeclaration","scope":803,"src":"3041:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3041:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3005:50:3"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":803,"src":"3074:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3073:14:3"},"scope":938,"src":"2975:407:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":828,"nodeType":"Block","src":"3621:154:3","statements":[{"assignments":[814,816],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"success","nameLocation":"3637:7:3","nodeType":"VariableDeclaration","scope":828,"src":"3632:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":813,"name":"bool","nodeType":"ElementaryTypeName","src":"3632:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":816,"mutability":"mutable","name":"returndata","nameLocation":"3659:10:3","nodeType":"VariableDeclaration","scope":828,"src":"3646:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":815,"name":"bytes","nodeType":"ElementaryTypeName","src":"3646:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":821,"initialValue":{"arguments":[{"id":819,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"3691:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":817,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"3673:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3680:10:3","memberName":"staticcall","nodeType":"MemberAccess","src":"3673:17:3","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3631:65:3"},{"expression":{"arguments":[{"id":823,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"3740:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":824,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3748:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":825,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"3757:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":822,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"3713:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3713:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":812,"id":827,"nodeType":"Return","src":"3706:62:3"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"3388:128:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":829,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3530:18:3","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"target","nameLocation":"3557:6:3","nodeType":"VariableDeclaration","scope":829,"src":"3549:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"3549:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"data","nameLocation":"3578:4:3","nodeType":"VariableDeclaration","scope":829,"src":"3565:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":807,"name":"bytes","nodeType":"ElementaryTypeName","src":"3565:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3548:35:3"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":829,"src":"3607:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":810,"name":"bytes","nodeType":"ElementaryTypeName","src":"3607:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3606:14:3"},"scope":938,"src":"3521:254:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":854,"nodeType":"Block","src":"4013:156:3","statements":[{"assignments":[840,842],"declarations":[{"constant":false,"id":840,"mutability":"mutable","name":"success","nameLocation":"4029:7:3","nodeType":"VariableDeclaration","scope":854,"src":"4024:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":839,"name":"bool","nodeType":"ElementaryTypeName","src":"4024:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":842,"mutability":"mutable","name":"returndata","nameLocation":"4051:10:3","nodeType":"VariableDeclaration","scope":854,"src":"4038:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":841,"name":"bytes","nodeType":"ElementaryTypeName","src":"4038:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":847,"initialValue":{"arguments":[{"id":845,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"4085:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":843,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"4065:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4072:12:3","memberName":"delegatecall","nodeType":"MemberAccess","src":"4065:19:3","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4023:67:3"},{"expression":{"arguments":[{"id":849,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"4134:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":850,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"4142:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":851,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"4151:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":848,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"4107:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4107:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":838,"id":853,"nodeType":"Return","src":"4100:62:3"}]},"documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"3781:130:3","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":855,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3925:20:3","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"target","nameLocation":"3954:6:3","nodeType":"VariableDeclaration","scope":855,"src":"3946:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"3946:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"data","nameLocation":"3975:4:3","nodeType":"VariableDeclaration","scope":855,"src":"3962:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3962:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3945:35:3"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":855,"src":"3999:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":836,"name":"bytes","nodeType":"ElementaryTypeName","src":"3999:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3998:14:3"},"scope":938,"src":"3916:253:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":894,"nodeType":"Block","src":"4595:424:3","statements":[{"condition":{"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4609:8:3","subExpression":{"id":867,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"4610:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":892,"nodeType":"Block","src":"4669:344:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":874,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4857:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4868:6:3","memberName":"length","nodeType":"MemberAccess","src":"4857:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":878,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"4883:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4890:4:3","memberName":"code","nodeType":"MemberAccess","src":"4883:11:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:3","memberName":"length","nodeType":"MemberAccess","src":"4883:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4883:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4857:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":889,"nodeType":"IfStatement","src":"4853:119:3","trueBody":{"id":888,"nodeType":"Block","src":"4908:64:3","statements":[{"errorCall":{"arguments":[{"id":885,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"4950:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":884,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"4933:16:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":887,"nodeType":"RevertStatement","src":"4926:31:3"}]}},{"expression":{"id":890,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4992:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":866,"id":891,"nodeType":"Return","src":"4985:17:3"}]},"id":893,"nodeType":"IfStatement","src":"4605:408:3","trueBody":{"id":873,"nodeType":"Block","src":"4619:44:3","statements":[{"expression":{"arguments":[{"id":870,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4641:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":869,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"4633:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":872,"nodeType":"ExpressionStatement","src":"4633:19:3"}]}}]},"documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"4175:257:3","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":895,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4446:26:3","nodeType":"FunctionDefinition","parameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"target","nameLocation":"4490:6:3","nodeType":"VariableDeclaration","scope":895,"src":"4482:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"4482:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"success","nameLocation":"4511:7:3","nodeType":"VariableDeclaration","scope":895,"src":"4506:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":859,"name":"bool","nodeType":"ElementaryTypeName","src":"4506:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"returndata","nameLocation":"4541:10:3","nodeType":"VariableDeclaration","scope":895,"src":"4528:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":861,"name":"bytes","nodeType":"ElementaryTypeName","src":"4528:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4472:85:3"},"returnParameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":895,"src":"4581:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":864,"name":"bytes","nodeType":"ElementaryTypeName","src":"4581:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4580:14:3"},"scope":938,"src":"4437:582:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":916,"nodeType":"Block","src":"5323:122:3","statements":[{"condition":{"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:8:3","subExpression":{"id":905,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"5338:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":914,"nodeType":"Block","src":"5397:42:3","statements":[{"expression":{"id":912,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"5418:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":904,"id":913,"nodeType":"Return","src":"5411:17:3"}]},"id":915,"nodeType":"IfStatement","src":"5333:106:3","trueBody":{"id":911,"nodeType":"Block","src":"5347:44:3","statements":[{"expression":{"arguments":[{"id":908,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"5369:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":907,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"5361:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5361:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":910,"nodeType":"ExpressionStatement","src":"5361:19:3"}]}}]},"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"5025:191:3","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":917,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5230:16:3","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"success","nameLocation":"5252:7:3","nodeType":"VariableDeclaration","scope":917,"src":"5247:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":897,"name":"bool","nodeType":"ElementaryTypeName","src":"5247:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"returndata","nameLocation":"5274:10:3","nodeType":"VariableDeclaration","scope":917,"src":"5261:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":899,"name":"bytes","nodeType":"ElementaryTypeName","src":"5261:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5246:39:3"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":917,"src":"5309:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":902,"name":"bytes","nodeType":"ElementaryTypeName","src":"5309:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5308:14:3"},"scope":938,"src":"5221:224:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":936,"nodeType":"Block","src":"5614:379:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":923,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5690:10:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5701:6:3","memberName":"length","nodeType":"MemberAccess","src":"5690:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5710:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5690:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":934,"nodeType":"Block","src":"5936:51:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":929,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"5957:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$990_$","typeString":"type(library Errors)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5964:10:3","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":981,"src":"5957:17:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5957:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"RevertStatement","src":"5950:26:3"}]},"id":935,"nodeType":"IfStatement","src":"5686:301:3","trueBody":{"id":928,"nodeType":"Block","src":"5713:217:3","statements":[{"AST":{"nodeType":"YulBlock","src":"5840:80:3","statements":[{"expression":{"arguments":[{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"5869:10:3"},{"kind":"number","nodeType":"YulLiteral","src":"5881:4:3","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5865:3:3"},"nodeType":"YulFunctionCall","src":"5865:21:3"},{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"5894:10:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5888:5:3"},"nodeType":"YulFunctionCall","src":"5888:17:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5858:6:3"},"nodeType":"YulFunctionCall","src":"5858:48:3"},"nodeType":"YulExpressionStatement","src":"5858:48:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":920,"isOffset":false,"isSlot":false,"src":"5869:10:3","valueSize":1},{"declaration":920,"isOffset":false,"isSlot":false,"src":"5894:10:3","valueSize":1}],"flags":["memory-safe"],"id":927,"nodeType":"InlineAssembly","src":"5815:105:3"}]}}]},"documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"5451:103:3","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":937,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5568:7:3","nodeType":"FunctionDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":920,"mutability":"mutable","name":"returndata","nameLocation":"5589:10:3","nodeType":"VariableDeclaration","scope":937,"src":"5576:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":919,"name":"bytes","nodeType":"ElementaryTypeName","src":"5576:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5575:25:3"},"returnParameters":{"id":922,"nodeType":"ParameterList","parameters":[],"src":"5614:0:3"},"scope":938,"src":"5559:434:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":939,"src":"233:5762:3","usedErrors":[688],"usedEvents":[]}],"src":"101:5895:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[968]},"id":969,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":940,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":968,"linearizedBaseContracts":[968],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":949,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":946,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":945,"id":948,"nodeType":"Return","src":"728:17:4"}]},"id":950,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":950,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":968,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":958,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":955,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":954,"id":957,"nodeType":"Return","src":"835:15:4"}]},"id":959,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":952,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":968,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":966,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":963,"id":965,"nodeType":"Return","src":"945:8:4"}]},"id":967,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":967,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":968,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":969,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"},"id":4},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[990]},"id":991,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":970,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":971,"nodeType":"StructuredDocumentation","src":"126:284:5","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":990,"linearizedBaseContracts":[990],"name":"Errors","nameLocation":"419:6:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"432:94:5","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":978,"name":"InsufficientBalance","nameLocation":"537:19:5","nodeType":"ErrorDefinition","parameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"balance","nameLocation":"565:7:5","nodeType":"VariableDeclaration","scope":978,"src":"557:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"needed","nameLocation":"582:6:5","nodeType":"VariableDeclaration","scope":978,"src":"574:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:5"},"src":"531:59:5"},{"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"596:89:5","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":981,"name":"FailedCall","nameLocation":"696:10:5","nodeType":"ErrorDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"706:2:5"},"src":"690:19:5"},{"documentation":{"id":982,"nodeType":"StructuredDocumentation","src":"715:46:5","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":984,"name":"FailedDeployment","nameLocation":"772:16:5","nodeType":"ErrorDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[],"src":"788:2:5"},"src":"766:25:5"},{"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"797:58:5","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":989,"name":"MissingPrecompile","nameLocation":"866:17:5","nodeType":"ErrorDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":989,"src":"884:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:5"},"src":"860:33:5"}],"scope":991,"src":"411:484:5","usedErrors":[978,981,984,989],"usedEvents":[]}],"src":"100:796:5"},"id":5},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1058]},"id":1059,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":992,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"125:83:6","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1058,"linearizedBaseContracts":[1058],"name":"Nonces","nameLocation":"227:6:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"240:90:6","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1000,"name":"InvalidAccountNonce","nameLocation":"341:19:6","nodeType":"ErrorDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"account","nameLocation":"369:7:6","nodeType":"VariableDeclaration","scope":1000,"src":"361:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:6","nodeType":"VariableDeclaration","scope":1000,"src":"378:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":997,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:6"},"src":"335:65:6"},{"constant":false,"id":1004,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:6","nodeType":"VariableDeclaration","scope":1058,"src":"406:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1003,"keyName":"account","keyNameLocation":"422:7:6","keyType":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1002,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1016,"nodeType":"Block","src":"607:38:6","statements":[{"expression":{"baseExpression":{"id":1012,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"624:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1014,"indexExpression":{"id":1013,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"632:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1011,"id":1015,"nodeType":"Return","src":"617:21:6"}]},"documentation":{"id":1005,"nodeType":"StructuredDocumentation","src":"464:69:6","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1017,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:6","nodeType":"FunctionDefinition","parameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1007,"mutability":"mutable","name":"owner","nameLocation":"562:5:6","nodeType":"VariableDeclaration","scope":1017,"src":"554:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:6"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1017,"src":"598:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:6"},"scope":1058,"src":"538:107:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1031,"nodeType":"Block","src":"828:326:6","statements":[{"id":1030,"nodeType":"UncheckedBlock","src":"1031:117:6","statements":[{"expression":{"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:6","subExpression":{"baseExpression":{"id":1025,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"1121:7:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1027,"indexExpression":{"id":1026,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"1129:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1024,"id":1029,"nodeType":"Return","src":"1114:23:6"}]}]},"documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"651:103:6","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:6","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1020,"mutability":"mutable","name":"owner","nameLocation":"786:5:6","nodeType":"VariableDeclaration","scope":1032,"src":"778:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:6"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1032,"src":"819:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:6"},"scope":1058,"src":"759:395:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1056,"nodeType":"Block","src":"1338:149:6","statements":[{"assignments":[1041],"declarations":[{"constant":false,"id":1041,"mutability":"mutable","name":"current","nameLocation":"1356:7:6","nodeType":"VariableDeclaration","scope":1056,"src":"1348:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1045,"initialValue":{"arguments":[{"id":1043,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"1376:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1042,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"1366:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1046,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"1396:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1047,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"1405:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1055,"nodeType":"IfStatement","src":"1392:89:6","trueBody":{"id":1054,"nodeType":"Block","src":"1414:67:6","statements":[{"errorCall":{"arguments":[{"id":1050,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"1455:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1051,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"1462:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1049,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"1435:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"RevertStatement","src":"1428:42:6"}]}}]},"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"1160:100:6","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:6","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"owner","nameLocation":"1299:5:6","nodeType":"VariableDeclaration","scope":1057,"src":"1291:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:6","nodeType":"VariableDeclaration","scope":1057,"src":"1306:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:6"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"1338:0:6"},"scope":1058,"src":"1265:222:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1059,"src":"209:1280:6","usedErrors":[1000],"usedEvents":[]}],"src":"99:1391:6"},"id":6},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1110]},"id":1111,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1060,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"125:489:7","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1110,"linearizedBaseContracts":[1110],"name":"Panic","nameLocation":"665:5:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1062,"nodeType":"StructuredDocumentation","src":"677:36:7","text":"@dev generic / unspecified error"},"id":1065,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:7","nodeType":"VariableDeclaration","scope":1110,"src":"718:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"764:37:7","text":"@dev used by the assert() builtin"},"id":1069,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:7","nodeType":"VariableDeclaration","scope":1110,"src":"806:39:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"851:41:7","text":"@dev arithmetic underflow or overflow"},"id":1073,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:7","nodeType":"VariableDeclaration","scope":1110,"src":"897:47:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1071,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:7","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"950:35:7","text":"@dev division or modulo by zero"},"id":1077,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:7","nodeType":"VariableDeclaration","scope":1110,"src":"990:49:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"1045:30:7","text":"@dev enum conversion error"},"id":1081,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:7","nodeType":"VariableDeclaration","scope":1110,"src":"1080:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:7","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"1140:36:7","text":"@dev invalid encoding in storage"},"id":1085,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:7","nodeType":"VariableDeclaration","scope":1110,"src":"1181:55:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:7","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"1242:24:7","text":"@dev empty array pop"},"id":1089,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:7","nodeType":"VariableDeclaration","scope":1110,"src":"1271:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:7","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1090,"nodeType":"StructuredDocumentation","src":"1325:35:7","text":"@dev array out of bounds access"},"id":1093,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:7","nodeType":"VariableDeclaration","scope":1110,"src":"1365:52:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1094,"nodeType":"StructuredDocumentation","src":"1423:65:7","text":"@dev resource error (too large allocation or too large array)"},"id":1097,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:7","nodeType":"VariableDeclaration","scope":1110,"src":"1493:47:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:7","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"1546:42:7","text":"@dev calling invalid internal function"},"id":1101,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:7","nodeType":"VariableDeclaration","scope":1110,"src":"1593:58:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:7","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1108,"nodeType":"Block","src":"1819:151:7","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:7","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:7"},"nodeType":"YulFunctionCall","src":"1868:24:7"},"nodeType":"YulExpressionStatement","src":"1868:24:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:7","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:7"},"nodeType":"YulFunctionCall","src":"1905:18:7"},"nodeType":"YulExpressionStatement","src":"1905:18:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:7","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:7"},"nodeType":"YulFunctionCall","src":"1936:18:7"},"nodeType":"YulExpressionStatement","src":"1936:18:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1104,"isOffset":false,"isSlot":false,"src":"1918:4:7","valueSize":1}],"flags":["memory-safe"],"id":1107,"nodeType":"InlineAssembly","src":"1829:135:7"}]},"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"1658:113:7","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1109,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:7","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"code","nameLocation":"1799:4:7","nodeType":"VariableDeclaration","scope":1109,"src":"1791:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:7"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[],"src":"1819:0:7"},"scope":1110,"src":"1776:194:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1111,"src":"657:1315:7","usedErrors":[],"usedEvents":[]}],"src":"99:1874:7"},"id":7},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1116],"ShortStrings":[1327],"StorageSlot":[1451]},"id":1328,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1112,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1114,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1328,"sourceUnit":1452,"src":"132:46:8","symbolAliases":[{"foreign":{"id":1113,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"140:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1116,"name":"ShortString","nameLocation":"353:11:8","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:8","underlyingType":{"id":1115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"378:876:8","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":1327,"linearizedBaseContracts":[1327],"name":"ShortStrings","nameLocation":"1263:12:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1120,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:8","nodeType":"VariableDeclaration","scope":1327,"src":"1345:111:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1124,"name":"StringTooLong","nameLocation":"1469:13:8","nodeType":"ErrorDefinition","parameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"str","nameLocation":"1490:3:8","nodeType":"VariableDeclaration","scope":1124,"src":"1483:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1121,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:8"},"src":"1463:32:8"},{"errorSelector":"b3512b0c","id":1126,"name":"InvalidShortString","nameLocation":"1506:18:8","nodeType":"ErrorDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"1524:2:8"},"src":"1500:27:8"},{"body":{"id":1169,"nodeType":"Block","src":"1786:208:8","statements":[{"assignments":[1136],"declarations":[{"constant":false,"id":1136,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:8","nodeType":"VariableDeclaration","scope":1169,"src":"1796:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1135,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1141,"initialValue":{"arguments":[{"id":1139,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"1822:3:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1137,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:8","typeDescriptions":{}}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1142,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"1840:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:8","memberName":"length","nodeType":"MemberAccess","src":"1840:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:8","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1151,"nodeType":"IfStatement","src":"1836:72:8","trueBody":{"id":1150,"nodeType":"Block","src":"1858:50:8","statements":[{"errorCall":{"arguments":[{"id":1147,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"1893:3:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1146,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"1879:13:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"RevertStatement","src":"1872:25:8"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1160,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"1965:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1158,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:8","typeDescriptions":{}}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:8","typeDescriptions":{}}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1163,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"1974:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:8","memberName":"length","nodeType":"MemberAccess","src":"1974:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:8","typeDescriptions":{}}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1152,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"1924:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1116_$","typeString":"type(ShortString)"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:8","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:8","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1116_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"functionReturnParameters":1134,"id":1168,"nodeType":"Return","src":"1917:70:8"}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"1533:170:8","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1170,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:8","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"str","nameLocation":"1745:3:8","nodeType":"VariableDeclaration","scope":1170,"src":"1731:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1128,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:8"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1170,"src":"1773:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"},"typeName":{"id":1132,"nodeType":"UserDefinedTypeName","pathNode":{"id":1131,"name":"ShortString","nameLocations":["1773:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1116,"src":"1773:11:8"},"referencedDeclaration":1116,"src":"1773:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:8"},"scope":1327,"src":"1708:286:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1195,"nodeType":"Block","src":"2152:304:8","statements":[{"assignments":[1180],"declarations":[{"constant":false,"id":1180,"mutability":"mutable","name":"len","nameLocation":"2170:3:8","nodeType":"VariableDeclaration","scope":1195,"src":"2162:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1184,"initialValue":{"arguments":[{"id":1182,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"2187:4:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}],"id":1181,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"2176:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1116_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:8"},{"assignments":[1186],"declarations":[{"constant":false,"id":1186,"mutability":"mutable","name":"str","nameLocation":"2294:3:8","nodeType":"VariableDeclaration","scope":1195,"src":"2280:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1185,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1191,"initialValue":{"arguments":[{"hexValue":"3332","id":1189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1187,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:8"},{"AST":{"nodeType":"YulBlock","src":"2349:81:8","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:8"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:8"},"nodeType":"YulFunctionCall","src":"2363:16:8"},"nodeType":"YulExpressionStatement","src":"2363:16:8"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:8"},"nodeType":"YulFunctionCall","src":"2399:14:8"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:8"},"nodeType":"YulFunctionCall","src":"2392:28:8"},"nodeType":"YulExpressionStatement","src":"2392:28:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1180,"isOffset":false,"isSlot":false,"src":"2375:3:8","valueSize":1},{"declaration":1174,"isOffset":false,"isSlot":false,"src":"2415:4:8","valueSize":1},{"declaration":1186,"isOffset":false,"isSlot":false,"src":"2370:3:8","valueSize":1},{"declaration":1186,"isOffset":false,"isSlot":false,"src":"2403:3:8","valueSize":1}],"flags":["memory-safe"],"id":1192,"nodeType":"InlineAssembly","src":"2324:106:8"},{"expression":{"id":1193,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"2446:3:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1178,"id":1194,"nodeType":"Return","src":"2439:10:8"}]},"documentation":{"id":1171,"nodeType":"StructuredDocumentation","src":"2000:73:8","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1196,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:8","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:8","nodeType":"VariableDeclaration","scope":1196,"src":"2096:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"},"typeName":{"id":1173,"nodeType":"UserDefinedTypeName","pathNode":{"id":1172,"name":"ShortString","nameLocations":["2096:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1116,"src":"2096:11:8"},"referencedDeclaration":1116,"src":"2096:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:8"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1196,"src":"2137:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1176,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:8"},"scope":1327,"src":"2078:378:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1227,"nodeType":"Block","src":"2598:175:8","statements":[{"assignments":[1206],"declarations":[{"constant":false,"id":1206,"mutability":"mutable","name":"result","nameLocation":"2616:6:8","nodeType":"VariableDeclaration","scope":1227,"src":"2608:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1216,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1211,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"2652:4:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}],"expression":{"id":1209,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"2633:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1116_$","typeString":"type(ShortString)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:8","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:8","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1116_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:8","typeDescriptions":{}}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"2679:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:8","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1224,"nodeType":"IfStatement","src":"2675:69:8","trueBody":{"id":1223,"nodeType":"Block","src":"2692:52:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1220,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"2713:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"RevertStatement","src":"2706:27:8"}]}},{"expression":{"id":1225,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"2760:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1204,"id":1226,"nodeType":"Return","src":"2753:13:8"}]},"documentation":{"id":1197,"nodeType":"StructuredDocumentation","src":"2462:61:8","text":" @dev Return the length of a `ShortString`."},"id":1228,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:8","nodeType":"FunctionDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:8","nodeType":"VariableDeclaration","scope":1228,"src":"2548:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"},"typeName":{"id":1199,"nodeType":"UserDefinedTypeName","pathNode":{"id":1198,"name":"ShortString","nameLocations":["2548:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1116,"src":"2548:11:8"},"referencedDeclaration":1116,"src":"2548:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:8"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1228,"src":"2589:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:8"},"scope":1327,"src":"2528:245:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1267,"nodeType":"Block","src":"2996:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3016:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1239,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:8","typeDescriptions":{}}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:8","memberName":"length","nodeType":"MemberAccess","src":"3010:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1265,"nodeType":"Block","src":"3094:127:8","statements":[{"expression":{"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1254,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"3134:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1251,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"3108:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1451_$","typeString":"type(library StorageSlot)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:8","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":1428,"src":"3108:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$1348_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1348_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"3108:38:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3149:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1259,"nodeType":"ExpressionStatement","src":"3108:46:8"},{"expression":{"arguments":[{"id":1262,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"3192:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1260,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"3175:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1116_$","typeString":"type(ShortString)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:8","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:8","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1116_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"functionReturnParameters":1238,"id":1264,"nodeType":"Return","src":"3168:42:8"}]},"id":1266,"nodeType":"IfStatement","src":"3006:215:8","trueBody":{"id":1250,"nodeType":"Block","src":"3036:52:8","statements":[{"expression":{"arguments":[{"id":1247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3071:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1246,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"3057:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1116_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"functionReturnParameters":1238,"id":1249,"nodeType":"Return","src":"3050:27:8"}]}}]},"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"2779:103:8","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1268,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:8","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"value","nameLocation":"2936:5:8","nodeType":"VariableDeclaration","scope":1268,"src":"2922:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1230,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"store","nameLocation":"2958:5:8","nodeType":"VariableDeclaration","scope":1268,"src":"2943:20:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1232,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:8"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1268,"src":"2983:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"},"typeName":{"id":1236,"nodeType":"UserDefinedTypeName","pathNode":{"id":1235,"name":"ShortString","nameLocations":["2983:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1116,"src":"2983:11:8"},"referencedDeclaration":1116,"src":"2983:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:8"},"scope":1327,"src":"2887:340:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1294,"nodeType":"Block","src":"3477:158:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"3510:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}],"expression":{"id":1279,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"3491:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1116_$","typeString":"type(ShortString)"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:8","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:8","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1116_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1283,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"3520:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1292,"nodeType":"Block","src":"3592:37:8","statements":[{"expression":{"id":1290,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"3613:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1278,"id":1291,"nodeType":"Return","src":"3606:12:8"}]},"id":1293,"nodeType":"IfStatement","src":"3487:142:8","trueBody":{"id":1289,"nodeType":"Block","src":"3539:47:8","statements":[{"expression":{"arguments":[{"id":1286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"3569:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}],"id":1285,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"3560:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1116_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1278,"id":1288,"nodeType":"Return","src":"3553:22:8"}]}}]},"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"3233:130:8","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":1295,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:8","nodeType":"FunctionDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"value","nameLocation":"3410:5:8","nodeType":"VariableDeclaration","scope":1295,"src":"3398:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"},"typeName":{"id":1271,"nodeType":"UserDefinedTypeName","pathNode":{"id":1270,"name":"ShortString","nameLocations":["3398:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1116,"src":"3398:11:8"},"referencedDeclaration":1116,"src":"3398:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"store","nameLocation":"3432:5:8","nodeType":"VariableDeclaration","scope":1295,"src":"3417:20:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1273,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:8"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1295,"src":"3462:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1276,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:8"},"scope":1327,"src":"3368:267:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1325,"nodeType":"Block","src":"4125:174:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"4158:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}],"expression":{"id":1306,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"4139:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1116_$","typeString":"type(ShortString)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:8","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:8","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1116_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1310,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"4168:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1323,"nodeType":"Block","src":"4242:51:8","statements":[{"expression":{"expression":{"arguments":[{"id":1319,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"4269:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":1318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1317,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:8","typeDescriptions":{}}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:8","memberName":"length","nodeType":"MemberAccess","src":"4263:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1305,"id":1322,"nodeType":"Return","src":"4256:26:8"}]},"id":1324,"nodeType":"IfStatement","src":"4135:158:8","trueBody":{"id":1316,"nodeType":"Block","src":"4187:49:8","statements":[{"expression":{"arguments":[{"id":1313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"4219:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}],"id":1312,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"4208:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1116_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1305,"id":1315,"nodeType":"Return","src":"4201:24:8"}]}}]},"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"3641:374:8","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":1326,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:8","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"value","nameLocation":"4064:5:8","nodeType":"VariableDeclaration","scope":1326,"src":"4052:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"},"typeName":{"id":1298,"nodeType":"UserDefinedTypeName","pathNode":{"id":1297,"name":"ShortString","nameLocations":["4052:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":1116,"src":"4052:11:8"},"referencedDeclaration":1116,"src":"4052:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"store","nameLocation":"4086:5:8","nodeType":"VariableDeclaration","scope":1326,"src":"4071:20:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1300,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:8"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1326,"src":"4116:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1303,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:8"},"scope":1327,"src":"4020:279:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1328,"src":"1255:3046:8","usedErrors":[1124,1126],"usedEvents":[]}],"src":"106:4196:8"},"id":8},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1451]},"id":1452,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1329,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"219:1187:9","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":1451,"linearizedBaseContracts":[1451],"name":"StorageSlot","nameLocation":"1415:11:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1333,"members":[{"constant":false,"id":1332,"mutability":"mutable","name":"value","nameLocation":"1470:5:9","nodeType":"VariableDeclaration","scope":1333,"src":"1462:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:9","nodeType":"StructDefinition","scope":1451,"src":"1433:49:9","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1336,"members":[{"constant":false,"id":1335,"mutability":"mutable","name":"value","nameLocation":"1522:5:9","nodeType":"VariableDeclaration","scope":1336,"src":"1517:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1334,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:9","nodeType":"StructDefinition","scope":1451,"src":"1488:46:9","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1339,"members":[{"constant":false,"id":1338,"mutability":"mutable","name":"value","nameLocation":"1577:5:9","nodeType":"VariableDeclaration","scope":1339,"src":"1569:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:9","nodeType":"StructDefinition","scope":1451,"src":"1540:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1342,"members":[{"constant":false,"id":1341,"mutability":"mutable","name":"value","nameLocation":"1632:5:9","nodeType":"VariableDeclaration","scope":1342,"src":"1624:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:9","nodeType":"StructDefinition","scope":1451,"src":"1595:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":1345,"members":[{"constant":false,"id":1344,"mutability":"mutable","name":"value","nameLocation":"1685:5:9","nodeType":"VariableDeclaration","scope":1345,"src":"1678:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1343,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:9","nodeType":"StructDefinition","scope":1451,"src":"1650:47:9","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1348,"members":[{"constant":false,"id":1347,"mutability":"mutable","name":"value","nameLocation":"1738:5:9","nodeType":"VariableDeclaration","scope":1348,"src":"1731:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1346,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:9","nodeType":"StructDefinition","scope":1451,"src":"1703:47:9","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1351,"members":[{"constant":false,"id":1350,"mutability":"mutable","name":"value","nameLocation":"1789:5:9","nodeType":"VariableDeclaration","scope":1351,"src":"1783:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1349,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:9","nodeType":"StructDefinition","scope":1451,"src":"1756:45:9","visibility":"public"},{"body":{"id":1361,"nodeType":"Block","src":"1983:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:9","statements":[{"nodeType":"YulAssignment","src":"2032:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1358,"isOffset":false,"isSlot":true,"src":"2032:6:9","suffix":"slot","valueSize":1},{"declaration":1354,"isOffset":false,"isSlot":false,"src":"2042:4:9","valueSize":1}],"flags":["memory-safe"],"id":1360,"nodeType":"InlineAssembly","src":"1993:63:9"}]},"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"1807:87:9","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1362,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:9","nodeType":"FunctionDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"slot","nameLocation":"1931:4:9","nodeType":"VariableDeclaration","scope":1362,"src":"1923:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:9"},"returnParameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"r","nameLocation":"1980:1:9","nodeType":"VariableDeclaration","scope":1362,"src":"1960:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1333_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1357,"nodeType":"UserDefinedTypeName","pathNode":{"id":1356,"name":"AddressSlot","nameLocations":["1960:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1333,"src":"1960:11:9"},"referencedDeclaration":1333,"src":"1960:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1333_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:9"},"scope":1451,"src":"1899:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1372,"nodeType":"Block","src":"2243:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:9","statements":[{"nodeType":"YulAssignment","src":"2292:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1369,"isOffset":false,"isSlot":true,"src":"2292:6:9","suffix":"slot","valueSize":1},{"declaration":1365,"isOffset":false,"isSlot":false,"src":"2302:4:9","valueSize":1}],"flags":["memory-safe"],"id":1371,"nodeType":"InlineAssembly","src":"2253:63:9"}]},"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"2068:86:9","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":1373,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:9","nodeType":"FunctionDefinition","parameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"slot","nameLocation":"2191:4:9","nodeType":"VariableDeclaration","scope":1373,"src":"2183:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:9"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"r","nameLocation":"2240:1:9","nodeType":"VariableDeclaration","scope":1373,"src":"2220:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1336_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1368,"nodeType":"UserDefinedTypeName","pathNode":{"id":1367,"name":"BooleanSlot","nameLocations":["2220:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1336,"src":"2220:11:9"},"referencedDeclaration":1336,"src":"2220:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1336_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:9"},"scope":1451,"src":"2159:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1383,"nodeType":"Block","src":"2503:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:9","statements":[{"nodeType":"YulAssignment","src":"2552:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1380,"isOffset":false,"isSlot":true,"src":"2552:6:9","suffix":"slot","valueSize":1},{"declaration":1376,"isOffset":false,"isSlot":false,"src":"2562:4:9","valueSize":1}],"flags":["memory-safe"],"id":1382,"nodeType":"InlineAssembly","src":"2513:63:9"}]},"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"2328:86:9","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":1384,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:9","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"slot","nameLocation":"2451:4:9","nodeType":"VariableDeclaration","scope":1384,"src":"2443:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:9"},"returnParameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"mutability":"mutable","name":"r","nameLocation":"2500:1:9","nodeType":"VariableDeclaration","scope":1384,"src":"2480:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1339_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1379,"nodeType":"UserDefinedTypeName","pathNode":{"id":1378,"name":"Bytes32Slot","nameLocations":["2480:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1339,"src":"2480:11:9"},"referencedDeclaration":1339,"src":"2480:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1339_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:9"},"scope":1451,"src":"2419:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1394,"nodeType":"Block","src":"2763:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:9","statements":[{"nodeType":"YulAssignment","src":"2812:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1391,"isOffset":false,"isSlot":true,"src":"2812:6:9","suffix":"slot","valueSize":1},{"declaration":1387,"isOffset":false,"isSlot":false,"src":"2822:4:9","valueSize":1}],"flags":["memory-safe"],"id":1393,"nodeType":"InlineAssembly","src":"2773:63:9"}]},"documentation":{"id":1385,"nodeType":"StructuredDocumentation","src":"2588:86:9","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":1395,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:9","nodeType":"FunctionDefinition","parameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"slot","nameLocation":"2711:4:9","nodeType":"VariableDeclaration","scope":1395,"src":"2703:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:9"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"r","nameLocation":"2760:1:9","nodeType":"VariableDeclaration","scope":1395,"src":"2740:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1342_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1390,"nodeType":"UserDefinedTypeName","pathNode":{"id":1389,"name":"Uint256Slot","nameLocations":["2740:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1342,"src":"2740:11:9"},"referencedDeclaration":1342,"src":"2740:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1342_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:9"},"scope":1451,"src":"2679:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1405,"nodeType":"Block","src":"3020:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:9","statements":[{"nodeType":"YulAssignment","src":"3069:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1402,"isOffset":false,"isSlot":true,"src":"3069:6:9","suffix":"slot","valueSize":1},{"declaration":1398,"isOffset":false,"isSlot":false,"src":"3079:4:9","valueSize":1}],"flags":["memory-safe"],"id":1404,"nodeType":"InlineAssembly","src":"3030:63:9"}]},"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"2848:85:9","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":1406,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:9","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"slot","nameLocation":"2969:4:9","nodeType":"VariableDeclaration","scope":1406,"src":"2961:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:9"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"r","nameLocation":"3017:1:9","nodeType":"VariableDeclaration","scope":1406,"src":"2998:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1345_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":1401,"nodeType":"UserDefinedTypeName","pathNode":{"id":1400,"name":"Int256Slot","nameLocations":["2998:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1345,"src":"2998:10:9"},"referencedDeclaration":1345,"src":"2998:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$1345_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:9"},"scope":1451,"src":"2938:161:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1416,"nodeType":"Block","src":"3277:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:9","statements":[{"nodeType":"YulAssignment","src":"3326:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1413,"isOffset":false,"isSlot":true,"src":"3326:6:9","suffix":"slot","valueSize":1},{"declaration":1409,"isOffset":false,"isSlot":false,"src":"3336:4:9","valueSize":1}],"flags":["memory-safe"],"id":1415,"nodeType":"InlineAssembly","src":"3287:63:9"}]},"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"3105:85:9","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":1417,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:9","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"slot","nameLocation":"3226:4:9","nodeType":"VariableDeclaration","scope":1417,"src":"3218:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:9"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"r","nameLocation":"3274:1:9","nodeType":"VariableDeclaration","scope":1417,"src":"3255:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1348_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1412,"nodeType":"UserDefinedTypeName","pathNode":{"id":1411,"name":"StringSlot","nameLocations":["3255:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"3255:10:9"},"referencedDeclaration":1348,"src":"3255:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1348_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:9"},"scope":1451,"src":"3195:161:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1427,"nodeType":"Block","src":"3558:85:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:9","statements":[{"nodeType":"YulAssignment","src":"3607:20:9","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1424,"isOffset":false,"isSlot":true,"src":"3607:6:9","suffix":"slot","valueSize":1},{"declaration":1420,"isOffset":false,"isSlot":true,"src":"3617:10:9","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1426,"nodeType":"InlineAssembly","src":"3568:69:9"}]},"documentation":{"id":1418,"nodeType":"StructuredDocumentation","src":"3362:101:9","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1428,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:9","nodeType":"FunctionDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"store","nameLocation":"3506:5:9","nodeType":"VariableDeclaration","scope":1428,"src":"3491:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1419,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:9"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"r","nameLocation":"3555:1:9","nodeType":"VariableDeclaration","scope":1428,"src":"3536:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1348_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1423,"nodeType":"UserDefinedTypeName","pathNode":{"id":1422,"name":"StringSlot","nameLocations":["3536:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1348,"src":"3536:10:9"},"referencedDeclaration":1348,"src":"3536:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1348_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:9"},"scope":1451,"src":"3468:175:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1438,"nodeType":"Block","src":"3818:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:9","statements":[{"nodeType":"YulAssignment","src":"3867:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1435,"isOffset":false,"isSlot":true,"src":"3867:6:9","suffix":"slot","valueSize":1},{"declaration":1431,"isOffset":false,"isSlot":false,"src":"3877:4:9","valueSize":1}],"flags":["memory-safe"],"id":1437,"nodeType":"InlineAssembly","src":"3828:63:9"}]},"documentation":{"id":1429,"nodeType":"StructuredDocumentation","src":"3649:84:9","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":1439,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:9","nodeType":"FunctionDefinition","parameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"slot","nameLocation":"3768:4:9","nodeType":"VariableDeclaration","scope":1439,"src":"3760:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1430,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:9"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"r","nameLocation":"3815:1:9","nodeType":"VariableDeclaration","scope":1439,"src":"3797:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1351_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1434,"nodeType":"UserDefinedTypeName","pathNode":{"id":1433,"name":"BytesSlot","nameLocations":["3797:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1351,"src":"3797:9:9"},"referencedDeclaration":1351,"src":"3797:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1351_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:9"},"scope":1451,"src":"3738:159:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1449,"nodeType":"Block","src":"4094:85:9","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:9","statements":[{"nodeType":"YulAssignment","src":"4143:20:9","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1446,"isOffset":false,"isSlot":true,"src":"4143:6:9","suffix":"slot","valueSize":1},{"declaration":1442,"isOffset":false,"isSlot":true,"src":"4153:10:9","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":1448,"nodeType":"InlineAssembly","src":"4104:69:9"}]},"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"3903:99:9","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1450,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:9","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"store","nameLocation":"4043:5:9","nodeType":"VariableDeclaration","scope":1450,"src":"4029:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1441,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:9"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"r","nameLocation":"4091:1:9","nodeType":"VariableDeclaration","scope":1450,"src":"4073:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1351_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1445,"nodeType":"UserDefinedTypeName","pathNode":{"id":1444,"name":"BytesSlot","nameLocations":["4073:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1351,"src":"4073:9:9"},"referencedDeclaration":1351,"src":"4073:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1351_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:9"},"scope":1451,"src":"4007:172:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1452,"src":"1407:2774:9","usedErrors":[],"usedEvents":[]}],"src":"193:3989:9"},"id":9},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5135],"SafeCast":[6900],"SignedMath":[7044],"Strings":[2853]},"id":2854,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1453,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2854,"sourceUnit":5136,"src":"127:37:10","symbolAliases":[{"foreign":{"id":1454,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"135:4:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2854,"sourceUnit":6901,"src":"165:45:10","symbolAliases":[{"foreign":{"id":1456,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"173:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2854,"sourceUnit":7045,"src":"211:49:10","symbolAliases":[{"foreign":{"id":1458,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"219:10:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"262:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":2853,"linearizedBaseContracts":[2853],"name":"Strings","nameLocation":"305:7:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1462,"libraryName":{"id":1461,"name":"SafeCast","nameLocations":["325:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":6900,"src":"325:8:10"},"nodeType":"UsingForDirective","src":"319:21:10"},{"constant":true,"id":1465,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:10","nodeType":"VariableDeclaration","scope":2853,"src":"346:56:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1463,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1468,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:10","nodeType":"VariableDeclaration","scope":2853,"src":"408:42:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1466,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1504,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:10","nodeType":"VariableDeclaration","scope":2853,"src":"456:302:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1473,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:10","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:10","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:10","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:10","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:10","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:10","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:10","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:10","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:10","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:10","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:10","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:10","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:10","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:10","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:10","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:10","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:10","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1502,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:10","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:10","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"778:81:10","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1511,"name":"StringsInsufficientHexLength","nameLocation":"870:28:10","nodeType":"ErrorDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"value","nameLocation":"907:5:10","nodeType":"VariableDeclaration","scope":1511,"src":"899:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"length","nameLocation":"922:6:10","nodeType":"VariableDeclaration","scope":1511,"src":"914:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:10"},"src":"864:66:10"},{"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"936:108:10","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1514,"name":"StringsInvalidChar","nameLocation":"1055:18:10","nodeType":"ErrorDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"1073:2:10"},"src":"1049:27:10"},{"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"1082:84:10","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1517,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:10","nodeType":"ErrorDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[],"src":"1204:2:10"},"src":"1171:36:10"},{"body":{"id":1564,"nodeType":"Block","src":"1379:563:10","statements":[{"id":1563,"nodeType":"UncheckedBlock","src":"1389:547:10","statements":[{"assignments":[1526],"declarations":[{"constant":false,"id":1526,"mutability":"mutable","name":"length","nameLocation":"1421:6:10","nodeType":"VariableDeclaration","scope":1563,"src":"1413:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1533,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1441:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1527,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"1430:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5135_$","typeString":"type(library Math)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:10","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4967,"src":"1430:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:10"},{"assignments":[1535],"declarations":[{"constant":false,"id":1535,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:10","nodeType":"VariableDeclaration","scope":1563,"src":"1465:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1534,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1540,"initialValue":{"arguments":[{"id":1538,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"1499:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1536,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:10"},{"assignments":[1542],"declarations":[{"constant":false,"id":1542,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:10","nodeType":"VariableDeclaration","scope":1563,"src":"1520:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1543,"nodeType":"VariableDeclarationStatement","src":"1520:11:10"},{"AST":{"nodeType":"YulBlock","src":"1570:69:10","statements":[{"nodeType":"YulAssignment","src":"1588:37:10","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1603:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1611:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:10"},"nodeType":"YulFunctionCall","src":"1599:17:10"},{"name":"length","nodeType":"YulIdentifier","src":"1618:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:10"},"nodeType":"YulFunctionCall","src":"1595:30:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1535,"isOffset":false,"isSlot":false,"src":"1603:6:10","valueSize":1},{"declaration":1526,"isOffset":false,"isSlot":false,"src":"1618:6:10","valueSize":1},{"declaration":1542,"isOffset":false,"isSlot":false,"src":"1588:3:10","valueSize":1}],"flags":["memory-safe"],"id":1544,"nodeType":"InlineAssembly","src":"1545:94:10"},{"body":{"id":1559,"nodeType":"Block","src":"1665:234:10","statements":[{"expression":{"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:10","subExpression":{"id":1546,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"1683:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1548,"nodeType":"ExpressionStatement","src":"1683:5:10"},{"AST":{"nodeType":"YulBlock","src":"1731:86:10","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1761:3:10"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1775:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1782:2:10","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1771:3:10"},"nodeType":"YulFunctionCall","src":"1771:14:10"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1787:10:10"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1766:4:10"},"nodeType":"YulFunctionCall","src":"1766:32:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1753:7:10"},"nodeType":"YulFunctionCall","src":"1753:46:10"},"nodeType":"YulExpressionStatement","src":"1753:46:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1465,"isOffset":false,"isSlot":false,"src":"1787:10:10","valueSize":1},{"declaration":1542,"isOffset":false,"isSlot":false,"src":"1761:3:10","valueSize":1},{"declaration":1520,"isOffset":false,"isSlot":false,"src":"1775:5:10","valueSize":1}],"flags":["memory-safe"],"id":1549,"nodeType":"InlineAssembly","src":"1706:111:10"},{"expression":{"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1834:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1553,"nodeType":"ExpressionStatement","src":"1834:11:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1867:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1558,"nodeType":"IfStatement","src":"1863:21:10","trueBody":{"id":1557,"nodeType":"Break","src":"1879:5:10"}}]},"condition":{"hexValue":"74727565","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1560,"nodeType":"WhileStatement","src":"1652:247:10"},{"expression":{"id":1561,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"1919:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1524,"id":1562,"nodeType":"Return","src":"1912:13:10"}]}]},"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"1213:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1565,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:10","nodeType":"FunctionDefinition","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"value","nameLocation":"1334:5:10","nodeType":"VariableDeclaration","scope":1565,"src":"1326:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:10"},"returnParameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1565,"src":"1364:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1522,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:10"},"scope":2853,"src":"1308:634:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1590,"nodeType":"Block","src":"2118:92:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2149:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:10","trueExpression":{"hexValue":"2d","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2195:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1583,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"2180:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7044_$","typeString":"type(library SignedMath)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:10","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7043,"src":"2180:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1582,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"2171:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1573,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:10","typeDescriptions":{}}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:10","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1572,"id":1589,"nodeType":"Return","src":"2128:75:10"}]},"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"1948:89:10","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:10","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"value","nameLocation":"2073:5:10","nodeType":"VariableDeclaration","scope":1591,"src":"2066:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1567,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:10"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"2103:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1570,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:10"},"scope":2853,"src":"2042:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1610,"nodeType":"Block","src":"2389:100:10","statements":[{"id":1609,"nodeType":"UncheckedBlock","src":"2399:84:10","statements":[{"expression":{"arguments":[{"id":1600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"2442:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"2461:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1601,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"2449:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5135_$","typeString":"type(library Math)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:10","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5078,"src":"2449:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1599,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1611,1694,1714],"referencedDeclaration":1694,"src":"2430:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1598,"id":1608,"nodeType":"Return","src":"2423:49:10"}]}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"2216:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:10","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"value","nameLocation":"2344:5:10","nodeType":"VariableDeclaration","scope":1611,"src":"2336:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:10"},"returnParameters":{"id":1598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"2374:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1596,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:10"},"scope":2853,"src":"2315:174:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1693,"nodeType":"Block","src":"2702:435:10","statements":[{"assignments":[1622],"declarations":[{"constant":false,"id":1622,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:10","nodeType":"VariableDeclaration","scope":1693,"src":"2712:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1624,"initialValue":{"id":1623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"2733:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:10"},{"assignments":[1626],"declarations":[{"constant":false,"id":1626,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:10","nodeType":"VariableDeclaration","scope":1693,"src":"2748:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1625,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1635,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1630,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"2784:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1627,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:10"},{"expression":{"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1636,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"2805:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1638,"indexExpression":{"hexValue":"30","id":1637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1641,"nodeType":"ExpressionStatement","src":"2805:15:10"},{"expression":{"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1642,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"2830:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1644,"indexExpression":{"hexValue":"31","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1647,"nodeType":"ExpressionStatement","src":"2830:15:10"},{"body":{"id":1676,"nodeType":"Block","src":"2900:95:10","statements":[{"expression":{"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1662,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"2914:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1664,"indexExpression":{"id":1663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"2921:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1665,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"2926:10:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1669,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"2937:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1671,"nodeType":"ExpressionStatement","src":"2914:40:10"},{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1672,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"2968:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"2968:16:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"2888:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1677,"initializationExpression":{"assignments":[1649],"declarations":[{"constant":false,"id":1649,"mutability":"mutable","name":"i","nameLocation":"2868:1:10","nodeType":"VariableDeclaration","scope":1677,"src":"2860:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1655,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1651,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"2876:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:10"},"loopExpression":{"expression":{"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:10","subExpression":{"id":1659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"2897:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1661,"nodeType":"ExpressionStatement","src":"2895:3:10"},"nodeType":"ForStatement","src":"2855:140:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1678,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"3008:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1687,"nodeType":"IfStatement","src":"3004:96:10","trueBody":{"id":1686,"nodeType":"Block","src":"3025:75:10","statements":[{"errorCall":{"arguments":[{"id":1682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"3075:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1683,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"3082:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1681,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"3046:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1685,"nodeType":"RevertStatement","src":"3039:50:10"}]}},{"expression":{"arguments":[{"id":1690,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"3123:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1688,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:10","typeDescriptions":{}}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1620,"id":1692,"nodeType":"Return","src":"3109:21:10"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"2495:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1694,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:10","nodeType":"FunctionDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"value","nameLocation":"2641:5:10","nodeType":"VariableDeclaration","scope":1694,"src":"2633:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1613,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"length","nameLocation":"2656:6:10","nodeType":"VariableDeclaration","scope":1694,"src":"2648:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:10"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1694,"src":"2687:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1618,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:10"},"scope":2853,"src":"2612:525:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1713,"nodeType":"Block","src":"3369:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1707,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"3414:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1705,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:10","typeDescriptions":{}}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:10","typeDescriptions":{}}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1710,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3422:14:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1702,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1611,1694,1714],"referencedDeclaration":1694,"src":"3386:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1701,"id":1712,"nodeType":"Return","src":"3379:58:10"}]},"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"3143:148:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1714,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:10","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"addr","nameLocation":"3325:4:10","nodeType":"VariableDeclaration","scope":1714,"src":"3317:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:10"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1714,"src":"3354:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1699,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:10"},"scope":2853,"src":"3296:148:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1778,"nodeType":"Block","src":"3701:642:10","statements":[{"assignments":[1723],"declarations":[{"constant":false,"id":1723,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:10","nodeType":"VariableDeclaration","scope":1778,"src":"3711:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1722,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1730,"initialValue":{"arguments":[{"arguments":[{"id":1727,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"3751:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1726,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1611,1694,1714],"referencedDeclaration":1714,"src":"3739:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1724,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:10","typeDescriptions":{}}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:10"},{"assignments":[1732],"declarations":[{"constant":false,"id":1732,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:10","nodeType":"VariableDeclaration","scope":1778,"src":"3842:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1733,"nodeType":"VariableDeclarationStatement","src":"3842:17:10"},{"AST":{"nodeType":"YulBlock","src":"3894:78:10","statements":[{"nodeType":"YulAssignment","src":"3908:54:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3925:2:10","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3943:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3951:4:10","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3939:3:10"},"nodeType":"YulFunctionCall","src":"3939:17:10"},{"kind":"number","nodeType":"YulLiteral","src":"3958:2:10","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3929:9:10"},"nodeType":"YulFunctionCall","src":"3929:32:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3921:3:10"},"nodeType":"YulFunctionCall","src":"3921:41:10"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3908:9:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1723,"isOffset":false,"isSlot":false,"src":"3943:6:10","valueSize":1},{"declaration":1732,"isOffset":false,"isSlot":false,"src":"3908:9:10","valueSize":1}],"flags":["memory-safe"],"id":1734,"nodeType":"InlineAssembly","src":"3869:103:10"},{"body":{"id":1771,"nodeType":"Block","src":"4015:291:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1745,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"4121:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:10","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1752,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"4150:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1754,"indexExpression":{"id":1753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"4157:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1750,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:10","typeDescriptions":{}}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1766,"nodeType":"IfStatement","src":"4117:150:10","trueBody":{"id":1765,"nodeType":"Block","src":"4167:100:10","statements":[{"expression":{"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1759,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"4235:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1761,"indexExpression":{"id":1760,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"4242:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1764,"nodeType":"ExpressionStatement","src":"4235:17:10"}]}},{"expression":{"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1767,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"4280:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1770,"nodeType":"ExpressionStatement","src":"4280:15:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1739,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"4003:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1772,"initializationExpression":{"assignments":[1736],"declarations":[{"constant":false,"id":1736,"mutability":"mutable","name":"i","nameLocation":"3995:1:10","nodeType":"VariableDeclaration","scope":1772,"src":"3987:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1738,"initialValue":{"hexValue":"3431","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:10","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:10"},"loopExpression":{"expression":{"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:10","subExpression":{"id":1742,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"4012:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1744,"nodeType":"ExpressionStatement","src":"4010:3:10"},"nodeType":"ForStatement","src":"3982:324:10"},{"expression":{"arguments":[{"id":1775,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"4329:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1773,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:10","typeDescriptions":{}}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1721,"id":1777,"nodeType":"Return","src":"4315:21:10"}]},"documentation":{"id":1715,"nodeType":"StructuredDocumentation","src":"3450:165:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:10","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1717,"mutability":"mutable","name":"addr","nameLocation":"3657:4:10","nodeType":"VariableDeclaration","scope":1779,"src":"3649:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:10"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1779,"src":"3686:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1719,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:10"},"scope":2853,"src":"3620:723:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1815,"nodeType":"Block","src":"4498:104:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1791,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"4521:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1789,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:10","typeDescriptions":{}}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:10","memberName":"length","nodeType":"MemberAccess","src":"4515:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1796,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"4540:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1794,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:10","typeDescriptions":{}}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:10","memberName":"length","nodeType":"MemberAccess","src":"4534:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1803,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"4569:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1801,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:10","typeDescriptions":{}}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1800,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1809,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"4592:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1807,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:10","typeDescriptions":{}}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1806,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1788,"id":1814,"nodeType":"Return","src":"4508:87:10"}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"4349:66:10","text":" @dev Returns true if the two strings are equal."},"id":1816,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:10","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"a","nameLocation":"4449:1:10","nodeType":"VariableDeclaration","scope":1816,"src":"4435:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1781,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"b","nameLocation":"4466:1:10","nodeType":"VariableDeclaration","scope":1816,"src":"4452:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1783,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:10"},"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1816,"src":"4492:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1786,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:10"},"scope":2853,"src":"4420:182:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1834,"nodeType":"Block","src":"4899:64:10","statements":[{"expression":{"arguments":[{"id":1825,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"4926:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1829,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"4942:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1827,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:10","typeDescriptions":{}}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:10","memberName":"length","nodeType":"MemberAccess","src":"4936:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1824,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1835,1866],"referencedDeclaration":1866,"src":"4916:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1823,"id":1833,"nodeType":"Return","src":"4909:47:10"}]},"documentation":{"id":1817,"nodeType":"StructuredDocumentation","src":"4608:214:10","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:10","nodeType":"FunctionDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"input","nameLocation":"4860:5:10","nodeType":"VariableDeclaration","scope":1835,"src":"4846:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1818,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:10"},"returnParameters":{"id":1823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1835,"src":"4890:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1821,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:10"},"scope":2853,"src":"4827:136:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1865,"nodeType":"Block","src":"5368:153:10","statements":[{"assignments":[1848,1850],"declarations":[{"constant":false,"id":1848,"mutability":"mutable","name":"success","nameLocation":"5384:7:10","nodeType":"VariableDeclaration","scope":1865,"src":"5379:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1847,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"value","nameLocation":"5401:5:10","nodeType":"VariableDeclaration","scope":1865,"src":"5393:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1856,"initialValue":{"arguments":[{"id":1852,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"5423:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1853,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"5430:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1854,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"5437:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1851,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1887,1924],"referencedDeclaration":1924,"src":"5410:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:10"},{"condition":{"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:10","subExpression":{"id":1857,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"5456:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1862,"nodeType":"IfStatement","src":"5451:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1859,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"5472:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1861,"nodeType":"RevertStatement","src":"5465:27:10"}},{"expression":{"id":1863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5509:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1846,"id":1864,"nodeType":"Return","src":"5502:12:10"}]},"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"4969:294:10","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1866,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:10","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1838,"mutability":"mutable","name":"input","nameLocation":"5301:5:10","nodeType":"VariableDeclaration","scope":1866,"src":"5287:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1837,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1840,"mutability":"mutable","name":"begin","nameLocation":"5316:5:10","nodeType":"VariableDeclaration","scope":1866,"src":"5308:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1842,"mutability":"mutable","name":"end","nameLocation":"5331:3:10","nodeType":"VariableDeclaration","scope":1866,"src":"5323:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1841,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:10"},"returnParameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1866,"src":"5359:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1844,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:10"},"scope":2853,"src":"5268:253:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1886,"nodeType":"Block","src":"5842:83:10","statements":[{"expression":{"arguments":[{"id":1877,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"5888:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1881,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"5904:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:10","typeDescriptions":{}}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:10","memberName":"length","nodeType":"MemberAccess","src":"5898:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1876,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"5859:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1875,"id":1885,"nodeType":"Return","src":"5852:66:10"}]},"documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"5527:215:10","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1887,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:10","nodeType":"FunctionDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"input","nameLocation":"5783:5:10","nodeType":"VariableDeclaration","scope":1887,"src":"5769:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1868,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:10"},"returnParameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"success","nameLocation":"5818:7:10","nodeType":"VariableDeclaration","scope":1887,"src":"5813:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1871,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"value","nameLocation":"5835:5:10","nodeType":"VariableDeclaration","scope":1887,"src":"5827:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:10"},"scope":2853,"src":"5747:178:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1923,"nodeType":"Block","src":"6327:144:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1901,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"6341:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1904,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"6353:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1902,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:10","typeDescriptions":{}}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:10","memberName":"length","nodeType":"MemberAccess","src":"6347:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1908,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"6370:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1909,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"6378:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1916,"nodeType":"IfStatement","src":"6337:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1900,"id":1915,"nodeType":"Return","src":"6383:17:10"}},{"expression":{"arguments":[{"id":1918,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"6446:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1919,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"6453:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1920,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"6460:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1917,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"6417:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1900,"id":1922,"nodeType":"Return","src":"6410:54:10"}]},"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"5931:238:10","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1924,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:10","nodeType":"FunctionDefinition","parameters":{"id":1895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"input","nameLocation":"6219:5:10","nodeType":"VariableDeclaration","scope":1924,"src":"6205:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1889,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"begin","nameLocation":"6242:5:10","nodeType":"VariableDeclaration","scope":1924,"src":"6234:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1894,"mutability":"mutable","name":"end","nameLocation":"6265:3:10","nodeType":"VariableDeclaration","scope":1924,"src":"6257:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:10"},"returnParameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1897,"mutability":"mutable","name":"success","nameLocation":"6303:7:10","nodeType":"VariableDeclaration","scope":1924,"src":"6298:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1896,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"value","nameLocation":"6320:5:10","nodeType":"VariableDeclaration","scope":1924,"src":"6312:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:10"},"scope":2853,"src":"6174:297:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1993,"nodeType":"Block","src":"6874:347:10","statements":[{"assignments":[1939],"declarations":[{"constant":false,"id":1939,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:10","nodeType":"VariableDeclaration","scope":1993,"src":"6884:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1938,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1944,"initialValue":{"arguments":[{"id":1942,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"6912:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1940,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:10","typeDescriptions":{}}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:10"},{"assignments":[1946],"declarations":[{"constant":false,"id":1946,"mutability":"mutable","name":"result","nameLocation":"6937:6:10","nodeType":"VariableDeclaration","scope":1993,"src":"6929:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1945,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1948,"initialValue":{"hexValue":"30","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:10"},{"body":{"id":1987,"nodeType":"Block","src":"6995:189:10","statements":[{"assignments":[1960],"declarations":[{"constant":false,"id":1960,"mutability":"mutable","name":"chr","nameLocation":"7015:3:10","nodeType":"VariableDeclaration","scope":1987,"src":"7009:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1959,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1970,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1965,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1939,"src":"7064:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"7072:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1964,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"7041:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1962,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:10","typeDescriptions":{}}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1961,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"7021:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1971,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"7094:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1978,"nodeType":"IfStatement","src":"7090:30:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1937,"id":1977,"nodeType":"Return","src":"7103:17:10"}},{"expression":{"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1979,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7134:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1982,"nodeType":"ExpressionStatement","src":"7134:12:10"},{"expression":{"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1983,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7160:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1984,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"7170:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1986,"nodeType":"ExpressionStatement","src":"7160:13:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"6981:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1954,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"6985:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1988,"initializationExpression":{"assignments":[1950],"declarations":[{"constant":false,"id":1950,"mutability":"mutable","name":"i","nameLocation":"6970:1:10","nodeType":"VariableDeclaration","scope":1988,"src":"6962:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1949,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1952,"initialValue":{"id":1951,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"6974:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:10"},"loopExpression":{"expression":{"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:10","subExpression":{"id":1956,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"6992:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1958,"nodeType":"ExpressionStatement","src":"6990:3:10"},"nodeType":"ForStatement","src":"6957:227:10"},{"expression":{"components":[{"hexValue":"74727565","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1990,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1946,"src":"7207:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1937,"id":1992,"nodeType":"Return","src":"7193:21:10"}]},"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"6477:224:10","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1994,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:10","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1927,"mutability":"mutable","name":"input","nameLocation":"6767:5:10","nodeType":"VariableDeclaration","scope":1994,"src":"6753:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1926,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1929,"mutability":"mutable","name":"begin","nameLocation":"6790:5:10","nodeType":"VariableDeclaration","scope":1994,"src":"6782:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"end","nameLocation":"6813:3:10","nodeType":"VariableDeclaration","scope":1994,"src":"6805:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1930,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:10"},"returnParameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"success","nameLocation":"6850:7:10","nodeType":"VariableDeclaration","scope":1994,"src":"6845:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1933,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"value","nameLocation":"6867:5:10","nodeType":"VariableDeclaration","scope":1994,"src":"6859:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:10"},"scope":2853,"src":"6706:515:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2012,"nodeType":"Block","src":"7518:63:10","statements":[{"expression":{"arguments":[{"id":2003,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"7544:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2007,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"7560:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2005,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:10","typeDescriptions":{}}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:10","memberName":"length","nodeType":"MemberAccess","src":"7554:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2002,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2013,2044],"referencedDeclaration":2044,"src":"7535:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2001,"id":2011,"nodeType":"Return","src":"7528:46:10"}]},"documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"7227:216:10","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2013,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:10","nodeType":"FunctionDefinition","parameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"input","nameLocation":"7480:5:10","nodeType":"VariableDeclaration","scope":2013,"src":"7466:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1996,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:10"},"returnParameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2013,"src":"7510:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1999,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:10"},"scope":2853,"src":"7448:133:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2043,"nodeType":"Block","src":"7986:151:10","statements":[{"assignments":[2026,2028],"declarations":[{"constant":false,"id":2026,"mutability":"mutable","name":"success","nameLocation":"8002:7:10","nodeType":"VariableDeclaration","scope":2043,"src":"7997:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2025,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2028,"mutability":"mutable","name":"value","nameLocation":"8018:5:10","nodeType":"VariableDeclaration","scope":2043,"src":"8011:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2027,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2034,"initialValue":{"arguments":[{"id":2030,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"8039:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2031,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2018,"src":"8046:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2032,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"8053:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2029,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2065,2107],"referencedDeclaration":2107,"src":"8027:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:10"},{"condition":{"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:10","subExpression":{"id":2035,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"8072:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2040,"nodeType":"IfStatement","src":"8067:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2037,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"8088:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2039,"nodeType":"RevertStatement","src":"8081:27:10"}},{"expression":{"id":2041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2028,"src":"8125:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2024,"id":2042,"nodeType":"Return","src":"8118:12:10"}]},"documentation":{"id":2014,"nodeType":"StructuredDocumentation","src":"7587:296:10","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2044,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:10","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2016,"mutability":"mutable","name":"input","nameLocation":"7920:5:10","nodeType":"VariableDeclaration","scope":2044,"src":"7906:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2015,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2018,"mutability":"mutable","name":"begin","nameLocation":"7935:5:10","nodeType":"VariableDeclaration","scope":2044,"src":"7927:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2017,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2020,"mutability":"mutable","name":"end","nameLocation":"7950:3:10","nodeType":"VariableDeclaration","scope":2044,"src":"7942:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:10"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2044,"src":"7978:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2022,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:10"},"scope":2853,"src":"7888:249:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2064,"nodeType":"Block","src":"8528:82:10","statements":[{"expression":{"arguments":[{"id":2055,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"8573:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2059,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"8589:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2057,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:10","typeDescriptions":{}}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:10","memberName":"length","nodeType":"MemberAccess","src":"8583:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2054,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"8545:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2053,"id":2063,"nodeType":"Return","src":"8538:65:10"}]},"documentation":{"id":2045,"nodeType":"StructuredDocumentation","src":"8143:287:10","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:10","nodeType":"FunctionDefinition","parameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"input","nameLocation":"8470:5:10","nodeType":"VariableDeclaration","scope":2065,"src":"8456:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2046,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:10"},"returnParameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"success","nameLocation":"8505:7:10","nodeType":"VariableDeclaration","scope":2065,"src":"8500:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2049,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2052,"mutability":"mutable","name":"value","nameLocation":"8521:5:10","nodeType":"VariableDeclaration","scope":2065,"src":"8514:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2051,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:10"},"scope":2853,"src":"8435:175:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2070,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:10","nodeType":"VariableDeclaration","scope":2853,"src":"8616:50:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2106,"nodeType":"Block","src":"9132:143:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2084,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"9146:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2087,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"9158:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2085,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:10","typeDescriptions":{}}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:10","memberName":"length","nodeType":"MemberAccess","src":"9152:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2091,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"9175:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2092,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"9183:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2099,"nodeType":"IfStatement","src":"9142:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2083,"id":2098,"nodeType":"Return","src":"9188:17:10"}},{"expression":{"arguments":[{"id":2101,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"9250:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2102,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"9257:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2103,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"9264:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2100,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"9222:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2083,"id":2105,"nodeType":"Return","src":"9215:53:10"}]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"8673:303:10","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2107,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:10","nodeType":"FunctionDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"input","nameLocation":"9025:5:10","nodeType":"VariableDeclaration","scope":2107,"src":"9011:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2072,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2075,"mutability":"mutable","name":"begin","nameLocation":"9048:5:10","nodeType":"VariableDeclaration","scope":2107,"src":"9040:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2074,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"end","nameLocation":"9071:3:10","nodeType":"VariableDeclaration","scope":2107,"src":"9063:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:10"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"success","nameLocation":"9109:7:10","nodeType":"VariableDeclaration","scope":2107,"src":"9104:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2079,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2082,"mutability":"mutable","name":"value","nameLocation":"9125:5:10","nodeType":"VariableDeclaration","scope":2107,"src":"9118:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2081,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:10"},"scope":2853,"src":"8981:294:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2227,"nodeType":"Block","src":"9675:812:10","statements":[{"assignments":[2122],"declarations":[{"constant":false,"id":2122,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:10","nodeType":"VariableDeclaration","scope":2227,"src":"9685:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2121,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2127,"initialValue":{"arguments":[{"id":2125,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"9713:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2123,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:10","typeDescriptions":{}}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:10"},{"assignments":[2129],"declarations":[{"constant":false,"id":2129,"mutability":"mutable","name":"sign","nameLocation":"9783:4:10","nodeType":"VariableDeclaration","scope":2227,"src":"9776:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2128,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2145,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2130,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"9790:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2131,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"9799:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2140,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"9847:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2141,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"9855:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2139,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"9824:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2137,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:10","typeDescriptions":{}}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:10","trueExpression":{"arguments":[{"hexValue":"30","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2133,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:10","typeDescriptions":{}}},"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:10"},{"assignments":[2147],"declarations":[{"constant":false,"id":2147,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:10","nodeType":"VariableDeclaration","scope":2227,"src":"9943:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2146,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2154,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2148,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"9963:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2149,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:10","typeDescriptions":{}}},"id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:10"},{"assignments":[2156],"declarations":[{"constant":false,"id":2156,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:10","nodeType":"VariableDeclaration","scope":2227,"src":"9992:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2155,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2163,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"10012:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2158,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:10","typeDescriptions":{}}},"id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:10"},{"assignments":[2165],"declarations":[{"constant":false,"id":2165,"mutability":"mutable","name":"offset","nameLocation":"10049:6:10","nodeType":"VariableDeclaration","scope":2227,"src":"10041:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2172,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2166,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"10059:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2167,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"10075:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"10058:37:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:10"},{"assignments":[2174,2176],"declarations":[{"constant":false,"id":2174,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:10","nodeType":"VariableDeclaration","scope":2227,"src":"10109:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2173,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:10","nodeType":"VariableDeclaration","scope":2227,"src":"10126:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2184,"initialValue":{"arguments":[{"id":2178,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"10159:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2179,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"10166:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2180,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"10174:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2182,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"10182:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2177,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1887,1924],"referencedDeclaration":1924,"src":"10146:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"10201:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2186,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"10215:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2187,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"10226:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2205,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"10343:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2206,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"10357:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"10373:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2209,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"10385:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2120,"id":2224,"nodeType":"Return","src":"10463:17:10"},"id":2225,"nodeType":"IfStatement","src":"10339:141:10","trueBody":{"id":2220,"nodeType":"Block","src":"10401:56:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2214,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2213,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:10","memberName":"min","nodeType":"MemberAccess","src":"10429:16:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2120,"id":2219,"nodeType":"Return","src":"10415:31:10"}]}},"id":2226,"nodeType":"IfStatement","src":"10197:283:10","trueBody":{"id":2204,"nodeType":"Block","src":"10242:91:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2191,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"10270:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2199,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"10312:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2197,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:10","typeDescriptions":{}}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:10","trueExpression":{"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:10","subExpression":{"arguments":[{"id":2194,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"10293:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2192,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:10","typeDescriptions":{}}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2120,"id":2203,"nodeType":"Return","src":"10256:66:10"}]}}]},"documentation":{"id":2108,"nodeType":"StructuredDocumentation","src":"9281:223:10","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2228,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:10","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"input","nameLocation":"9569:5:10","nodeType":"VariableDeclaration","scope":2228,"src":"9555:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2109,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2112,"mutability":"mutable","name":"begin","nameLocation":"9592:5:10","nodeType":"VariableDeclaration","scope":2228,"src":"9584:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"end","nameLocation":"9615:3:10","nodeType":"VariableDeclaration","scope":2228,"src":"9607:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:10"},"returnParameters":{"id":2120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"success","nameLocation":"9652:7:10","nodeType":"VariableDeclaration","scope":2228,"src":"9647:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2116,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2119,"mutability":"mutable","name":"value","nameLocation":"9668:5:10","nodeType":"VariableDeclaration","scope":2228,"src":"9661:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2118,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:10"},"scope":2853,"src":"9509:978:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2246,"nodeType":"Block","src":"10832:67:10","statements":[{"expression":{"arguments":[{"id":2237,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"10862:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2241,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"10878:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2239,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:10","typeDescriptions":{}}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:10","memberName":"length","nodeType":"MemberAccess","src":"10872:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2236,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2247,2278],"referencedDeclaration":2278,"src":"10849:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2235,"id":2245,"nodeType":"Return","src":"10842:50:10"}]},"documentation":{"id":2229,"nodeType":"StructuredDocumentation","src":"10493:259:10","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2247,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:10","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"input","nameLocation":"10793:5:10","nodeType":"VariableDeclaration","scope":2247,"src":"10779:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2230,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:10"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2247,"src":"10823:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:10"},"scope":2853,"src":"10757:142:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2277,"nodeType":"Block","src":"11320:156:10","statements":[{"assignments":[2260,2262],"declarations":[{"constant":false,"id":2260,"mutability":"mutable","name":"success","nameLocation":"11336:7:10","nodeType":"VariableDeclaration","scope":2277,"src":"11331:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2259,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"value","nameLocation":"11353:5:10","nodeType":"VariableDeclaration","scope":2277,"src":"11345:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2261,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2268,"initialValue":{"arguments":[{"id":2264,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"11378:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2265,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"11385:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2266,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"11392:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2263,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2299,2336],"referencedDeclaration":2336,"src":"11362:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:10"},{"condition":{"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:10","subExpression":{"id":2269,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"11411:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2274,"nodeType":"IfStatement","src":"11406:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2271,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"11427:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2273,"nodeType":"RevertStatement","src":"11420:27:10"}},{"expression":{"id":2275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"11464:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2258,"id":2276,"nodeType":"Return","src":"11457:12:10"}]},"documentation":{"id":2248,"nodeType":"StructuredDocumentation","src":"10905:307:10","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2278,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:10","nodeType":"FunctionDefinition","parameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"input","nameLocation":"11253:5:10","nodeType":"VariableDeclaration","scope":2278,"src":"11239:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2249,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"begin","nameLocation":"11268:5:10","nodeType":"VariableDeclaration","scope":2278,"src":"11260:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"end","nameLocation":"11283:3:10","nodeType":"VariableDeclaration","scope":2278,"src":"11275:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:10"},"returnParameters":{"id":2258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2278,"src":"11311:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:10"},"scope":2853,"src":"11217:259:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2298,"nodeType":"Block","src":"11803:86:10","statements":[{"expression":{"arguments":[{"id":2289,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"11852:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2293,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"11868:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2291,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:10","typeDescriptions":{}}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:10","memberName":"length","nodeType":"MemberAccess","src":"11862:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2288,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"11820:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2287,"id":2297,"nodeType":"Return","src":"11813:69:10"}]},"documentation":{"id":2279,"nodeType":"StructuredDocumentation","src":"11482:218:10","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2299,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:10","nodeType":"FunctionDefinition","parameters":{"id":2282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2281,"mutability":"mutable","name":"input","nameLocation":"11744:5:10","nodeType":"VariableDeclaration","scope":2299,"src":"11730:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2280,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:10"},"returnParameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"mutability":"mutable","name":"success","nameLocation":"11779:7:10","nodeType":"VariableDeclaration","scope":2299,"src":"11774:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2283,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2286,"mutability":"mutable","name":"value","nameLocation":"11796:5:10","nodeType":"VariableDeclaration","scope":2299,"src":"11788:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:10"},"scope":2853,"src":"11705:184:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2335,"nodeType":"Block","src":"12297:147:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2313,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"12311:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2316,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"12323:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2314,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:10","typeDescriptions":{}}},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:10","memberName":"length","nodeType":"MemberAccess","src":"12317:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"12340:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2321,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"12348:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2328,"nodeType":"IfStatement","src":"12307:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2312,"id":2327,"nodeType":"Return","src":"12353:17:10"}},{"expression":{"arguments":[{"id":2330,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"12419:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2331,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"12426:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2332,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"12433:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2329,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"12387:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2312,"id":2334,"nodeType":"Return","src":"12380:57:10"}]},"documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"11895:241:10","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2336,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:10","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"input","nameLocation":"12189:5:10","nodeType":"VariableDeclaration","scope":2336,"src":"12175:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2301,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"begin","nameLocation":"12212:5:10","nodeType":"VariableDeclaration","scope":2336,"src":"12204:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2303,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"end","nameLocation":"12235:3:10","nodeType":"VariableDeclaration","scope":2336,"src":"12227:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2305,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:10"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"success","nameLocation":"12273:7:10","nodeType":"VariableDeclaration","scope":2336,"src":"12268:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2308,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"value","nameLocation":"12290:5:10","nodeType":"VariableDeclaration","scope":2336,"src":"12282:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:10"},"scope":2853,"src":"12141:303:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2438,"nodeType":"Block","src":"12853:881:10","statements":[{"assignments":[2351],"declarations":[{"constant":false,"id":2351,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:10","nodeType":"VariableDeclaration","scope":2438,"src":"12863:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2350,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2356,"initialValue":{"arguments":[{"id":2354,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"12891:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2352,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:10","typeDescriptions":{}}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:10"},{"assignments":[2358],"declarations":[{"constant":false,"id":2358,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:10","nodeType":"VariableDeclaration","scope":2438,"src":"12945:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2357,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2378,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2359,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"12963:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2360,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"12969:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2368,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"13013:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2369,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"13021:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2367,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"12990:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2365,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:10","typeDescriptions":{}}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2372,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:10","typeDescriptions":{}}},"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:10"},{"assignments":[2380],"declarations":[{"constant":false,"id":2380,"mutability":"mutable","name":"offset","nameLocation":"13133:6:10","nodeType":"VariableDeclaration","scope":2438,"src":"13125:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2379,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2386,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2381,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"13142:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"13142:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:10"},{"assignments":[2388],"declarations":[{"constant":false,"id":2388,"mutability":"mutable","name":"result","nameLocation":"13183:6:10","nodeType":"VariableDeclaration","scope":2438,"src":"13175:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2390,"initialValue":{"hexValue":"30","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:10"},{"body":{"id":2432,"nodeType":"Block","src":"13250:447:10","statements":[{"assignments":[2404],"declarations":[{"constant":false,"id":2404,"mutability":"mutable","name":"chr","nameLocation":"13270:3:10","nodeType":"VariableDeclaration","scope":2432,"src":"13264:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2403,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2414,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2409,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"13319:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2410,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"13327:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2408,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"13296:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2406,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:10","typeDescriptions":{}}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2405,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"13276:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2415,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"13349:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2422,"nodeType":"IfStatement","src":"13345:31:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2349,"id":2421,"nodeType":"Return","src":"13359:17:10"}},{"expression":{"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2423,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"13390:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2426,"nodeType":"ExpressionStatement","src":"13390:12:10"},{"id":2431,"nodeType":"UncheckedBlock","src":"13416:271:10","statements":[{"expression":{"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"13659:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2428,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"13669:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2430,"nodeType":"ExpressionStatement","src":"13659:13:10"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2397,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"13236:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2398,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"13240:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2433,"initializationExpression":{"assignments":[2392],"declarations":[{"constant":false,"id":2392,"mutability":"mutable","name":"i","nameLocation":"13216:1:10","nodeType":"VariableDeclaration","scope":2433,"src":"13208:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2396,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2393,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"13220:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2394,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2380,"src":"13228:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:10"},"loopExpression":{"expression":{"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:10","subExpression":{"id":2400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"13247:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2402,"nodeType":"ExpressionStatement","src":"13245:3:10"},"nodeType":"ForStatement","src":"13203:494:10"},{"expression":{"components":[{"hexValue":"74727565","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"13720:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2349,"id":2437,"nodeType":"Return","src":"13706:21:10"}]},"documentation":{"id":2337,"nodeType":"StructuredDocumentation","src":"12450:227:10","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2439,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:10","nodeType":"FunctionDefinition","parameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"input","nameLocation":"12746:5:10","nodeType":"VariableDeclaration","scope":2439,"src":"12732:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2338,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"begin","nameLocation":"12769:5:10","nodeType":"VariableDeclaration","scope":2439,"src":"12761:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2343,"mutability":"mutable","name":"end","nameLocation":"12792:3:10","nodeType":"VariableDeclaration","scope":2439,"src":"12784:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:10"},"returnParameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"success","nameLocation":"12829:7:10","nodeType":"VariableDeclaration","scope":2439,"src":"12824:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2345,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2348,"mutability":"mutable","name":"value","nameLocation":"12846:5:10","nodeType":"VariableDeclaration","scope":2439,"src":"12838:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2347,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:10"},"scope":2853,"src":"12682:1052:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2457,"nodeType":"Block","src":"14032:67:10","statements":[{"expression":{"arguments":[{"id":2448,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"14062:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2452,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"14078:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2450,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:10","typeDescriptions":{}}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:10","memberName":"length","nodeType":"MemberAccess","src":"14072:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2447,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2458,2489],"referencedDeclaration":2489,"src":"14049:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2446,"id":2456,"nodeType":"Return","src":"14042:50:10"}]},"documentation":{"id":2440,"nodeType":"StructuredDocumentation","src":"13740:212:10","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:10","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2442,"mutability":"mutable","name":"input","nameLocation":"13993:5:10","nodeType":"VariableDeclaration","scope":2458,"src":"13979:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2441,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:10"},"returnParameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2458,"src":"14023:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:10"},"scope":2853,"src":"13957:142:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2488,"nodeType":"Block","src":"14472:165:10","statements":[{"assignments":[2471,2473],"declarations":[{"constant":false,"id":2471,"mutability":"mutable","name":"success","nameLocation":"14488:7:10","nodeType":"VariableDeclaration","scope":2488,"src":"14483:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2470,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"value","nameLocation":"14505:5:10","nodeType":"VariableDeclaration","scope":2488,"src":"14497:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2472,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2479,"initialValue":{"arguments":[{"id":2475,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"14530:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2476,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"14537:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2477,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"14544:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2474,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2510,2614],"referencedDeclaration":2614,"src":"14514:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:10"},{"condition":{"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:10","subExpression":{"id":2480,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"14563:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2485,"nodeType":"IfStatement","src":"14558:50:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2482,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"14579:27:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2484,"nodeType":"RevertStatement","src":"14572:36:10"}},{"expression":{"id":2486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"14625:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2469,"id":2487,"nodeType":"Return","src":"14618:12:10"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"14105:259:10","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2489,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:10","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"input","nameLocation":"14405:5:10","nodeType":"VariableDeclaration","scope":2489,"src":"14391:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2460,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"begin","nameLocation":"14420:5:10","nodeType":"VariableDeclaration","scope":2489,"src":"14412:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"end","nameLocation":"14435:3:10","nodeType":"VariableDeclaration","scope":2489,"src":"14427:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:10"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2489,"src":"14463:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2467,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:10"},"scope":2853,"src":"14369:268:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2509,"nodeType":"Block","src":"14944:70:10","statements":[{"expression":{"arguments":[{"id":2500,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"14977:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2504,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"14993:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2502,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:10","typeDescriptions":{}}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:10","memberName":"length","nodeType":"MemberAccess","src":"14987:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2499,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2510,2614],"referencedDeclaration":2614,"src":"14961:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2498,"id":2508,"nodeType":"Return","src":"14954:53:10"}]},"documentation":{"id":2490,"nodeType":"StructuredDocumentation","src":"14643:198:10","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2510,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:10","nodeType":"FunctionDefinition","parameters":{"id":2493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2492,"mutability":"mutable","name":"input","nameLocation":"14885:5:10","nodeType":"VariableDeclaration","scope":2510,"src":"14871:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2491,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:10"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"success","nameLocation":"14920:7:10","nodeType":"VariableDeclaration","scope":2510,"src":"14915:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2494,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2497,"mutability":"mutable","name":"value","nameLocation":"14937:5:10","nodeType":"VariableDeclaration","scope":2510,"src":"14929:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2496,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:10"},"scope":2853,"src":"14846:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2613,"nodeType":"Block","src":"15407:733:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2524,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"15421:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2527,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"15433:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2525,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:10","typeDescriptions":{}}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:10","memberName":"length","nodeType":"MemberAccess","src":"15427:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"15450:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2532,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"15458:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2542,"nodeType":"IfStatement","src":"15417:72:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2536,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:10","typeDescriptions":{}}},"id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2523,"id":2541,"nodeType":"Return","src":"15463:26:10"}},{"assignments":[2544],"declarations":[{"constant":false,"id":2544,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:10","nodeType":"VariableDeclaration","scope":2613,"src":"15500:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2543,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2567,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"15518:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2546,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"15524:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2556,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"15574:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2554,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:10","typeDescriptions":{}}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2558,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"15582:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2553,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"15545:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2551,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:10","typeDescriptions":{}}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2561,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:10","typeDescriptions":{}}},"id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:10"},{"assignments":[2569],"declarations":[{"constant":false,"id":2569,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:10","nodeType":"VariableDeclaration","scope":2613,"src":"15686:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2577,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:10","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2571,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2544,"src":"15716:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"15716:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2578,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"15803:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2579,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"15809:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2581,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"15818:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2611,"nodeType":"Block","src":"16083:51:10","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2605,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:10","typeDescriptions":{}}},"id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2523,"id":2610,"nodeType":"Return","src":"16097:26:10"}]},"id":2612,"nodeType":"IfStatement","src":"15799:335:10","trueBody":{"id":2603,"nodeType":"Block","src":"15834:243:10","statements":[{"assignments":[2584,2586],"declarations":[{"constant":false,"id":2584,"mutability":"mutable","name":"s","nameLocation":"15955:1:10","nodeType":"VariableDeclaration","scope":2603,"src":"15950:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2583,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"v","nameLocation":"15966:1:10","nodeType":"VariableDeclaration","scope":2603,"src":"15958:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2592,"initialValue":{"arguments":[{"id":2588,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"16003:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2589,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"16010:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2590,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"16017:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2587,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"15971:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:10"},{"expression":{"components":[{"id":2593,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"16043:1:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2598,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"16062:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2596,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:10","typeDescriptions":{}}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:10","typeDescriptions":{}}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2523,"id":2602,"nodeType":"Return","src":"16035:31:10"}]}}]},"documentation":{"id":2511,"nodeType":"StructuredDocumentation","src":"15020:226:10","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2614,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:10","nodeType":"FunctionDefinition","parameters":{"id":2518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"input","nameLocation":"15299:5:10","nodeType":"VariableDeclaration","scope":2614,"src":"15285:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2512,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2515,"mutability":"mutable","name":"begin","nameLocation":"15322:5:10","nodeType":"VariableDeclaration","scope":2614,"src":"15314:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"end","nameLocation":"15345:3:10","nodeType":"VariableDeclaration","scope":2614,"src":"15337:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2516,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:10"},"returnParameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"success","nameLocation":"15383:7:10","nodeType":"VariableDeclaration","scope":2614,"src":"15378:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2519,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2522,"mutability":"mutable","name":"value","nameLocation":"15400:5:10","nodeType":"VariableDeclaration","scope":2614,"src":"15392:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2521,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:10"},"scope":2853,"src":"15251:889:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2673,"nodeType":"Block","src":"16209:461:10","statements":[{"assignments":[2622],"declarations":[{"constant":false,"id":2622,"mutability":"mutable","name":"value","nameLocation":"16225:5:10","nodeType":"VariableDeclaration","scope":2673,"src":"16219:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2621,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2627,"initialValue":{"arguments":[{"id":2625,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"16239:3:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2623,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:10","typeDescriptions":{}}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:10"},{"id":2670,"nodeType":"UncheckedBlock","src":"16403:238:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"16431:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:10","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"16445:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:10","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"16491:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"16505:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:10","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"16552:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"16566:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:10","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2662,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2661,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:10","memberName":"max","nodeType":"MemberAccess","src":"16615:15:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2620,"id":2666,"nodeType":"Return","src":"16608:22:10"},"id":2667,"nodeType":"IfStatement","src":"16548:82:10","trueBody":{"expression":{"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"16578:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:10","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2660,"nodeType":"ExpressionStatement","src":"16578:11:10"}},"id":2668,"nodeType":"IfStatement","src":"16487:143:10","trueBody":{"expression":{"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"16518:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:10","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2649,"nodeType":"ExpressionStatement","src":"16518:11:10"}},"id":2669,"nodeType":"IfStatement","src":"16427:203:10","trueBody":{"expression":{"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"16457:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2638,"nodeType":"ExpressionStatement","src":"16457:11:10"}}]},{"expression":{"id":2671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"16658:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2620,"id":2672,"nodeType":"Return","src":"16651:12:10"}]},"id":2674,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:10","nodeType":"FunctionDefinition","parameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"chr","nameLocation":"16175:3:10","nodeType":"VariableDeclaration","scope":2674,"src":"16168:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2615,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:10"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2674,"src":"16202:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2618,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:10"},"scope":2853,"src":"16146:524:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2839,"nodeType":"Block","src":"17336:1331:10","statements":[{"assignments":[2683],"declarations":[{"constant":false,"id":2683,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:10","nodeType":"VariableDeclaration","scope":2839,"src":"17346:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2682,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2688,"initialValue":{"arguments":[{"id":2686,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"17374:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2684,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:10","typeDescriptions":{}}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:10"},{"assignments":[2690],"declarations":[{"constant":false,"id":2690,"mutability":"mutable","name":"output","nameLocation":"17403:6:10","nodeType":"VariableDeclaration","scope":2839,"src":"17390:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2689,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2698,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2694,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"17426:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:10","memberName":"length","nodeType":"MemberAccess","src":"17426:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2691,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:10"},{"assignments":[2700],"declarations":[{"constant":false,"id":2700,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:10","nodeType":"VariableDeclaration","scope":2839,"src":"17473:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2702,"initialValue":{"hexValue":"30","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:10"},{"body":{"id":2831,"nodeType":"Block","src":"17548:854:10","statements":[{"assignments":[2714],"declarations":[{"constant":false,"id":2714,"mutability":"mutable","name":"char","nameLocation":"17569:4:10","nodeType":"VariableDeclaration","scope":2831,"src":"17562:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2713,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2722,"initialValue":{"arguments":[{"arguments":[{"id":2718,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"17606:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2719,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"17614:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2717,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"17583:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2715,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:10","typeDescriptions":{}}},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:10"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2723,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"17637:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2727,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17672:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2725,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:10","typeDescriptions":{}}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2732,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2829,"nodeType":"Block","src":"18330:62:10","statements":[{"expression":{"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2822,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"18348:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2825,"indexExpression":{"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:10","subExpression":{"id":2823,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"18355:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2826,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"18373:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2828,"nodeType":"ExpressionStatement","src":"18348:29:10"}]},"id":2830,"nodeType":"IfStatement","src":"17631:761:10","trueBody":{"id":2821,"nodeType":"Block","src":"17687:637:10","statements":[{"expression":{"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2736,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"17705:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2739,"indexExpression":{"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:10","subExpression":{"id":2737,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"17712:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2742,"nodeType":"ExpressionStatement","src":"17705:29:10"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17756:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2753,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17825:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17894:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17963:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:10","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2783,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"18032:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:10","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"18101:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:10","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2803,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"18171:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2814,"nodeType":"IfStatement","src":"18167:143:10","trueBody":{"id":2813,"nodeType":"Block","src":"18185:125:10","statements":[{"expression":{"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2806,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"18263:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2809,"indexExpression":{"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:10","subExpression":{"id":2807,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"18270:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2812,"nodeType":"ExpressionStatement","src":"18263:28:10"}]}},"id":2815,"nodeType":"IfStatement","src":"18097:213:10","trueBody":{"expression":{"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2796,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"18115:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2799,"indexExpression":{"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:10","subExpression":{"id":2797,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"18122:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2802,"nodeType":"ExpressionStatement","src":"18115:29:10"}},"id":2816,"nodeType":"IfStatement","src":"18028:282:10","trueBody":{"expression":{"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2786,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"18046:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2789,"indexExpression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:10","subExpression":{"id":2787,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"18053:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2792,"nodeType":"ExpressionStatement","src":"18046:28:10"}},"id":2817,"nodeType":"IfStatement","src":"17959:351:10","trueBody":{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2776,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"17977:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2779,"indexExpression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:10","subExpression":{"id":2777,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"17984:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2782,"nodeType":"ExpressionStatement","src":"17977:28:10"}},"id":2818,"nodeType":"IfStatement","src":"17890:420:10","trueBody":{"expression":{"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2766,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"17908:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2769,"indexExpression":{"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:10","subExpression":{"id":2767,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"17915:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2772,"nodeType":"ExpressionStatement","src":"17908:28:10"}},"id":2819,"nodeType":"IfStatement","src":"17821:489:10","trueBody":{"expression":{"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2756,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"17839:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2759,"indexExpression":{"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:10","subExpression":{"id":2757,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"17846:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2762,"nodeType":"ExpressionStatement","src":"17839:28:10"}},"id":2820,"nodeType":"IfStatement","src":"17752:558:10","trueBody":{"expression":{"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2746,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"17770:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2749,"indexExpression":{"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:10","subExpression":{"id":2747,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"17777:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2752,"nodeType":"ExpressionStatement","src":"17770:28:10"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2706,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"17524:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2707,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"17528:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:10","memberName":"length","nodeType":"MemberAccess","src":"17528:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2832,"initializationExpression":{"assignments":[2704],"declarations":[{"constant":false,"id":2704,"mutability":"mutable","name":"i","nameLocation":"17521:1:10","nodeType":"VariableDeclaration","scope":2832,"src":"17513:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2705,"nodeType":"VariableDeclarationStatement","src":"17513:9:10"},"loopExpression":{"expression":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:10","subExpression":{"id":2710,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"17545:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2712,"nodeType":"ExpressionStatement","src":"17543:3:10"},"nodeType":"ForStatement","src":"17508:894:10"},{"AST":{"nodeType":"YulBlock","src":"18500:129:10","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18521:6:10"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18529:12:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18514:6:10"},"nodeType":"YulFunctionCall","src":"18514:28:10"},"nodeType":"YulExpressionStatement","src":"18514:28:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18562:4:10","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18572:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18584:1:10","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18591:1:10","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18598:12:10"},{"kind":"number","nodeType":"YulLiteral","src":"18612:2:10","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18594:3:10"},"nodeType":"YulFunctionCall","src":"18594:21:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18587:3:10"},"nodeType":"YulFunctionCall","src":"18587:29:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18580:3:10"},"nodeType":"YulFunctionCall","src":"18580:37:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18568:3:10"},"nodeType":"YulFunctionCall","src":"18568:50:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18555:6:10"},"nodeType":"YulFunctionCall","src":"18555:64:10"},"nodeType":"YulExpressionStatement","src":"18555:64:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2690,"isOffset":false,"isSlot":false,"src":"18521:6:10","valueSize":1},{"declaration":2690,"isOffset":false,"isSlot":false,"src":"18572:6:10","valueSize":1},{"declaration":2700,"isOffset":false,"isSlot":false,"src":"18529:12:10","valueSize":1},{"declaration":2700,"isOffset":false,"isSlot":false,"src":"18598:12:10","valueSize":1}],"flags":["memory-safe"],"id":2833,"nodeType":"InlineAssembly","src":"18475:154:10"},{"expression":{"arguments":[{"id":2836,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2690,"src":"18653:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2834,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:10","typeDescriptions":{}}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2681,"id":2838,"nodeType":"Return","src":"18639:21:10"}]},"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"16676:576:10","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2840,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:10","nodeType":"FunctionDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"mutability":"mutable","name":"input","nameLocation":"17291:5:10","nodeType":"VariableDeclaration","scope":2840,"src":"17277:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2676,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:10"},"returnParameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2840,"src":"17321:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2679,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:10"},"scope":2853,"src":"17257:1410:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2851,"nodeType":"Block","src":"19052:225:10","statements":[{"AST":{"nodeType":"YulBlock","src":"19201:70:10","statements":[{"nodeType":"YulAssignment","src":"19215:46:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19238:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"19246:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19234:3:10"},"nodeType":"YulFunctionCall","src":"19234:17:10"},{"name":"offset","nodeType":"YulIdentifier","src":"19253:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19230:3:10"},"nodeType":"YulFunctionCall","src":"19230:30:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19224:5:10"},"nodeType":"YulFunctionCall","src":"19224:37:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19215:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2843,"isOffset":false,"isSlot":false,"src":"19238:6:10","valueSize":1},{"declaration":2845,"isOffset":false,"isSlot":false,"src":"19253:6:10","valueSize":1},{"declaration":2848,"isOffset":false,"isSlot":false,"src":"19215:5:10","valueSize":1}],"flags":["memory-safe"],"id":2850,"nodeType":"InlineAssembly","src":"19176:95:10"}]},"documentation":{"id":2841,"nodeType":"StructuredDocumentation","src":"18673:268:10","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2852,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:10","nodeType":"FunctionDefinition","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:10","nodeType":"VariableDeclaration","scope":2852,"src":"18978:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2842,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"offset","nameLocation":"19007:6:10","nodeType":"VariableDeclaration","scope":2852,"src":"18999:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:10"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"value","nameLocation":"19045:5:10","nodeType":"VariableDeclaration","scope":2852,"src":"19037:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2847,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:10"},"scope":2853,"src":"18946:331:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2854,"src":"297:18982:10","usedErrors":[1511,1514,1517],"usedEvents":[]}],"src":"101:19179:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3201]},"id":3202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2855,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"138:205:11","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3201,"linearizedBaseContracts":[3201],"name":"ECDSA","nameLocation":"352:5:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2861,"members":[{"id":2857,"name":"NoError","nameLocation":"392:7:11","nodeType":"EnumValue","src":"392:7:11"},{"id":2858,"name":"InvalidSignature","nameLocation":"409:16:11","nodeType":"EnumValue","src":"409:16:11"},{"id":2859,"name":"InvalidSignatureLength","nameLocation":"435:22:11","nodeType":"EnumValue","src":"435:22:11"},{"id":2860,"name":"InvalidSignatureS","nameLocation":"467:17:11","nodeType":"EnumValue","src":"467:17:11"}],"name":"RecoverError","nameLocation":"369:12:11","nodeType":"EnumDefinition","src":"364:126:11"},{"documentation":{"id":2862,"nodeType":"StructuredDocumentation","src":"496:63:11","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2864,"name":"ECDSAInvalidSignature","nameLocation":"570:21:11","nodeType":"ErrorDefinition","parameters":{"id":2863,"nodeType":"ParameterList","parameters":[],"src":"591:2:11"},"src":"564:30:11"},{"documentation":{"id":2865,"nodeType":"StructuredDocumentation","src":"600:60:11","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2869,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:11","nodeType":"ErrorDefinition","parameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"length","nameLocation":"707:6:11","nodeType":"VariableDeclaration","scope":2869,"src":"699:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2866,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:11"},"src":"665:50:11"},{"documentation":{"id":2870,"nodeType":"StructuredDocumentation","src":"721:85:11","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2874,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:11","nodeType":"ErrorDefinition","parameters":{"id":2873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2872,"mutability":"mutable","name":"s","nameLocation":"848:1:11","nodeType":"VariableDeclaration","scope":2874,"src":"840:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:11"},"src":"811:40:11"},{"body":{"id":2926,"nodeType":"Block","src":"2285:622:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2889,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"2299:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:11","memberName":"length","nodeType":"MemberAccess","src":"2299:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2924,"nodeType":"Block","src":"2793:108:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2911,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:11","typeDescriptions":{}}},"id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2915,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"2827:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2861_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2859,"src":"2827:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2919,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"2872:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:11","memberName":"length","nodeType":"MemberAccess","src":"2872:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2917,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:11","typeDescriptions":{}}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2922,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2888,"id":2923,"nodeType":"Return","src":"2807:83:11"}]},"id":2925,"nodeType":"IfStatement","src":"2295:606:11","trueBody":{"id":2910,"nodeType":"Block","src":"2323:464:11","statements":[{"assignments":[2894],"declarations":[{"constant":false,"id":2894,"mutability":"mutable","name":"r","nameLocation":"2345:1:11","nodeType":"VariableDeclaration","scope":2910,"src":"2337:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2895,"nodeType":"VariableDeclarationStatement","src":"2337:9:11"},{"assignments":[2897],"declarations":[{"constant":false,"id":2897,"mutability":"mutable","name":"s","nameLocation":"2368:1:11","nodeType":"VariableDeclaration","scope":2910,"src":"2360:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2898,"nodeType":"VariableDeclarationStatement","src":"2360:9:11"},{"assignments":[2900],"declarations":[{"constant":false,"id":2900,"mutability":"mutable","name":"v","nameLocation":"2389:1:11","nodeType":"VariableDeclaration","scope":2910,"src":"2383:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2899,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2901,"nodeType":"VariableDeclarationStatement","src":"2383:7:11"},{"AST":{"nodeType":"YulBlock","src":"2560:171:11","statements":[{"nodeType":"YulAssignment","src":"2578:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:11"},"nodeType":"YulFunctionCall","src":"2589:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:11"},"nodeType":"YulFunctionCall","src":"2583:27:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:11"}]},{"nodeType":"YulAssignment","src":"2627:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:11"},"nodeType":"YulFunctionCall","src":"2638:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:11"},"nodeType":"YulFunctionCall","src":"2632:27:11"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:11"}]},{"nodeType":"YulAssignment","src":"2676:41:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:11","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:11"},"nodeType":"YulFunctionCall","src":"2695:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:11"},"nodeType":"YulFunctionCall","src":"2689:27:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:11"},"nodeType":"YulFunctionCall","src":"2681:36:11"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2894,"isOffset":false,"isSlot":false,"src":"2578:1:11","valueSize":1},{"declaration":2897,"isOffset":false,"isSlot":false,"src":"2627:1:11","valueSize":1},{"declaration":2879,"isOffset":false,"isSlot":false,"src":"2593:9:11","valueSize":1},{"declaration":2879,"isOffset":false,"isSlot":false,"src":"2642:9:11","valueSize":1},{"declaration":2879,"isOffset":false,"isSlot":false,"src":"2699:9:11","valueSize":1},{"declaration":2900,"isOffset":false,"isSlot":false,"src":"2676:1:11","valueSize":1}],"flags":["memory-safe"],"id":2902,"nodeType":"InlineAssembly","src":"2535:196:11"},{"expression":{"arguments":[{"id":2904,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"2762:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2905,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2768:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2906,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"2771:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2907,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2897,"src":"2774:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2903,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2927,3007,3115],"referencedDeclaration":3115,"src":"2751:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2888,"id":2909,"nodeType":"Return","src":"2744:32:11"}]}}]},"documentation":{"id":2875,"nodeType":"StructuredDocumentation","src":"857:1267:11","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2927,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:11","nodeType":"FunctionDefinition","parameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"hash","nameLocation":"2166:4:11","nodeType":"VariableDeclaration","scope":2927,"src":"2158:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2879,"mutability":"mutable","name":"signature","nameLocation":"2193:9:11","nodeType":"VariableDeclaration","scope":2927,"src":"2180:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2878,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:11"},"returnParameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:11","nodeType":"VariableDeclaration","scope":2927,"src":"2232:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2881,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2885,"mutability":"mutable","name":"err","nameLocation":"2264:3:11","nodeType":"VariableDeclaration","scope":2927,"src":"2251:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2884,"nodeType":"UserDefinedTypeName","pathNode":{"id":2883,"name":"RecoverError","nameLocations":["2251:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2861,"src":"2251:12:11"},"referencedDeclaration":2861,"src":"2251:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2887,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:11","nodeType":"VariableDeclaration","scope":2927,"src":"2269:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2886,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:11"},"scope":3201,"src":"2129:778:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2956,"nodeType":"Block","src":"3801:168:11","statements":[{"assignments":[2938,2941,2943],"declarations":[{"constant":false,"id":2938,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:11","nodeType":"VariableDeclaration","scope":2956,"src":"3812:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2937,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2941,"mutability":"mutable","name":"error","nameLocation":"3844:5:11","nodeType":"VariableDeclaration","scope":2956,"src":"3831:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2940,"nodeType":"UserDefinedTypeName","pathNode":{"id":2939,"name":"RecoverError","nameLocations":["3831:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2861,"src":"3831:12:11"},"referencedDeclaration":2861,"src":"3831:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2943,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:11","nodeType":"VariableDeclaration","scope":2956,"src":"3851:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2948,"initialValue":{"arguments":[{"id":2945,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"3882:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2946,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"3888:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2944,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2927,3007,3115],"referencedDeclaration":2927,"src":"3871:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:11"},{"expression":{"arguments":[{"id":2950,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2941,"src":"3920:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},{"id":2951,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"3927:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2949,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"3908:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2861_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2953,"nodeType":"ExpressionStatement","src":"3908:28:11"},{"expression":{"id":2954,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3953:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2936,"id":2955,"nodeType":"Return","src":"3946:16:11"}]},"documentation":{"id":2928,"nodeType":"StructuredDocumentation","src":"2913:796:11","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2957,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:11","nodeType":"FunctionDefinition","parameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"hash","nameLocation":"3739:4:11","nodeType":"VariableDeclaration","scope":2957,"src":"3731:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"signature","nameLocation":"3758:9:11","nodeType":"VariableDeclaration","scope":2957,"src":"3745:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2931,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:11"},"returnParameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2957,"src":"3792:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2934,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:11"},"scope":3201,"src":"3714:255:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3006,"nodeType":"Block","src":"4348:342:11","statements":[{"id":3005,"nodeType":"UncheckedBlock","src":"4358:326:11","statements":[{"assignments":[2975],"declarations":[{"constant":false,"id":2975,"mutability":"mutable","name":"s","nameLocation":"4390:1:11","nodeType":"VariableDeclaration","scope":3005,"src":"4382:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2974,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2982,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2976,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"4394:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:11","typeDescriptions":{}}},"id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:11"},{"assignments":[2984],"declarations":[{"constant":false,"id":2984,"mutability":"mutable","name":"v","nameLocation":"4591:1:11","nodeType":"VariableDeclaration","scope":3005,"src":"4585:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2983,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2997,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2989,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"4610:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2987,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:11","typeDescriptions":{}}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:11","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2985,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:11","typeDescriptions":{}}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:11"},{"expression":{"arguments":[{"id":2999,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"4659:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3000,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"4665:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3001,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"4668:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3002,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"4671:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2998,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2927,3007,3115],"referencedDeclaration":3115,"src":"4648:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2973,"id":3004,"nodeType":"Return","src":"4641:32:11"}]}]},"documentation":{"id":2958,"nodeType":"StructuredDocumentation","src":"3975:205:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:11","nodeType":"FunctionDefinition","parameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"hash","nameLocation":"4222:4:11","nodeType":"VariableDeclaration","scope":3007,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2962,"mutability":"mutable","name":"r","nameLocation":"4244:1:11","nodeType":"VariableDeclaration","scope":3007,"src":"4236:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2964,"mutability":"mutable","name":"vs","nameLocation":"4263:2:11","nodeType":"VariableDeclaration","scope":3007,"src":"4255:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2963,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:11"},"returnParameters":{"id":2973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2967,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:11","nodeType":"VariableDeclaration","scope":3007,"src":"4295:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2966,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2970,"mutability":"mutable","name":"err","nameLocation":"4327:3:11","nodeType":"VariableDeclaration","scope":3007,"src":"4314:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2969,"nodeType":"UserDefinedTypeName","pathNode":{"id":2968,"name":"RecoverError","nameLocations":["4314:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2861,"src":"4314:12:11"},"referencedDeclaration":2861,"src":"4314:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2972,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:11","nodeType":"VariableDeclaration","scope":3007,"src":"4332:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:11"},"scope":3201,"src":"4185:505:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3039,"nodeType":"Block","src":"4903:164:11","statements":[{"assignments":[3020,3023,3025],"declarations":[{"constant":false,"id":3020,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:11","nodeType":"VariableDeclaration","scope":3039,"src":"4914:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3019,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3023,"mutability":"mutable","name":"error","nameLocation":"4946:5:11","nodeType":"VariableDeclaration","scope":3039,"src":"4933:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3022,"nodeType":"UserDefinedTypeName","pathNode":{"id":3021,"name":"RecoverError","nameLocations":["4933:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2861,"src":"4933:12:11"},"referencedDeclaration":2861,"src":"4933:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3025,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:11","nodeType":"VariableDeclaration","scope":3039,"src":"4953:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3024,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3031,"initialValue":{"arguments":[{"id":3027,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"4984:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3028,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"4990:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3029,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"4993:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3026,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2927,3007,3115],"referencedDeclaration":3007,"src":"4973:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:11"},{"expression":{"arguments":[{"id":3033,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"5018:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},{"id":3034,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"5025:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3032,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"5006:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2861_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3036,"nodeType":"ExpressionStatement","src":"5006:28:11"},{"expression":{"id":3037,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"5051:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3018,"id":3038,"nodeType":"Return","src":"5044:16:11"}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"4696:116:11","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3040,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:11","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3010,"mutability":"mutable","name":"hash","nameLocation":"4842:4:11","nodeType":"VariableDeclaration","scope":3040,"src":"4834:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"r","nameLocation":"4856:1:11","nodeType":"VariableDeclaration","scope":3040,"src":"4848:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"vs","nameLocation":"4867:2:11","nodeType":"VariableDeclaration","scope":3040,"src":"4859:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3013,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:11"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3040,"src":"4894:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3016,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:11"},"scope":3201,"src":"4817:250:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3114,"nodeType":"Block","src":"5382:1372:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3061,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"6278:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:11","typeDescriptions":{}}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3075,"nodeType":"IfStatement","src":"6266:164:11","trueBody":{"id":3074,"nodeType":"Block","src":"6351:79:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:11","typeDescriptions":{}}},"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3069,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"6385:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2861_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2860,"src":"6385:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},{"id":3071,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"6417:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3058,"id":3073,"nodeType":"Return","src":"6365:54:11"}]}},{"assignments":[3077],"declarations":[{"constant":false,"id":3077,"mutability":"mutable","name":"signer","nameLocation":"6532:6:11","nodeType":"VariableDeclaration","scope":3114,"src":"6524:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3076,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3084,"initialValue":{"arguments":[{"id":3079,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"6551:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3080,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"6557:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3081,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"6560:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3082,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"6563:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3078,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3085,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"6579:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3086,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:11","typeDescriptions":{}}},"id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3104,"nodeType":"IfStatement","src":"6575:113:11","trueBody":{"id":3103,"nodeType":"Block","src":"6601:87:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3091,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:11","typeDescriptions":{}}},"id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3095,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"6635:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2861_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2858,"src":"6635:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:11","typeDescriptions":{}}},"id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3058,"id":3102,"nodeType":"Return","src":"6615:62:11"}]}},{"expression":{"components":[{"id":3105,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"6706:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3106,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"6714:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2861_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2857,"src":"6714:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:11","typeDescriptions":{}}},"id":3111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3058,"id":3113,"nodeType":"Return","src":"6698:49:11"}]},"documentation":{"id":3041,"nodeType":"StructuredDocumentation","src":"5073:125:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3115,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:11","nodeType":"FunctionDefinition","parameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"hash","nameLocation":"5240:4:11","nodeType":"VariableDeclaration","scope":3115,"src":"5232:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"v","nameLocation":"5260:1:11","nodeType":"VariableDeclaration","scope":3115,"src":"5254:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3044,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"r","nameLocation":"5279:1:11","nodeType":"VariableDeclaration","scope":3115,"src":"5271:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3049,"mutability":"mutable","name":"s","nameLocation":"5298:1:11","nodeType":"VariableDeclaration","scope":3115,"src":"5290:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:11"},"returnParameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:11","nodeType":"VariableDeclaration","scope":3115,"src":"5329:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3051,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"err","nameLocation":"5361:3:11","nodeType":"VariableDeclaration","scope":3115,"src":"5348:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3054,"nodeType":"UserDefinedTypeName","pathNode":{"id":3053,"name":"RecoverError","nameLocations":["5348:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2861,"src":"5348:12:11"},"referencedDeclaration":2861,"src":"5348:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:11","nodeType":"VariableDeclaration","scope":3115,"src":"5366:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:11"},"scope":3201,"src":"5203:1551:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3150,"nodeType":"Block","src":"6981:166:11","statements":[{"assignments":[3130,3133,3135],"declarations":[{"constant":false,"id":3130,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:11","nodeType":"VariableDeclaration","scope":3150,"src":"6992:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3129,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3133,"mutability":"mutable","name":"error","nameLocation":"7024:5:11","nodeType":"VariableDeclaration","scope":3150,"src":"7011:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3132,"nodeType":"UserDefinedTypeName","pathNode":{"id":3131,"name":"RecoverError","nameLocations":["7011:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2861,"src":"7011:12:11"},"referencedDeclaration":2861,"src":"7011:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3135,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:11","nodeType":"VariableDeclaration","scope":3150,"src":"7031:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3142,"initialValue":{"arguments":[{"id":3137,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"7062:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3138,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"7068:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3139,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"7071:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3140,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"7074:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3136,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2927,3007,3115],"referencedDeclaration":3115,"src":"7051:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2861_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:11"},{"expression":{"arguments":[{"id":3144,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"7098:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},{"id":3145,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"7105:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3143,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3200,"src":"7086:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2861_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3147,"nodeType":"ExpressionStatement","src":"7086:28:11"},{"expression":{"id":3148,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"7131:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3128,"id":3149,"nodeType":"Return","src":"7124:16:11"}]},"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"6760:122:11","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3151,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:11","nodeType":"FunctionDefinition","parameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"hash","nameLocation":"6912:4:11","nodeType":"VariableDeclaration","scope":3151,"src":"6904:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"v","nameLocation":"6924:1:11","nodeType":"VariableDeclaration","scope":3151,"src":"6918:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3119,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"r","nameLocation":"6935:1:11","nodeType":"VariableDeclaration","scope":3151,"src":"6927:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3124,"mutability":"mutable","name":"s","nameLocation":"6946:1:11","nodeType":"VariableDeclaration","scope":3151,"src":"6938:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:11"},"returnParameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3151,"src":"6972:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3126,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:11"},"scope":3201,"src":"6887:260:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3199,"nodeType":"Block","src":"7352:460:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3160,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"7366:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3161,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"7375:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2861_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2857,"src":"7375:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3166,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"7462:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3167,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"7471:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2861_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2858,"src":"7471:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3174,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"7567:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3175,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"7576:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2861_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2859,"src":"7576:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3186,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"7701:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3187,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"7710:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2861_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2860,"src":"7710:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3195,"nodeType":"IfStatement","src":"7697:109:11","trueBody":{"id":3194,"nodeType":"Block","src":"7742:64:11","statements":[{"errorCall":{"arguments":[{"id":3191,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"7786:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3190,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"7763:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3193,"nodeType":"RevertStatement","src":"7756:39:11"}]}},"id":3196,"nodeType":"IfStatement","src":"7563:243:11","trueBody":{"id":3185,"nodeType":"Block","src":"7613:78:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3181,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"7670:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:11","typeDescriptions":{}}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3178,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"7634:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3184,"nodeType":"RevertStatement","src":"7627:53:11"}]}},"id":3197,"nodeType":"IfStatement","src":"7458:348:11","trueBody":{"id":3173,"nodeType":"Block","src":"7502:55:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3170,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2864,"src":"7523:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3172,"nodeType":"RevertStatement","src":"7516:30:11"}]}},"id":3198,"nodeType":"IfStatement","src":"7362:444:11","trueBody":{"id":3165,"nodeType":"Block","src":"7397:55:11","statements":[{"functionReturnParameters":3159,"id":3164,"nodeType":"Return","src":"7411:7:11"}]}}]},"documentation":{"id":3152,"nodeType":"StructuredDocumentation","src":"7153:122:11","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3200,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:11","nodeType":"FunctionDefinition","parameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3155,"mutability":"mutable","name":"error","nameLocation":"7314:5:11","nodeType":"VariableDeclaration","scope":3200,"src":"7301:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3154,"nodeType":"UserDefinedTypeName","pathNode":{"id":3153,"name":"RecoverError","nameLocations":["7301:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2861,"src":"7301:12:11"},"referencedDeclaration":2861,"src":"7301:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2861","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3157,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:11","nodeType":"VariableDeclaration","scope":3200,"src":"7321:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3156,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:11"},"returnParameters":{"id":3159,"nodeType":"ParameterList","parameters":[],"src":"7352:0:11"},"scope":3201,"src":"7280:532:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3202,"src":"344:7470:11","usedErrors":[2864,2869,2874],"usedEvents":[]}],"src":"112:7703:11"},"id":11},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3428],"IERC5267":[24],"MessageHashUtils":[3514],"ShortString":[1116],"ShortStrings":[1327]},"id":3429,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3203,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3429,"sourceUnit":3515,"src":"139:56:12","symbolAliases":[{"foreign":{"id":3204,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"147:16:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3208,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3429,"sourceUnit":1328,"src":"196:62:12","symbolAliases":[{"foreign":{"id":3206,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"204:12:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3207,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"218:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3429,"sourceUnit":25,"src":"259:55:12","symbolAliases":[{"foreign":{"id":3209,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"267:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3212,"name":"IERC5267","nameLocations":["1988:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":24,"src":"1988:8:12"},"id":3213,"nodeType":"InheritanceSpecifier","src":"1988:8:12"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3211,"nodeType":"StructuredDocumentation","src":"316:1643:12","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3428,"linearizedBaseContracts":[3428,24],"name":"EIP712","nameLocation":"1978:6:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3215,"libraryName":{"id":3214,"name":"ShortStrings","nameLocations":["2009:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":1327,"src":"2009:12:12"},"nodeType":"UsingForDirective","src":"2003:25:12"},{"constant":true,"id":3220,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:12","nodeType":"VariableDeclaration","scope":3428,"src":"2034:140:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3217,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3222,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:12","nodeType":"VariableDeclaration","scope":3428,"src":"2373:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3224,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:12","nodeType":"VariableDeclaration","scope":3428,"src":"2427:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3226,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:12","nodeType":"VariableDeclaration","scope":3428,"src":"2473:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3225,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3228,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:12","nodeType":"VariableDeclaration","scope":3428,"src":"2517:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3230,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:12","nodeType":"VariableDeclaration","scope":3428,"src":"2560:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3233,"mutability":"immutable","name":"_name","nameLocation":"2637:5:12","nodeType":"VariableDeclaration","scope":3428,"src":"2607:35:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"},"typeName":{"id":3232,"nodeType":"UserDefinedTypeName","pathNode":{"id":3231,"name":"ShortString","nameLocations":["2607:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1116,"src":"2607:11:12"},"referencedDeclaration":1116,"src":"2607:11:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3236,"mutability":"immutable","name":"_version","nameLocation":"2678:8:12","nodeType":"VariableDeclaration","scope":3428,"src":"2648:38:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"},"typeName":{"id":3235,"nodeType":"UserDefinedTypeName","pathNode":{"id":3234,"name":"ShortString","nameLocations":["2648:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":1116,"src":"2648:11:12"},"referencedDeclaration":1116,"src":"2648:11:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3238,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:12","nodeType":"VariableDeclaration","scope":3428,"src":"2742:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3237,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3240,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:12","nodeType":"VariableDeclaration","scope":3428,"src":"2826:31:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3239,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3297,"nodeType":"Block","src":"3483:376:12","statements":[{"expression":{"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3248,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"3493:5:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3251,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"3532:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3249,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"3501:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:12","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1268,"src":"3501:30:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1116_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"src":"3493:53:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"id":3254,"nodeType":"ExpressionStatement","src":"3493:53:12"},{"expression":{"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3255,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"3556:8:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3258,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"3601:16:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3256,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"3567:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:12","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1268,"src":"3567:33:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1116_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"src":"3556:62:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"id":3261,"nodeType":"ExpressionStatement","src":"3556:62:12"},{"expression":{"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3262,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"3628:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3266,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"3658:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3264,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:12","typeDescriptions":{}}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3263,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3270,"nodeType":"ExpressionStatement","src":"3628:36:12"},{"expression":{"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3271,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"3674:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3275,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"3707:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3273,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:12","typeDescriptions":{}}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3272,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3279,"nodeType":"ExpressionStatement","src":"3674:42:12"},{"expression":{"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3280,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"3727:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3281,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3284,"nodeType":"ExpressionStatement","src":"3727:30:12"},{"expression":{"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3285,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"3767:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3286,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"3792:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3289,"nodeType":"ExpressionStatement","src":"3767:48:12"},{"expression":{"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3290,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"3825:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3293,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3428","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3428","typeString":"contract EIP712"}],"id":3292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:12","typeDescriptions":{}}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3296,"nodeType":"ExpressionStatement","src":"3825:27:12"}]},"documentation":{"id":3241,"nodeType":"StructuredDocumentation","src":"2864:559:12","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3298,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"name","nameLocation":"3454:4:12","nodeType":"VariableDeclaration","scope":3298,"src":"3440:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3242,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"version","nameLocation":"3474:7:12","nodeType":"VariableDeclaration","scope":3298,"src":"3460:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3244,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:12"},"returnParameters":{"id":3247,"nodeType":"ParameterList","parameters":[],"src":"3483:0:12"},"scope":3428,"src":"3428:431:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3323,"nodeType":"Block","src":"4007:200:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3306,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3428","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3428","typeString":"contract EIP712"}],"id":3305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3304,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:12","typeDescriptions":{}}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3308,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"4038:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3310,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3312,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"4070:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3321,"nodeType":"Block","src":"4146:55:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3318,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"4167:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3303,"id":3320,"nodeType":"Return","src":"4160:30:12"}]},"id":3322,"nodeType":"IfStatement","src":"4017:184:12","trueBody":{"id":3317,"nodeType":"Block","src":"4086:54:12","statements":[{"expression":{"id":3315,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4107:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3303,"id":3316,"nodeType":"Return","src":"4100:29:12"}]}}]},"documentation":{"id":3299,"nodeType":"StructuredDocumentation","src":"3865:75:12","text":" @dev Returns the domain separator for the current chain."},"id":3324,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:12","nodeType":"FunctionDefinition","parameters":{"id":3300,"nodeType":"ParameterList","parameters":[],"src":"3972:2:12"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3324,"src":"3998:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:12"},"scope":3428,"src":"3945:262:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3344,"nodeType":"Block","src":"4277:115:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":3332,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"4315:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3333,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"4326:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3334,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"4339:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3335,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3339,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3428","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3428","typeString":"contract EIP712"}],"id":3338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3337,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:12","typeDescriptions":{}}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3330,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:12","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3329,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3328,"id":3343,"nodeType":"Return","src":"4287:98:12"}]},"id":3345,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:12","nodeType":"FunctionDefinition","parameters":{"id":3325,"nodeType":"ParameterList","parameters":[],"src":"4243:2:12"},"returnParameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3345,"src":"4268:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:12"},"scope":3428,"src":"4213:179:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3360,"nodeType":"Block","src":"5103:90:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3355,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"5153:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3357,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"5175:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3353,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3514,"src":"5120:16:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3514_$","typeString":"type(library MessageHashUtils)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:12","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3513,"src":"5120:32:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3352,"id":3359,"nodeType":"Return","src":"5113:73:12"}]},"documentation":{"id":3346,"nodeType":"StructuredDocumentation","src":"4398:614:12","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3361,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:12","nodeType":"FunctionDefinition","parameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:12","nodeType":"VariableDeclaration","scope":3361,"src":"5043:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:12"},"returnParameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3361,"src":"5094:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:12"},"scope":3428,"src":"5017:176:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[23],"body":{"id":3402,"nodeType":"Block","src":"5556:229:12","statements":[{"expression":{"components":[{"hexValue":"0f","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5587:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3381,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"5617:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3383,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"5644:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3385,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5674:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"5674:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3389,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5709:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3428","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3428","typeString":"contract EIP712"}],"id":3388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5701:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3387,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:12","typeDescriptions":{}}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5736:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5728:7:12","typeDescriptions":{}}},"id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5766:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5752:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3395,"name":"uint256","nodeType":"ElementaryTypeName","src":"5756:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3396,"nodeType":"ArrayTypeName","src":"5756:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5573:205:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3379,"id":3401,"nodeType":"Return","src":"5566:212:12"}]},"documentation":{"id":3362,"nodeType":"StructuredDocumentation","src":"5199:24:12","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":3403,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5237:12:12","nodeType":"FunctionDefinition","parameters":{"id":3363,"nodeType":"ParameterList","parameters":[],"src":"5249:2:12"},"returnParameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"fields","nameLocation":"5333:6:12","nodeType":"VariableDeclaration","scope":3403,"src":"5326:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3364,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5326:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3367,"mutability":"mutable","name":"name","nameLocation":"5367:4:12","nodeType":"VariableDeclaration","scope":3403,"src":"5353:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3366,"name":"string","nodeType":"ElementaryTypeName","src":"5353:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3369,"mutability":"mutable","name":"version","nameLocation":"5399:7:12","nodeType":"VariableDeclaration","scope":3403,"src":"5385:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3368,"name":"string","nodeType":"ElementaryTypeName","src":"5385:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3371,"mutability":"mutable","name":"chainId","nameLocation":"5428:7:12","nodeType":"VariableDeclaration","scope":3403,"src":"5420:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"5420:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3373,"mutability":"mutable","name":"verifyingContract","nameLocation":"5457:17:12","nodeType":"VariableDeclaration","scope":3403,"src":"5449:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3372,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3375,"mutability":"mutable","name":"salt","nameLocation":"5496:4:12","nodeType":"VariableDeclaration","scope":3403,"src":"5488:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3378,"mutability":"mutable","name":"extensions","nameLocation":"5531:10:12","nodeType":"VariableDeclaration","scope":3403,"src":"5514:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3377,"nodeType":"ArrayTypeName","src":"5514:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5312:239:12"},"scope":3428,"src":"5228:557:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3414,"nodeType":"Block","src":"6166:65:12","statements":[{"expression":{"arguments":[{"id":3411,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"6210:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3409,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"6183:5:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6189:20:12","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1295,"src":"6183:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1116_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1116_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6183:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3408,"id":3413,"nodeType":"Return","src":"6176:48:12"}]},"documentation":{"id":3404,"nodeType":"StructuredDocumentation","src":"5791:256:12","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3415,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6114:11:12","nodeType":"FunctionDefinition","parameters":{"id":3405,"nodeType":"ParameterList","parameters":[],"src":"6125:2:12"},"returnParameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3415,"src":"6151:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3406,"name":"string","nodeType":"ElementaryTypeName","src":"6151:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6150:15:12"},"scope":3428,"src":"6105:126:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3426,"nodeType":"Block","src":"6621:71:12","statements":[{"expression":{"arguments":[{"id":3423,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"6668:16:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3421,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"6638:8:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1116","typeString":"ShortString"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6647:20:12","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1295,"src":"6638:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1116_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1116_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6638:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3420,"id":3425,"nodeType":"Return","src":"6631:54:12"}]},"documentation":{"id":3416,"nodeType":"StructuredDocumentation","src":"6237:262:12","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3427,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6566:14:12","nodeType":"FunctionDefinition","parameters":{"id":3417,"nodeType":"ParameterList","parameters":[],"src":"6580:2:12"},"returnParameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3427,"src":"6606:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3418,"name":"string","nodeType":"ElementaryTypeName","src":"6606:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6605:15:12"},"scope":3428,"src":"6557:135:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3429,"src":"1960:4734:12","usedErrors":[1124,1126],"usedEvents":[4]}],"src":"113:6582:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3514],"Strings":[2853]},"id":3515,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3430,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3432,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3515,"sourceUnit":2854,"src":"149:39:13","symbolAliases":[{"foreign":{"id":3431,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"157:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3433,"nodeType":"StructuredDocumentation","src":"190:330:13","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3514,"linearizedBaseContracts":[3514],"name":"MessageHashUtils","nameLocation":"529:16:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3442,"nodeType":"Block","src":"1339:341:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:13","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:13","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:13"},"nodeType":"YulFunctionCall","src":"1388:48:13"},"nodeType":"YulExpressionStatement","src":"1388:48:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:13","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:13"},"nodeType":"YulFunctionCall","src":"1490:25:13"},"nodeType":"YulExpressionStatement","src":"1490:25:13"},{"nodeType":"YulAssignment","src":"1569:31:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:13","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:13"},"nodeType":"YulFunctionCall","src":"1579:21:13"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3439,"isOffset":false,"isSlot":false,"src":"1569:6:13","valueSize":1},{"declaration":3436,"isOffset":false,"isSlot":false,"src":"1503:11:13","valueSize":1}],"flags":["memory-safe"],"id":3441,"nodeType":"InlineAssembly","src":"1349:325:13"}]},"documentation":{"id":3434,"nodeType":"StructuredDocumentation","src":"552:690:13","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3443,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:13","nodeType":"FunctionDefinition","parameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:13","nodeType":"VariableDeclaration","scope":3443,"src":"1279:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:13"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"digest","nameLocation":"1331:6:13","nodeType":"VariableDeclaration","scope":3443,"src":"1323:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:13"},"scope":3514,"src":"1247:433:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3468,"nodeType":"Block","src":"2257:143:13","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3460,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"2366:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:13","memberName":"length","nodeType":"MemberAccess","src":"2366:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3458,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"2349:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2853_$","typeString":"type(library Strings)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:13","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1565,"src":"2349:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3456,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:13","typeDescriptions":{}}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3464,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"2384:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3452,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:13","typeDescriptions":{}}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:13","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:13","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3451,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3450,"id":3467,"nodeType":"Return","src":"2267:126:13"}]},"documentation":{"id":3444,"nodeType":"StructuredDocumentation","src":"1686:480:13","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3469,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:13","nodeType":"FunctionDefinition","parameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"message","nameLocation":"2216:7:13","nodeType":"VariableDeclaration","scope":3469,"src":"2203:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3445,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:13"},"returnParameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3469,"src":"2248:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:13"},"scope":3514,"src":"2171:229:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3488,"nodeType":"Block","src":"2854:80:13","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3483,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"2910:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3484,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"2921:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3480,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3479,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3478,"id":3487,"nodeType":"Return","src":"2864:63:13"}]},"documentation":{"id":3470,"nodeType":"StructuredDocumentation","src":"2406:332:13","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3489,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:13","nodeType":"FunctionDefinition","parameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"validator","nameLocation":"2792:9:13","nodeType":"VariableDeclaration","scope":3489,"src":"2784:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3471,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"data","nameLocation":"2816:4:13","nodeType":"VariableDeclaration","scope":3489,"src":"2803:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3473,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:13"},"returnParameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3489,"src":"2845:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:13"},"scope":3514,"src":"2743:191:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3500,"nodeType":"Block","src":"3216:216:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:13","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:13","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:13"},"nodeType":"YulFunctionCall","src":"3265:24:13"},"nodeType":"YulExpressionStatement","src":"3265:24:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:13","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:13","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:13"},"nodeType":"YulFunctionCall","src":"3315:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:13"},"nodeType":"YulFunctionCall","src":"3302:32:13"},"nodeType":"YulExpressionStatement","src":"3302:32:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:13","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:13"},"nodeType":"YulFunctionCall","src":"3347:25:13"},"nodeType":"YulExpressionStatement","src":"3347:25:13"},{"nodeType":"YulAssignment","src":"3385:31:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:13","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:13"},"nodeType":"YulFunctionCall","src":"3395:21:13"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3497,"isOffset":false,"isSlot":false,"src":"3385:6:13","valueSize":1},{"declaration":3494,"isOffset":false,"isSlot":false,"src":"3360:11:13","valueSize":1},{"declaration":3492,"isOffset":false,"isSlot":false,"src":"3323:9:13","valueSize":1}],"flags":["memory-safe"],"id":3499,"nodeType":"InlineAssembly","src":"3226:200:13"}]},"documentation":{"id":3490,"nodeType":"StructuredDocumentation","src":"2940:129:13","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":3501,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:13","nodeType":"FunctionDefinition","parameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"validator","nameLocation":"3132:9:13","nodeType":"VariableDeclaration","scope":3501,"src":"3124:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3491,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:13","nodeType":"VariableDeclaration","scope":3501,"src":"3151:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:13"},"returnParameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3497,"mutability":"mutable","name":"digest","nameLocation":"3208:6:13","nodeType":"VariableDeclaration","scope":3501,"src":"3200:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:13"},"scope":3514,"src":"3074:358:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3512,"nodeType":"Block","src":"3983:265:13","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:13"},"nodeType":"YulFunctionCall","src":"4043:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:13"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:13","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:13"},"nodeType":"YulFunctionCall","src":"4067:23:13"},"nodeType":"YulExpressionStatement","src":"4067:23:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:13","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:13"},"nodeType":"YulFunctionCall","src":"4110:14:13"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:13"},"nodeType":"YulFunctionCall","src":"4103:39:13"},"nodeType":"YulExpressionStatement","src":"4103:39:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:13","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:13"},"nodeType":"YulFunctionCall","src":"4162:14:13"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:13"},"nodeType":"YulFunctionCall","src":"4155:34:13"},"nodeType":"YulExpressionStatement","src":"4155:34:13"},{"nodeType":"YulAssignment","src":"4202:30:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:13","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:13"},"nodeType":"YulFunctionCall","src":"4212:20:13"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3509,"isOffset":false,"isSlot":false,"src":"4202:6:13","valueSize":1},{"declaration":3504,"isOffset":false,"isSlot":false,"src":"4126:15:13","valueSize":1},{"declaration":3506,"isOffset":false,"isSlot":false,"src":"4178:10:13","valueSize":1}],"flags":["memory-safe"],"id":3511,"nodeType":"InlineAssembly","src":"3993:249:13"}]},"documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"3438:431:13","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3513,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:13","nodeType":"FunctionDefinition","parameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:13","nodeType":"VariableDeclaration","scope":3513,"src":"3899:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3506,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:13","nodeType":"VariableDeclaration","scope":3513,"src":"3924:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:13"},"returnParameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"mutability":"mutable","name":"digest","nameLocation":"3975:6:13","nodeType":"VariableDeclaration","scope":3513,"src":"3967:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:13"},"scope":3514,"src":"3874:374:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3515,"src":"521:3729:13","usedErrors":[],"usedEvents":[]}],"src":"123:4128:13"},"id":13},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5135],"Panic":[1110],"SafeCast":[6900]},"id":5136,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3516,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":1111,"src":"129:35:14","symbolAliases":[{"foreign":{"id":3517,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"137:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3520,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5136,"sourceUnit":6901,"src":"165:40:14","symbolAliases":[{"foreign":{"id":3519,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"173:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3521,"nodeType":"StructuredDocumentation","src":"207:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5135,"linearizedBaseContracts":[5135],"name":"Math","nameLocation":"289:4:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3526,"members":[{"id":3522,"name":"Floor","nameLocation":"324:5:14","nodeType":"EnumValue","src":"324:5:14"},{"id":3523,"name":"Ceil","nameLocation":"367:4:14","nodeType":"EnumValue","src":"367:4:14"},{"id":3524,"name":"Trunc","nameLocation":"409:5:14","nodeType":"EnumValue","src":"409:5:14"},{"id":3525,"name":"Expand","nameLocation":"439:6:14","nodeType":"EnumValue","src":"439:6:14"}],"name":"Rounding","nameLocation":"305:8:14","nodeType":"EnumDefinition","src":"300:169:14"},{"body":{"id":3539,"nodeType":"Block","src":"731:112:14","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:14","statements":[{"nodeType":"YulAssignment","src":"780:16:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:14"},"nodeType":"YulFunctionCall","src":"787:9:14"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:14"}]},{"nodeType":"YulAssignment","src":"809:18:14","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:14"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:14"},"nodeType":"YulFunctionCall","src":"817:10:14"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3529,"isOffset":false,"isSlot":false,"src":"791:1:14","valueSize":1},{"declaration":3529,"isOffset":false,"isSlot":false,"src":"825:1:14","valueSize":1},{"declaration":3531,"isOffset":false,"isSlot":false,"src":"794:1:14","valueSize":1},{"declaration":3534,"isOffset":false,"isSlot":false,"src":"809:4:14","valueSize":1},{"declaration":3536,"isOffset":false,"isSlot":false,"src":"780:3:14","valueSize":1},{"declaration":3536,"isOffset":false,"isSlot":false,"src":"820:3:14","valueSize":1}],"flags":["memory-safe"],"id":3538,"nodeType":"InlineAssembly","src":"741:96:14"}]},"documentation":{"id":3527,"nodeType":"StructuredDocumentation","src":"475:163:14","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3540,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:14","nodeType":"FunctionDefinition","parameters":{"id":3532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"a","nameLocation":"667:1:14","nodeType":"VariableDeclaration","scope":3540,"src":"659:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3528,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3531,"mutability":"mutable","name":"b","nameLocation":"678:1:14","nodeType":"VariableDeclaration","scope":3540,"src":"670:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:14"},"returnParameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"high","nameLocation":"712:4:14","nodeType":"VariableDeclaration","scope":3540,"src":"704:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3536,"mutability":"mutable","name":"low","nameLocation":"726:3:14","nodeType":"VariableDeclaration","scope":3540,"src":"718:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:14"},"scope":5135,"src":"643:200:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3553,"nodeType":"Block","src":"1115:462:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:14"},"nodeType":"YulFunctionCall","src":"1474:6:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:14"},"nodeType":"YulFunctionCall","src":"1461:20:14"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:14","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:14"},"nodeType":"YulFunctionCall","src":"1501:9:14"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:14"}]},{"nodeType":"YulAssignment","src":"1523:38:14","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:14"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:14"},"nodeType":"YulFunctionCall","src":"1535:12:14"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:14"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:14"},"nodeType":"YulFunctionCall","src":"1549:11:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:14"},"nodeType":"YulFunctionCall","src":"1531:30:14"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3543,"isOffset":false,"isSlot":false,"src":"1468:1:14","valueSize":1},{"declaration":3543,"isOffset":false,"isSlot":false,"src":"1505:1:14","valueSize":1},{"declaration":3545,"isOffset":false,"isSlot":false,"src":"1471:1:14","valueSize":1},{"declaration":3545,"isOffset":false,"isSlot":false,"src":"1508:1:14","valueSize":1},{"declaration":3548,"isOffset":false,"isSlot":false,"src":"1523:4:14","valueSize":1},{"declaration":3550,"isOffset":false,"isSlot":false,"src":"1494:3:14","valueSize":1},{"declaration":3550,"isOffset":false,"isSlot":false,"src":"1543:3:14","valueSize":1},{"declaration":3550,"isOffset":false,"isSlot":false,"src":"1556:3:14","valueSize":1}],"flags":["memory-safe"],"id":3552,"nodeType":"InlineAssembly","src":"1412:159:14"}]},"documentation":{"id":3541,"nodeType":"StructuredDocumentation","src":"849:173:14","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3554,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:14","nodeType":"FunctionDefinition","parameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"a","nameLocation":"1051:1:14","nodeType":"VariableDeclaration","scope":3554,"src":"1043:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3545,"mutability":"mutable","name":"b","nameLocation":"1062:1:14","nodeType":"VariableDeclaration","scope":3554,"src":"1054:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:14"},"returnParameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"high","nameLocation":"1096:4:14","nodeType":"VariableDeclaration","scope":3554,"src":"1088:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3550,"mutability":"mutable","name":"low","nameLocation":"1110:3:14","nodeType":"VariableDeclaration","scope":3554,"src":"1102:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:14"},"scope":5135,"src":"1027:550:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3588,"nodeType":"Block","src":"1784:149:14","statements":[{"id":3587,"nodeType":"UncheckedBlock","src":"1794:133:14","statements":[{"assignments":[3567],"declarations":[{"constant":false,"id":3567,"mutability":"mutable","name":"c","nameLocation":"1826:1:14","nodeType":"VariableDeclaration","scope":3587,"src":"1818:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3571,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3568,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"1830:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3569,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"1834:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:14"},{"expression":{"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3572,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"1849:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"1859:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3574,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"1864:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3577,"nodeType":"ExpressionStatement","src":"1849:16:14"},{"expression":{"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3578,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"1879:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3579,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"1888:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3582,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"1908:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3580,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"1892:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"1892:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3586,"nodeType":"ExpressionStatement","src":"1879:37:14"}]}]},"documentation":{"id":3555,"nodeType":"StructuredDocumentation","src":"1583:105:14","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3589,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:14","nodeType":"FunctionDefinition","parameters":{"id":3560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3557,"mutability":"mutable","name":"a","nameLocation":"1717:1:14","nodeType":"VariableDeclaration","scope":3589,"src":"1709:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3559,"mutability":"mutable","name":"b","nameLocation":"1728:1:14","nodeType":"VariableDeclaration","scope":3589,"src":"1720:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:14"},"returnParameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3562,"mutability":"mutable","name":"success","nameLocation":"1759:7:14","nodeType":"VariableDeclaration","scope":3589,"src":"1754:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3561,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3564,"mutability":"mutable","name":"result","nameLocation":"1776:6:14","nodeType":"VariableDeclaration","scope":3589,"src":"1768:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:14"},"scope":5135,"src":"1693:240:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3623,"nodeType":"Block","src":"2143:149:14","statements":[{"id":3622,"nodeType":"UncheckedBlock","src":"2153:133:14","statements":[{"assignments":[3602],"declarations":[{"constant":false,"id":3602,"mutability":"mutable","name":"c","nameLocation":"2185:1:14","nodeType":"VariableDeclaration","scope":3622,"src":"2177:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3606,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3603,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"2189:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3604,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"2193:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:14"},{"expression":{"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3607,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"2208:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3608,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"2218:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"2223:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3612,"nodeType":"ExpressionStatement","src":"2208:16:14"},{"expression":{"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"2238:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3614,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"2247:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3617,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"2267:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3615,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"2251:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"2251:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3621,"nodeType":"ExpressionStatement","src":"2238:37:14"}]}]},"documentation":{"id":3590,"nodeType":"StructuredDocumentation","src":"1939:108:14","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3624,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:14","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"a","nameLocation":"2076:1:14","nodeType":"VariableDeclaration","scope":3624,"src":"2068:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3591,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3594,"mutability":"mutable","name":"b","nameLocation":"2087:1:14","nodeType":"VariableDeclaration","scope":3624,"src":"2079:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:14"},"returnParameters":{"id":3600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"success","nameLocation":"2118:7:14","nodeType":"VariableDeclaration","scope":3624,"src":"2113:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3596,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3599,"mutability":"mutable","name":"result","nameLocation":"2135:6:14","nodeType":"VariableDeclaration","scope":3624,"src":"2127:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:14"},"scope":5135,"src":"2052:240:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3653,"nodeType":"Block","src":"2505:391:14","statements":[{"id":3652,"nodeType":"UncheckedBlock","src":"2515:375:14","statements":[{"assignments":[3637],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"c","nameLocation":"2547:1:14","nodeType":"VariableDeclaration","scope":3652,"src":"2539:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3641,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3638,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"2551:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3639,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"2555:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:14"},{"AST":{"nodeType":"YulBlock","src":"2595:188:14","statements":[{"nodeType":"YulAssignment","src":"2727:42:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:14"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:14"},"nodeType":"YulFunctionCall","src":"2744:9:14"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:14"},"nodeType":"YulFunctionCall","src":"2741:16:14"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:14"},"nodeType":"YulFunctionCall","src":"2759:9:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:14"},"nodeType":"YulFunctionCall","src":"2738:31:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3627,"isOffset":false,"isSlot":false,"src":"2751:1:14","valueSize":1},{"declaration":3627,"isOffset":false,"isSlot":false,"src":"2766:1:14","valueSize":1},{"declaration":3629,"isOffset":false,"isSlot":false,"src":"2755:1:14","valueSize":1},{"declaration":3637,"isOffset":false,"isSlot":false,"src":"2748:1:14","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"2727:7:14","valueSize":1}],"flags":["memory-safe"],"id":3642,"nodeType":"InlineAssembly","src":"2570:213:14"},{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3643,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"2842:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3644,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"2851:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3647,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"2871:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3645,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"2855:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"2855:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3651,"nodeType":"ExpressionStatement","src":"2842:37:14"}]}]},"documentation":{"id":3625,"nodeType":"StructuredDocumentation","src":"2298:111:14","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3654,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:14","nodeType":"FunctionDefinition","parameters":{"id":3630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"a","nameLocation":"2438:1:14","nodeType":"VariableDeclaration","scope":3654,"src":"2430:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3629,"mutability":"mutable","name":"b","nameLocation":"2449:1:14","nodeType":"VariableDeclaration","scope":3654,"src":"2441:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:14"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3632,"mutability":"mutable","name":"success","nameLocation":"2480:7:14","nodeType":"VariableDeclaration","scope":3654,"src":"2475:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3631,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3634,"mutability":"mutable","name":"result","nameLocation":"2497:6:14","nodeType":"VariableDeclaration","scope":3654,"src":"2489:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:14"},"scope":5135,"src":"2414:482:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3674,"nodeType":"Block","src":"3111:231:14","statements":[{"id":3673,"nodeType":"UncheckedBlock","src":"3121:215:14","statements":[{"expression":{"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3666,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"3145:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3667,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"3155:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3671,"nodeType":"ExpressionStatement","src":"3145:15:14"},{"AST":{"nodeType":"YulBlock","src":"3199:127:14","statements":[{"nodeType":"YulAssignment","src":"3293:19:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:14"},"nodeType":"YulFunctionCall","src":"3303:9:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3657,"isOffset":false,"isSlot":false,"src":"3307:1:14","valueSize":1},{"declaration":3659,"isOffset":false,"isSlot":false,"src":"3310:1:14","valueSize":1},{"declaration":3664,"isOffset":false,"isSlot":false,"src":"3293:6:14","valueSize":1}],"flags":["memory-safe"],"id":3672,"nodeType":"InlineAssembly","src":"3174:152:14"}]}]},"documentation":{"id":3655,"nodeType":"StructuredDocumentation","src":"2902:113:14","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3675,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:14","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"a","nameLocation":"3044:1:14","nodeType":"VariableDeclaration","scope":3675,"src":"3036:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"b","nameLocation":"3055:1:14","nodeType":"VariableDeclaration","scope":3675,"src":"3047:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:14"},"returnParameters":{"id":3665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"success","nameLocation":"3086:7:14","nodeType":"VariableDeclaration","scope":3675,"src":"3081:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3661,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3664,"mutability":"mutable","name":"result","nameLocation":"3103:6:14","nodeType":"VariableDeclaration","scope":3675,"src":"3095:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:14"},"scope":5135,"src":"3020:322:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3695,"nodeType":"Block","src":"3567:231:14","statements":[{"id":3694,"nodeType":"UncheckedBlock","src":"3577:215:14","statements":[{"expression":{"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3687,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"3601:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"3611:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3692,"nodeType":"ExpressionStatement","src":"3601:15:14"},{"AST":{"nodeType":"YulBlock","src":"3655:127:14","statements":[{"nodeType":"YulAssignment","src":"3749:19:14","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:14"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:14"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:14"},"nodeType":"YulFunctionCall","src":"3759:9:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3678,"isOffset":false,"isSlot":false,"src":"3763:1:14","valueSize":1},{"declaration":3680,"isOffset":false,"isSlot":false,"src":"3766:1:14","valueSize":1},{"declaration":3685,"isOffset":false,"isSlot":false,"src":"3749:6:14","valueSize":1}],"flags":["memory-safe"],"id":3693,"nodeType":"InlineAssembly","src":"3630:152:14"}]}]},"documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"3348:123:14","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3696,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:14","nodeType":"FunctionDefinition","parameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"a","nameLocation":"3500:1:14","nodeType":"VariableDeclaration","scope":3696,"src":"3492:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3680,"mutability":"mutable","name":"b","nameLocation":"3511:1:14","nodeType":"VariableDeclaration","scope":3696,"src":"3503:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3679,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:14"},"returnParameters":{"id":3686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"success","nameLocation":"3542:7:14","nodeType":"VariableDeclaration","scope":3696,"src":"3537:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3682,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3685,"mutability":"mutable","name":"result","nameLocation":"3559:6:14","nodeType":"VariableDeclaration","scope":3696,"src":"3551:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3684,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:14"},"scope":5135,"src":"3476:322:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3725,"nodeType":"Block","src":"3989:122:14","statements":[{"assignments":[3707,3709],"declarations":[{"constant":false,"id":3707,"mutability":"mutable","name":"success","nameLocation":"4005:7:14","nodeType":"VariableDeclaration","scope":3725,"src":"4000:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3706,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3709,"mutability":"mutable","name":"result","nameLocation":"4022:6:14","nodeType":"VariableDeclaration","scope":3725,"src":"4014:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3714,"initialValue":{"arguments":[{"id":3711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"4039:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3701,"src":"4042:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3710,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"4032:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:14"},{"expression":{"arguments":[{"id":3716,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"4069:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3717,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4078:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3718,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:14","memberName":"max","nodeType":"MemberAccess","src":"4086:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3715,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"4061:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3705,"id":3724,"nodeType":"Return","src":"4054:50:14"}]},"documentation":{"id":3697,"nodeType":"StructuredDocumentation","src":"3804:103:14","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3726,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:14","nodeType":"FunctionDefinition","parameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"a","nameLocation":"3943:1:14","nodeType":"VariableDeclaration","scope":3726,"src":"3935:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3698,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3701,"mutability":"mutable","name":"b","nameLocation":"3954:1:14","nodeType":"VariableDeclaration","scope":3726,"src":"3946:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3700,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:14"},"returnParameters":{"id":3705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3726,"src":"3980:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:14"},"scope":5135,"src":"3912:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3745,"nodeType":"Block","src":"4294:73:14","statements":[{"assignments":[null,3737],"declarations":[null,{"constant":false,"id":3737,"mutability":"mutable","name":"result","nameLocation":"4315:6:14","nodeType":"VariableDeclaration","scope":3745,"src":"4307:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3742,"initialValue":{"arguments":[{"id":3739,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"4332:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3740,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"4335:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3738,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"4325:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:14"},{"expression":{"id":3743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"4354:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3735,"id":3744,"nodeType":"Return","src":"4347:13:14"}]},"documentation":{"id":3727,"nodeType":"StructuredDocumentation","src":"4117:95:14","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3746,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:14","nodeType":"FunctionDefinition","parameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3729,"mutability":"mutable","name":"a","nameLocation":"4248:1:14","nodeType":"VariableDeclaration","scope":3746,"src":"4240:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3728,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3731,"mutability":"mutable","name":"b","nameLocation":"4259:1:14","nodeType":"VariableDeclaration","scope":3746,"src":"4251:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:14"},"returnParameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3746,"src":"4285:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:14"},"scope":5135,"src":"4217:150:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3775,"nodeType":"Block","src":"4564:122:14","statements":[{"assignments":[3757,3759],"declarations":[{"constant":false,"id":3757,"mutability":"mutable","name":"success","nameLocation":"4580:7:14","nodeType":"VariableDeclaration","scope":3775,"src":"4575:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3756,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3759,"mutability":"mutable","name":"result","nameLocation":"4597:6:14","nodeType":"VariableDeclaration","scope":3775,"src":"4589:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3764,"initialValue":{"arguments":[{"id":3761,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"4614:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3762,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3751,"src":"4617:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3760,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"4607:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:14"},{"expression":{"arguments":[{"id":3766,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"4644:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"4653:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:14","memberName":"max","nodeType":"MemberAccess","src":"4661:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3765,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"4636:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3755,"id":3774,"nodeType":"Return","src":"4629:50:14"}]},"documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"4373:109:14","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3776,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:14","nodeType":"FunctionDefinition","parameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"a","nameLocation":"4518:1:14","nodeType":"VariableDeclaration","scope":3776,"src":"4510:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3751,"mutability":"mutable","name":"b","nameLocation":"4529:1:14","nodeType":"VariableDeclaration","scope":3776,"src":"4521:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:14"},"returnParameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3776,"src":"4555:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:14"},"scope":5135,"src":"4487:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3802,"nodeType":"Block","src":"5158:207:14","statements":[{"id":3801,"nodeType":"UncheckedBlock","src":"5168:191:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3788,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"5306:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"5312:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3790,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"5316:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3795,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"5337:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3793,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"5321:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"5321:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3787,"id":3800,"nodeType":"Return","src":"5299:49:14"}]}]},"documentation":{"id":3777,"nodeType":"StructuredDocumentation","src":"4692:374:14","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3803,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:14","nodeType":"FunctionDefinition","parameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"condition","nameLocation":"5093:9:14","nodeType":"VariableDeclaration","scope":3803,"src":"5088:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3778,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3781,"mutability":"mutable","name":"a","nameLocation":"5112:1:14","nodeType":"VariableDeclaration","scope":3803,"src":"5104:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3783,"mutability":"mutable","name":"b","nameLocation":"5123:1:14","nodeType":"VariableDeclaration","scope":3803,"src":"5115:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3782,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:14"},"returnParameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3803,"src":"5149:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:14"},"scope":5135,"src":"5071:294:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3821,"nodeType":"Block","src":"5502:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3814,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"5527:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3815,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"5531:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3817,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"5534:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3818,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"5537:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3813,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"5519:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3812,"id":3820,"nodeType":"Return","src":"5512:27:14"}]},"documentation":{"id":3804,"nodeType":"StructuredDocumentation","src":"5371:59:14","text":" @dev Returns the largest of two numbers."},"id":3822,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:14","nodeType":"FunctionDefinition","parameters":{"id":3809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3806,"mutability":"mutable","name":"a","nameLocation":"5456:1:14","nodeType":"VariableDeclaration","scope":3822,"src":"5448:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3808,"mutability":"mutable","name":"b","nameLocation":"5467:1:14","nodeType":"VariableDeclaration","scope":3822,"src":"5459:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3807,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:14"},"returnParameters":{"id":3812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3822,"src":"5493:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:14"},"scope":5135,"src":"5435:111:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3840,"nodeType":"Block","src":"5684:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3833,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"5709:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3834,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"5713:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3836,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"5716:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3837,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"5719:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3832,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"5701:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3831,"id":3839,"nodeType":"Return","src":"5694:27:14"}]},"documentation":{"id":3823,"nodeType":"StructuredDocumentation","src":"5552:60:14","text":" @dev Returns the smallest of two numbers."},"id":3841,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:14","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"a","nameLocation":"5638:1:14","nodeType":"VariableDeclaration","scope":3841,"src":"5630:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"b","nameLocation":"5649:1:14","nodeType":"VariableDeclaration","scope":3841,"src":"5641:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3826,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:14"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3841,"src":"5675:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:14"},"scope":5135,"src":"5617:111:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3863,"nodeType":"Block","src":"5912:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3851,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"5967:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3852,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"5971:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3855,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"5977:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3856,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"5981:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3850,"id":3862,"nodeType":"Return","src":"5959:28:14"}]},"documentation":{"id":3842,"nodeType":"StructuredDocumentation","src":"5734:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3864,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:14","nodeType":"FunctionDefinition","parameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3844,"mutability":"mutable","name":"a","nameLocation":"5866:1:14","nodeType":"VariableDeclaration","scope":3864,"src":"5858:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"b","nameLocation":"5877:1:14","nodeType":"VariableDeclaration","scope":3864,"src":"5869:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:14"},"returnParameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3864,"src":"5903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3848,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:14"},"scope":5135,"src":"5841:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3904,"nodeType":"Block","src":"6286:633:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3874,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"6300:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3885,"nodeType":"IfStatement","src":"6296:150:14","trueBody":{"id":3884,"nodeType":"Block","src":"6308:138:14","statements":[{"expression":{"arguments":[{"expression":{"id":3880,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"6412:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1110_$","typeString":"type(library Panic)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"6412:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3877,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"6400:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1110_$","typeString":"type(library Panic)"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"6400:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3883,"nodeType":"ExpressionStatement","src":"6400:35:14"}]}},{"id":3903,"nodeType":"UncheckedBlock","src":"6829:84:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"6876:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3886,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"6860:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"6860:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3892,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"6887:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3896,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"6896:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3900,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3873,"id":3902,"nodeType":"Return","src":"6853:49:14"}]}]},"documentation":{"id":3865,"nodeType":"StructuredDocumentation","src":"6000:210:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3905,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:14","nodeType":"FunctionDefinition","parameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"mutability":"mutable","name":"a","nameLocation":"6240:1:14","nodeType":"VariableDeclaration","scope":3905,"src":"6232:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"b","nameLocation":"6251:1:14","nodeType":"VariableDeclaration","scope":3905,"src":"6243:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3868,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:14"},"returnParameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3905,"src":"6277:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:14"},"scope":5135,"src":"6215:704:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4040,"nodeType":"Block","src":"7340:3585:14","statements":[{"id":4039,"nodeType":"UncheckedBlock","src":"7350:3569:14","statements":[{"assignments":[3918,3920],"declarations":[{"constant":false,"id":3918,"mutability":"mutable","name":"high","nameLocation":"7383:4:14","nodeType":"VariableDeclaration","scope":4039,"src":"7375:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"low","nameLocation":"7397:3:14","nodeType":"VariableDeclaration","scope":4039,"src":"7389:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3925,"initialValue":{"arguments":[{"id":3922,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"7411:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3923,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"7414:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3921,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"7404:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3926,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"7498:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3934,"nodeType":"IfStatement","src":"7494:365:14","trueBody":{"id":3933,"nodeType":"Block","src":"7509:350:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3929,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"7827:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3930,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"7833:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3916,"id":3932,"nodeType":"Return","src":"7820:24:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3935,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"7969:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3936,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"7984:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3953,"nodeType":"IfStatement","src":"7965:142:14","trueBody":{"id":3952,"nodeType":"Block","src":"7990:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3942,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"8028:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3945,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"8046:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1110_$","typeString":"type(library Panic)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"8046:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3947,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"8070:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1110_$","typeString":"type(library Panic)"}},"id":3948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:14","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1073,"src":"8070:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3941,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"8020:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3938,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"8008:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1110_$","typeString":"type(library Panic)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"8008:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3951,"nodeType":"ExpressionStatement","src":"8008:84:14"}]}},{"assignments":[3955],"declarations":[{"constant":false,"id":3955,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:14","nodeType":"VariableDeclaration","scope":4039,"src":"8359:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3956,"nodeType":"VariableDeclarationStatement","src":"8359:17:14"},{"AST":{"nodeType":"YulBlock","src":"8415:283:14","statements":[{"nodeType":"YulAssignment","src":"8484:38:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:14"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:14"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:14"},"nodeType":"YulFunctionCall","src":"8497:25:14"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:14"}]},{"nodeType":"YulAssignment","src":"8604:37:14","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:14"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:14"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:14"},"nodeType":"YulFunctionCall","src":"8622:18:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:14"},"nodeType":"YulFunctionCall","src":"8612:29:14"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:14"}]},{"nodeType":"YulAssignment","src":"8658:26:14","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:14"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:14"},"nodeType":"YulFunctionCall","src":"8665:19:14"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3912,"isOffset":false,"isSlot":false,"src":"8510:11:14","valueSize":1},{"declaration":3918,"isOffset":false,"isSlot":false,"src":"8604:4:14","valueSize":1},{"declaration":3918,"isOffset":false,"isSlot":false,"src":"8616:4:14","valueSize":1},{"declaration":3920,"isOffset":false,"isSlot":false,"src":"8636:3:14","valueSize":1},{"declaration":3920,"isOffset":false,"isSlot":false,"src":"8658:3:14","valueSize":1},{"declaration":3920,"isOffset":false,"isSlot":false,"src":"8669:3:14","valueSize":1},{"declaration":3955,"isOffset":false,"isSlot":false,"src":"8484:9:14","valueSize":1},{"declaration":3955,"isOffset":false,"isSlot":false,"src":"8625:9:14","valueSize":1},{"declaration":3955,"isOffset":false,"isSlot":false,"src":"8674:9:14","valueSize":1},{"declaration":3908,"isOffset":false,"isSlot":false,"src":"8504:1:14","valueSize":1},{"declaration":3910,"isOffset":false,"isSlot":false,"src":"8507:1:14","valueSize":1}],"flags":["memory-safe"],"id":3957,"nodeType":"InlineAssembly","src":"8390:308:14"},{"assignments":[3959],"declarations":[{"constant":false,"id":3959,"mutability":"mutable","name":"twos","nameLocation":"8910:4:14","nodeType":"VariableDeclaration","scope":4039,"src":"8902:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3966,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3960,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"8917:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3962,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"8936:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:14"},{"AST":{"nodeType":"YulBlock","src":"8987:359:14","statements":[{"nodeType":"YulAssignment","src":"9052:37:14","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:14"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:14"},"nodeType":"YulFunctionCall","src":"9067:22:14"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:14"}]},{"nodeType":"YulAssignment","src":"9153:21:14","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:14"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:14"},"nodeType":"YulFunctionCall","src":"9160:14:14"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:14"}]},{"nodeType":"YulAssignment","src":"9293:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:14","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:14"},"nodeType":"YulFunctionCall","src":"9309:12:14"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:14"},"nodeType":"YulFunctionCall","src":"9305:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:14"},"nodeType":"YulFunctionCall","src":"9301:31:14"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3912,"isOffset":false,"isSlot":false,"src":"9052:11:14","valueSize":1},{"declaration":3912,"isOffset":false,"isSlot":false,"src":"9071:11:14","valueSize":1},{"declaration":3920,"isOffset":false,"isSlot":false,"src":"9153:3:14","valueSize":1},{"declaration":3920,"isOffset":false,"isSlot":false,"src":"9164:3:14","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"9084:4:14","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"9169:4:14","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"9293:4:14","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"9316:4:14","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"9323:4:14","valueSize":1}],"flags":["memory-safe"],"id":3967,"nodeType":"InlineAssembly","src":"8962:384:14"},{"expression":{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3968,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"9409:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3969,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"9416:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3970,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3959,"src":"9423:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3973,"nodeType":"ExpressionStatement","src":"9409:18:14"},{"assignments":[3975],"declarations":[{"constant":false,"id":3975,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:14","nodeType":"VariableDeclaration","scope":4039,"src":"9762:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3982,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3977,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"9785:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:14"},{"expression":{"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3983,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10018:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"10033:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3986,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3990,"nodeType":"ExpressionStatement","src":"10018:36:14"},{"expression":{"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3991,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10088:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3993,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"10103:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3994,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10117:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3998,"nodeType":"ExpressionStatement","src":"10088:36:14"},{"expression":{"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3999,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10160:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4001,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"10175:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4002,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10189:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4006,"nodeType":"ExpressionStatement","src":"10160:36:14"},{"expression":{"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4007,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10231:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4009,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"10246:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4010,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10260:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4014,"nodeType":"ExpressionStatement","src":"10231:36:14"},{"expression":{"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4015,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10304:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"10319:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4018,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10333:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4022,"nodeType":"ExpressionStatement","src":"10304:36:14"},{"expression":{"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4023,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"10393:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4026,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10407:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4030,"nodeType":"ExpressionStatement","src":"10378:36:14"},{"expression":{"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"10859:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4032,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"10868:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4033,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"10874:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4036,"nodeType":"ExpressionStatement","src":"10859:22:14"},{"expression":{"id":4037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"10902:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3916,"id":4038,"nodeType":"Return","src":"10895:13:14"}]}]},"documentation":{"id":3906,"nodeType":"StructuredDocumentation","src":"6925:312:14","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4041,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:14","nodeType":"FunctionDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"x","nameLocation":"7266:1:14","nodeType":"VariableDeclaration","scope":4041,"src":"7258:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3910,"mutability":"mutable","name":"y","nameLocation":"7277:1:14","nodeType":"VariableDeclaration","scope":4041,"src":"7269:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3909,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:14","nodeType":"VariableDeclaration","scope":4041,"src":"7280:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:14"},"returnParameters":{"id":3916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"result","nameLocation":"7332:6:14","nodeType":"VariableDeclaration","scope":4041,"src":"7324:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:14"},"scope":5135,"src":"7242:3683:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4077,"nodeType":"Block","src":"11164:128:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4057,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"11188:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4058,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"11191:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4059,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"11194:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4056,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4041,4078],"referencedDeclaration":4041,"src":"11181:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4064,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"11242:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}],"id":4063,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"11225:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3526_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4067,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"11262:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4068,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"11265:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4069,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"11268:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4066,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4061,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"11209:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"11209:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4055,"id":4076,"nodeType":"Return","src":"11174:111:14"}]},"documentation":{"id":4042,"nodeType":"StructuredDocumentation","src":"10931:118:14","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4078,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:14","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4044,"mutability":"mutable","name":"x","nameLocation":"11078:1:14","nodeType":"VariableDeclaration","scope":4078,"src":"11070:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4043,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4046,"mutability":"mutable","name":"y","nameLocation":"11089:1:14","nodeType":"VariableDeclaration","scope":4078,"src":"11081:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4045,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4048,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:14","nodeType":"VariableDeclaration","scope":4078,"src":"11092:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4051,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:14","nodeType":"VariableDeclaration","scope":4078,"src":"11113:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"},"typeName":{"id":4050,"nodeType":"UserDefinedTypeName","pathNode":{"id":4049,"name":"Rounding","nameLocations":["11113:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"11113:8:14"},"referencedDeclaration":3526,"src":"11113:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:14"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4078,"src":"11155:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:14"},"scope":5135,"src":"11054:238:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4127,"nodeType":"Block","src":"11500:245:14","statements":[{"id":4126,"nodeType":"UncheckedBlock","src":"11510:229:14","statements":[{"assignments":[4091,4093],"declarations":[{"constant":false,"id":4091,"mutability":"mutable","name":"high","nameLocation":"11543:4:14","nodeType":"VariableDeclaration","scope":4126,"src":"11535:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4090,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4093,"mutability":"mutable","name":"low","nameLocation":"11557:3:14","nodeType":"VariableDeclaration","scope":4126,"src":"11549:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4098,"initialValue":{"arguments":[{"id":4095,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"11571:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4096,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11574:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4094,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"11564:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4099,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"11594:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4101,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"11607:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4112,"nodeType":"IfStatement","src":"11590:86:14","trueBody":{"id":4111,"nodeType":"Block","src":"11610:66:14","statements":[{"expression":{"arguments":[{"expression":{"id":4107,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"11640:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1110_$","typeString":"type(library Panic)"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:14","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1073,"src":"11640:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4104,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"11628:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1110_$","typeString":"type(library Panic)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"11628:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4110,"nodeType":"ExpressionStatement","src":"11628:33:14"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4113,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"11697:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4115,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"11712:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4120,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11719:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4121,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"11726:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4089,"id":4125,"nodeType":"Return","src":"11689:39:14"}]}]},"documentation":{"id":4079,"nodeType":"StructuredDocumentation","src":"11298:111:14","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4128,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:14","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"x","nameLocation":"11438:1:14","nodeType":"VariableDeclaration","scope":4128,"src":"11430:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4080,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4083,"mutability":"mutable","name":"y","nameLocation":"11449:1:14","nodeType":"VariableDeclaration","scope":4128,"src":"11441:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4085,"mutability":"mutable","name":"n","nameLocation":"11458:1:14","nodeType":"VariableDeclaration","scope":4128,"src":"11452:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4084,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:14"},"returnParameters":{"id":4089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"result","nameLocation":"11492:6:14","nodeType":"VariableDeclaration","scope":4128,"src":"11484:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:14"},"scope":5135,"src":"11414:331:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4166,"nodeType":"Block","src":"11963:113:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4144,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"11987:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4145,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"11990:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4146,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"11993:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4143,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4128,4167],"referencedDeclaration":4128,"src":"11980:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4151,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"12031:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}],"id":4150,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"12014:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3526_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4154,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"12051:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4155,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4133,"src":"12054:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4157,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"12062:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4153,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4148,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"11998:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"11998:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4142,"id":4165,"nodeType":"Return","src":"11973:96:14"}]},"documentation":{"id":4129,"nodeType":"StructuredDocumentation","src":"11751:109:14","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4167,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:14","nodeType":"FunctionDefinition","parameters":{"id":4139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4131,"mutability":"mutable","name":"x","nameLocation":"11889:1:14","nodeType":"VariableDeclaration","scope":4167,"src":"11881:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4130,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4133,"mutability":"mutable","name":"y","nameLocation":"11900:1:14","nodeType":"VariableDeclaration","scope":4167,"src":"11892:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4132,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4135,"mutability":"mutable","name":"n","nameLocation":"11909:1:14","nodeType":"VariableDeclaration","scope":4167,"src":"11903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4134,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4138,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:14","nodeType":"VariableDeclaration","scope":4167,"src":"11912:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"},"typeName":{"id":4137,"nodeType":"UserDefinedTypeName","pathNode":{"id":4136,"name":"Rounding","nameLocations":["11912:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"11912:8:14"},"referencedDeclaration":3526,"src":"11912:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:14"},"returnParameters":{"id":4142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4167,"src":"11954:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4140,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:14"},"scope":5135,"src":"11865:211:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4263,"nodeType":"Block","src":"12710:1849:14","statements":[{"id":4262,"nodeType":"UncheckedBlock","src":"12720:1833:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"12748:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4182,"nodeType":"IfStatement","src":"12744:20:14","trueBody":{"expression":{"hexValue":"30","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4176,"id":4181,"nodeType":"Return","src":"12756:8:14"}},{"assignments":[4184],"declarations":[{"constant":false,"id":4184,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:14","nodeType":"VariableDeclaration","scope":4262,"src":"13235:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4183,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4188,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"13255:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4186,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"13259:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:14"},{"assignments":[4190],"declarations":[{"constant":false,"id":4190,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:14","nodeType":"VariableDeclaration","scope":4262,"src":"13274:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4189,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4192,"initialValue":{"id":4191,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"13288:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:14"},{"assignments":[4194],"declarations":[{"constant":false,"id":4194,"mutability":"mutable","name":"x","nameLocation":"13432:1:14","nodeType":"VariableDeclaration","scope":4262,"src":"13425:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4193,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4196,"initialValue":{"hexValue":"30","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:14"},{"assignments":[4198],"declarations":[{"constant":false,"id":4198,"mutability":"mutable","name":"y","nameLocation":"13458:1:14","nodeType":"VariableDeclaration","scope":4262,"src":"13451:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4197,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4200,"initialValue":{"hexValue":"31","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:14"},{"body":{"id":4237,"nodeType":"Block","src":"13501:882:14","statements":[{"assignments":[4205],"declarations":[{"constant":false,"id":4205,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:14","nodeType":"VariableDeclaration","scope":4237,"src":"13519:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4209,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"13538:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4207,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"13544:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:14"},{"expression":{"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4210,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"13573:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4211,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"13578:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4212,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4213,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"13678:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"13923:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4215,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"13929:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4216,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"13941:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4221,"nodeType":"ExpressionStatement","src":"13572:395:14"},{"expression":{"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4222,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"13987:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4223,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"13990:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4224,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4225,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"14072:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4226,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"14326:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4227,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"14330:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4230,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"14341:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4228,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:14","typeDescriptions":{}}},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4236,"nodeType":"ExpressionStatement","src":"13986:382:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"13485:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4238,"nodeType":"WhileStatement","src":"13478:905:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4239,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"14401:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4244,"nodeType":"IfStatement","src":"14397:22:14","trueBody":{"expression":{"hexValue":"30","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4176,"id":4243,"nodeType":"Return","src":"14411:8:14"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"14470:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4249,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"14477:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:14","subExpression":{"id":4252,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"14490:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:14","typeDescriptions":{}}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4258,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"14502:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4256,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:14","typeDescriptions":{}}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4245,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"14462:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4176,"id":4261,"nodeType":"Return","src":"14455:50:14"}]}]},"documentation":{"id":4168,"nodeType":"StructuredDocumentation","src":"12082:553:14","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4264,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:14","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4170,"mutability":"mutable","name":"a","nameLocation":"12664:1:14","nodeType":"VariableDeclaration","scope":4264,"src":"12656:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4169,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"n","nameLocation":"12675:1:14","nodeType":"VariableDeclaration","scope":4264,"src":"12667:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:14"},"returnParameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4264,"src":"12701:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:14"},"scope":5135,"src":"12640:1919:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4284,"nodeType":"Block","src":"15159:82:14","statements":[{"id":4283,"nodeType":"UncheckedBlock","src":"15169:66:14","statements":[{"expression":{"arguments":[{"id":4276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"15212:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4277,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"15215:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4280,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"15222:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4274,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"15200:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5135_$","typeString":"type(library Math)"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:14","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4321,"src":"15200:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4273,"id":4282,"nodeType":"Return","src":"15193:31:14"}]}]},"documentation":{"id":4265,"nodeType":"StructuredDocumentation","src":"14565:514:14","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4285,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:14","nodeType":"FunctionDefinition","parameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"a","nameLocation":"15113:1:14","nodeType":"VariableDeclaration","scope":4285,"src":"15105:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4266,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4269,"mutability":"mutable","name":"p","nameLocation":"15124:1:14","nodeType":"VariableDeclaration","scope":4285,"src":"15116:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4268,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:14"},"returnParameters":{"id":4273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4285,"src":"15150:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:14"},"scope":5135,"src":"15084:157:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4320,"nodeType":"Block","src":"16011:174:14","statements":[{"assignments":[4298,4300],"declarations":[{"constant":false,"id":4298,"mutability":"mutable","name":"success","nameLocation":"16027:7:14","nodeType":"VariableDeclaration","scope":4320,"src":"16022:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4297,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4300,"mutability":"mutable","name":"result","nameLocation":"16044:6:14","nodeType":"VariableDeclaration","scope":4320,"src":"16036:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4306,"initialValue":{"arguments":[{"id":4302,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4288,"src":"16064:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4303,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"16067:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4304,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"16070:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4301,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4345,4427],"referencedDeclaration":4345,"src":"16054:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:14"},{"condition":{"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:14","subExpression":{"id":4307,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"16087:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4317,"nodeType":"IfStatement","src":"16082:74:14","trueBody":{"id":4316,"nodeType":"Block","src":"16096:60:14","statements":[{"expression":{"arguments":[{"expression":{"id":4312,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"16122:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1110_$","typeString":"type(library Panic)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"16122:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4309,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"16110:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1110_$","typeString":"type(library Panic)"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"16110:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4315,"nodeType":"ExpressionStatement","src":"16110:35:14"}]}},{"expression":{"id":4318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"16172:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4296,"id":4319,"nodeType":"Return","src":"16165:13:14"}]},"documentation":{"id":4286,"nodeType":"StructuredDocumentation","src":"15247:678:14","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4321,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:14","nodeType":"FunctionDefinition","parameters":{"id":4293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4288,"mutability":"mutable","name":"b","nameLocation":"15954:1:14","nodeType":"VariableDeclaration","scope":4321,"src":"15946:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4287,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4290,"mutability":"mutable","name":"e","nameLocation":"15965:1:14","nodeType":"VariableDeclaration","scope":4321,"src":"15957:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4292,"mutability":"mutable","name":"m","nameLocation":"15976:1:14","nodeType":"VariableDeclaration","scope":4321,"src":"15968:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4291,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:14"},"returnParameters":{"id":4296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4321,"src":"16002:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4294,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:14"},"scope":5135,"src":"15930:255:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4344,"nodeType":"Block","src":"17039:1493:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4335,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"17053:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4342,"nodeType":"IfStatement","src":"17049:29:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4334,"id":4341,"nodeType":"Return","src":"17061:17:14"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:14","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:14"},"nodeType":"YulFunctionCall","src":"17138:11:14"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:14","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:14"},"nodeType":"YulFunctionCall","src":"18050:17:14"},"nodeType":"YulExpressionStatement","src":"18050:17:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:14"},"nodeType":"YulFunctionCall","src":"18087:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:14"},"nodeType":"YulFunctionCall","src":"18080:28:14"},"nodeType":"YulExpressionStatement","src":"18080:28:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:14"},"nodeType":"YulFunctionCall","src":"18128:14:14"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:14"},"nodeType":"YulFunctionCall","src":"18121:28:14"},"nodeType":"YulExpressionStatement","src":"18121:28:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:14"},"nodeType":"YulFunctionCall","src":"18169:14:14"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:14"},"nodeType":"YulFunctionCall","src":"18162:25:14"},"nodeType":"YulExpressionStatement","src":"18162:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:14","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:14"},"nodeType":"YulFunctionCall","src":"18207:14:14"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:14"},"nodeType":"YulFunctionCall","src":"18200:25:14"},"nodeType":"YulExpressionStatement","src":"18200:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:14","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:14"},"nodeType":"YulFunctionCall","src":"18245:14:14"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:14"},"nodeType":"YulFunctionCall","src":"18238:25:14"},"nodeType":"YulExpressionStatement","src":"18238:25:14"},{"nodeType":"YulAssignment","src":"18425:57:14","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:14"},"nodeType":"YulFunctionCall","src":"18447:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:14","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:14","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:14","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:14"},"nodeType":"YulFunctionCall","src":"18436:46:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:14"}]},{"nodeType":"YulAssignment","src":"18495:21:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:14","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:14"},"nodeType":"YulFunctionCall","src":"18505:11:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4324,"isOffset":false,"isSlot":false,"src":"18185:1:14","valueSize":1},{"declaration":4326,"isOffset":false,"isSlot":false,"src":"18223:1:14","valueSize":1},{"declaration":4328,"isOffset":false,"isSlot":false,"src":"18261:1:14","valueSize":1},{"declaration":4333,"isOffset":false,"isSlot":false,"src":"18495:6:14","valueSize":1},{"declaration":4331,"isOffset":false,"isSlot":false,"src":"18425:7:14","valueSize":1}],"flags":["memory-safe"],"id":4343,"nodeType":"InlineAssembly","src":"17088:1438:14"}]},"documentation":{"id":4322,"nodeType":"StructuredDocumentation","src":"16191:738:14","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4345,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:14","nodeType":"FunctionDefinition","parameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"b","nameLocation":"16961:1:14","nodeType":"VariableDeclaration","scope":4345,"src":"16953:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4323,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4326,"mutability":"mutable","name":"e","nameLocation":"16972:1:14","nodeType":"VariableDeclaration","scope":4345,"src":"16964:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4328,"mutability":"mutable","name":"m","nameLocation":"16983:1:14","nodeType":"VariableDeclaration","scope":4345,"src":"16975:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:14"},"returnParameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"success","nameLocation":"17014:7:14","nodeType":"VariableDeclaration","scope":4345,"src":"17009:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4330,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4333,"mutability":"mutable","name":"result","nameLocation":"17031:6:14","nodeType":"VariableDeclaration","scope":4345,"src":"17023:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:14"},"scope":5135,"src":"16934:1598:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4380,"nodeType":"Block","src":"18729:179:14","statements":[{"assignments":[4358,4360],"declarations":[{"constant":false,"id":4358,"mutability":"mutable","name":"success","nameLocation":"18745:7:14","nodeType":"VariableDeclaration","scope":4380,"src":"18740:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4357,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4360,"mutability":"mutable","name":"result","nameLocation":"18767:6:14","nodeType":"VariableDeclaration","scope":4380,"src":"18754:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4359,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4366,"initialValue":{"arguments":[{"id":4362,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4348,"src":"18787:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4363,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4350,"src":"18790:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4364,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"18793:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4361,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4345,4427],"referencedDeclaration":4427,"src":"18777:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:14"},{"condition":{"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:14","subExpression":{"id":4367,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"18810:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4377,"nodeType":"IfStatement","src":"18805:74:14","trueBody":{"id":4376,"nodeType":"Block","src":"18819:60:14","statements":[{"expression":{"arguments":[{"expression":{"id":4372,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"18845:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1110_$","typeString":"type(library Panic)"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1077,"src":"18845:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4369,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"18833:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1110_$","typeString":"type(library Panic)"}},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"18833:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4375,"nodeType":"ExpressionStatement","src":"18833:35:14"}]}},{"expression":{"id":4378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"18895:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4356,"id":4379,"nodeType":"Return","src":"18888:13:14"}]},"documentation":{"id":4346,"nodeType":"StructuredDocumentation","src":"18538:85:14","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4381,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:14","nodeType":"FunctionDefinition","parameters":{"id":4353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"b","nameLocation":"18657:1:14","nodeType":"VariableDeclaration","scope":4381,"src":"18644:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4347,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4350,"mutability":"mutable","name":"e","nameLocation":"18673:1:14","nodeType":"VariableDeclaration","scope":4381,"src":"18660:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4349,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4352,"mutability":"mutable","name":"m","nameLocation":"18689:1:14","nodeType":"VariableDeclaration","scope":4381,"src":"18676:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4351,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:14"},"returnParameters":{"id":4356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4381,"src":"18715:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4354,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:14"},"scope":5135,"src":"18628:280:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4426,"nodeType":"Block","src":"19162:771:14","statements":[{"condition":{"arguments":[{"id":4396,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"19187:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4395,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"19176:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4405,"nodeType":"IfStatement","src":"19172:47:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4399,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4394,"id":4404,"nodeType":"Return","src":"19191:28:14"}},{"assignments":[4407],"declarations":[{"constant":false,"id":4407,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:14","nodeType":"VariableDeclaration","scope":4426,"src":"19230:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4406,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4410,"initialValue":{"expression":{"id":4408,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"19245:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:14","memberName":"length","nodeType":"MemberAccess","src":"19245:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:14"},{"expression":{"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4411,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"19335:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4414,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"19361:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:14","memberName":"length","nodeType":"MemberAccess","src":"19361:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4416,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"19371:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:14","memberName":"length","nodeType":"MemberAccess","src":"19371:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4418,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"19381:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"19387:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4420,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"19390:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4421,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4388,"src":"19393:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4412,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4424,"nodeType":"ExpressionStatement","src":"19335:60:14"},{"AST":{"nodeType":"YulBlock","src":"19431:496:14","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:14","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:14"},"nodeType":"YulFunctionCall","src":"19460:17:14"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:14","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:14","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:14"},"nodeType":"YulFunctionCall","src":"19589:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:14","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:14"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:14"},"nodeType":"YulFunctionCall","src":"19611:13:14"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:14"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:14"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:14"},"nodeType":"YulFunctionCall","src":"19578:62:14"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:14"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:14"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:14"},"nodeType":"YulFunctionCall","src":"19789:20:14"},"nodeType":"YulExpressionStatement","src":"19789:20:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:14","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:14"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:14"},"nodeType":"YulFunctionCall","src":"19898:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:14"},"nodeType":"YulFunctionCall","src":"19885:32:14"},"nodeType":"YulExpressionStatement","src":"19885:32:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":4407,"isOffset":false,"isSlot":false,"src":"19635:4:14","valueSize":1},{"declaration":4407,"isOffset":false,"isSlot":false,"src":"19804:4:14","valueSize":1},{"declaration":4407,"isOffset":false,"isSlot":false,"src":"19911:4:14","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"19464:6:14","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"19617:6:14","valueSize":1},{"declaration":4393,"isOffset":false,"isSlot":false,"src":"19796:6:14","valueSize":1},{"declaration":4391,"isOffset":false,"isSlot":false,"src":"19567:7:14","valueSize":1}],"flags":["memory-safe"],"id":4425,"nodeType":"InlineAssembly","src":"19406:521:14"}]},"documentation":{"id":4382,"nodeType":"StructuredDocumentation","src":"18914:88:14","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4427,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:14","nodeType":"FunctionDefinition","parameters":{"id":4389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4384,"mutability":"mutable","name":"b","nameLocation":"19048:1:14","nodeType":"VariableDeclaration","scope":4427,"src":"19035:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4383,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4386,"mutability":"mutable","name":"e","nameLocation":"19072:1:14","nodeType":"VariableDeclaration","scope":4427,"src":"19059:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4385,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4388,"mutability":"mutable","name":"m","nameLocation":"19096:1:14","nodeType":"VariableDeclaration","scope":4427,"src":"19083:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4387,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:14"},"returnParameters":{"id":4394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"success","nameLocation":"19132:7:14","nodeType":"VariableDeclaration","scope":4427,"src":"19127:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4390,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4393,"mutability":"mutable","name":"result","nameLocation":"19154:6:14","nodeType":"VariableDeclaration","scope":4427,"src":"19141:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4392,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:14"},"scope":5135,"src":"19007:926:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4459,"nodeType":"Block","src":"20088:176:14","statements":[{"body":{"id":4455,"nodeType":"Block","src":"20145:92:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4446,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"20163:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4448,"indexExpression":{"id":4447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"20173:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4454,"nodeType":"IfStatement","src":"20159:68:14","trueBody":{"id":4453,"nodeType":"Block","src":"20182:45:14","statements":[{"expression":{"hexValue":"66616c7365","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4434,"id":4452,"nodeType":"Return","src":"20200:12:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"20118:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4440,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"20122:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:14","memberName":"length","nodeType":"MemberAccess","src":"20122:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4456,"initializationExpression":{"assignments":[4436],"declarations":[{"constant":false,"id":4436,"mutability":"mutable","name":"i","nameLocation":"20111:1:14","nodeType":"VariableDeclaration","scope":4456,"src":"20103:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4435,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4438,"initialValue":{"hexValue":"30","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:14"},"loopExpression":{"expression":{"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:14","subExpression":{"id":4443,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"20142:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4445,"nodeType":"ExpressionStatement","src":"20140:3:14"},"nodeType":"ForStatement","src":"20098:139:14"},{"expression":{"hexValue":"74727565","id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4434,"id":4458,"nodeType":"Return","src":"20246:11:14"}]},"documentation":{"id":4428,"nodeType":"StructuredDocumentation","src":"19939:72:14","text":" @dev Returns whether the provided byte array is zero."},"id":4460,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:14","nodeType":"FunctionDefinition","parameters":{"id":4431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4430,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:14","nodeType":"VariableDeclaration","scope":4460,"src":"20036:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4429,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:14"},"returnParameters":{"id":4434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4460,"src":"20082:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4432,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:14"},"scope":5135,"src":"20016:248:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4678,"nodeType":"Block","src":"20624:5124:14","statements":[{"id":4677,"nodeType":"UncheckedBlock","src":"20634:5108:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4468,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"20728:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4474,"nodeType":"IfStatement","src":"20724:53:14","trueBody":{"id":4473,"nodeType":"Block","src":"20736:41:14","statements":[{"expression":{"id":4471,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"20761:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4467,"id":4472,"nodeType":"Return","src":"20754:8:14"}]}},{"assignments":[4476],"declarations":[{"constant":false,"id":4476,"mutability":"mutable","name":"aa","nameLocation":"21712:2:14","nodeType":"VariableDeclaration","scope":4677,"src":"21704:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4478,"initialValue":{"id":4477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"21717:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:14"},{"assignments":[4480],"declarations":[{"constant":false,"id":4480,"mutability":"mutable","name":"xn","nameLocation":"21740:2:14","nodeType":"VariableDeclaration","scope":4677,"src":"21732:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4479,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4482,"initialValue":{"hexValue":"31","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"21765:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4498,"nodeType":"IfStatement","src":"21761:92:14","trueBody":{"id":4497,"nodeType":"Block","src":"21783:70:14","statements":[{"expression":{"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4489,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"21801:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4492,"nodeType":"ExpressionStatement","src":"21801:10:14"},{"expression":{"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4493,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"21829:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4496,"nodeType":"ExpressionStatement","src":"21829:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4499,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"21870:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4503,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4514,"nodeType":"IfStatement","src":"21866:90:14","trueBody":{"id":4513,"nodeType":"Block","src":"21887:69:14","statements":[{"expression":{"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4505,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"21905:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4508,"nodeType":"ExpressionStatement","src":"21905:9:14"},{"expression":{"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4509,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"21932:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4512,"nodeType":"ExpressionStatement","src":"21932:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4515,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"21973:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4530,"nodeType":"IfStatement","src":"21969:90:14","trueBody":{"id":4529,"nodeType":"Block","src":"21990:69:14","statements":[{"expression":{"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4521,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"22008:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4524,"nodeType":"ExpressionStatement","src":"22008:9:14"},{"expression":{"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4525,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"22035:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4528,"nodeType":"ExpressionStatement","src":"22035:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4531,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"22076:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:14","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:14","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4546,"nodeType":"IfStatement","src":"22072:89:14","trueBody":{"id":4545,"nodeType":"Block","src":"22093:68:14","statements":[{"expression":{"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4537,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"22111:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4540,"nodeType":"ExpressionStatement","src":"22111:9:14"},{"expression":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4541,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"22138:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4544,"nodeType":"ExpressionStatement","src":"22138:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4547,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"22178:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4562,"nodeType":"IfStatement","src":"22174:87:14","trueBody":{"id":4561,"nodeType":"Block","src":"22194:67:14","statements":[{"expression":{"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4553,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"22212:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4556,"nodeType":"ExpressionStatement","src":"22212:8:14"},{"expression":{"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4557,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"22238:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4560,"nodeType":"ExpressionStatement","src":"22238:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4563,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"22278:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4578,"nodeType":"IfStatement","src":"22274:87:14","trueBody":{"id":4577,"nodeType":"Block","src":"22294:67:14","statements":[{"expression":{"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4569,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"22312:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4572,"nodeType":"ExpressionStatement","src":"22312:8:14"},{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4573,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"22338:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4576,"nodeType":"ExpressionStatement","src":"22338:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"22378:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4590,"nodeType":"IfStatement","src":"22374:61:14","trueBody":{"id":4589,"nodeType":"Block","src":"22394:41:14","statements":[{"expression":{"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4585,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"22412:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4588,"nodeType":"ExpressionStatement","src":"22412:8:14"}]}},{"expression":{"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4591,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"22855:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4593,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"22865:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4599,"nodeType":"ExpressionStatement","src":"22855:18:14"},{"expression":{"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4600,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24760:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4601,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24766:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4602,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"24771:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4603,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24775:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4610,"nodeType":"ExpressionStatement","src":"24760:23:14"},{"expression":{"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4611,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24869:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4612,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24875:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4613,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"24880:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4614,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24884:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4621,"nodeType":"ExpressionStatement","src":"24869:23:14"},{"expression":{"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4622,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24980:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4623,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24986:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4624,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"24991:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4625,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"24995:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4632,"nodeType":"ExpressionStatement","src":"24980:23:14"},{"expression":{"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4633,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25089:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4634,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25095:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4635,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"25100:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4636,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25104:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4643,"nodeType":"ExpressionStatement","src":"25089:23:14"},{"expression":{"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4644,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25199:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25205:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"25210:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4647,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25214:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4650,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4654,"nodeType":"ExpressionStatement","src":"25199:23:14"},{"expression":{"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4655,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25309:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4656,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25315:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"25320:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4658,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25324:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4661,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4665,"nodeType":"ExpressionStatement","src":"25309:23:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4666,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25698:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4669,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25719:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"25724:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4671,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"25728:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4667,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"25703:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"25703:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4467,"id":4676,"nodeType":"Return","src":"25691:40:14"}]}]},"documentation":{"id":4461,"nodeType":"StructuredDocumentation","src":"20270:292:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4679,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:14","nodeType":"FunctionDefinition","parameters":{"id":4464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"a","nameLocation":"20589:1:14","nodeType":"VariableDeclaration","scope":4679,"src":"20581:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:14"},"returnParameters":{"id":4467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4679,"src":"20615:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4465,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:14"},"scope":5135,"src":"20567:5181:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4712,"nodeType":"Block","src":"25921:171:14","statements":[{"id":4711,"nodeType":"UncheckedBlock","src":"25931:155:14","statements":[{"assignments":[4691],"declarations":[{"constant":false,"id":4691,"mutability":"mutable","name":"result","nameLocation":"25963:6:14","nodeType":"VariableDeclaration","scope":4711,"src":"25955:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4690,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4695,"initialValue":{"arguments":[{"id":4693,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"25977:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4692,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4679,4713],"referencedDeclaration":4679,"src":"25972:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4696,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"26000:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4700,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"26042:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}],"id":4699,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"26025:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3526_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"26055:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4703,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"26064:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4705,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4682,"src":"26073:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4697,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"26009:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"26009:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4689,"id":4710,"nodeType":"Return","src":"25993:82:14"}]}]},"documentation":{"id":4680,"nodeType":"StructuredDocumentation","src":"25754:86:14","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4713,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:14","nodeType":"FunctionDefinition","parameters":{"id":4686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4682,"mutability":"mutable","name":"a","nameLocation":"25867:1:14","nodeType":"VariableDeclaration","scope":4713,"src":"25859:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4681,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4685,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:14","nodeType":"VariableDeclaration","scope":4713,"src":"25870:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"},"typeName":{"id":4684,"nodeType":"UserDefinedTypeName","pathNode":{"id":4683,"name":"Rounding","nameLocations":["25870:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"25870:8:14"},"referencedDeclaration":3526,"src":"25870:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:14"},"returnParameters":{"id":4689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4713,"src":"25912:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4687,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:14"},"scope":5135,"src":"25845:247:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4803,"nodeType":"Block","src":"26281:2334:14","statements":[{"expression":{"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4721,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"26363:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4724,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26383:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4722,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"26367:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"26367:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4731,"nodeType":"ExpressionStatement","src":"26363:64:14"},{"expression":{"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4732,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"26503:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4735,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26525:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4736,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"26530:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4733,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"26508:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"26508:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4745,"nodeType":"ExpressionStatement","src":"26503:56:14"},{"expression":{"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4746,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"26634:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4749,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26656:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4750,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"26661:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4747,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"26639:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"26639:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4759,"nodeType":"ExpressionStatement","src":"26634:48:14"},{"expression":{"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4760,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"26757:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4763,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26779:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4764,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"26784:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4766,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:14","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4761,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"26762:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"26762:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4773,"nodeType":"ExpressionStatement","src":"26757:44:14"},{"expression":{"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4774,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"26874:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4777,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"26896:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4778,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"26901:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4775,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"26879:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"26879:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4787,"nodeType":"ExpressionStatement","src":"26874:42:14"},{"expression":{"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4788,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"26988:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4791,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"27010:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4792,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"27015:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4789,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"26993:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"26993:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4801,"nodeType":"ExpressionStatement","src":"26988:41:14"},{"AST":{"nodeType":"YulBlock","src":"28490:119:14","statements":[{"nodeType":"YulAssignment","src":"28504:95:14","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:14"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:14"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:14"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:14"},"nodeType":"YulFunctionCall","src":"28520:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:14","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:14"},"nodeType":"YulFunctionCall","src":"28515:83:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:14"},"nodeType":"YulFunctionCall","src":"28509:90:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4719,"isOffset":false,"isSlot":false,"src":"28504:1:14","valueSize":1},{"declaration":4719,"isOffset":false,"isSlot":false,"src":"28512:1:14","valueSize":1},{"declaration":4719,"isOffset":false,"isSlot":false,"src":"28524:1:14","valueSize":1},{"declaration":4716,"isOffset":false,"isSlot":false,"src":"28527:1:14","valueSize":1}],"flags":["memory-safe"],"id":4802,"nodeType":"InlineAssembly","src":"28465:144:14"}]},"documentation":{"id":4714,"nodeType":"StructuredDocumentation","src":"26098:119:14","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4804,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:14","nodeType":"FunctionDefinition","parameters":{"id":4717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4716,"mutability":"mutable","name":"x","nameLocation":"26244:1:14","nodeType":"VariableDeclaration","scope":4804,"src":"26236:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4715,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:14"},"returnParameters":{"id":4720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4719,"mutability":"mutable","name":"r","nameLocation":"26278:1:14","nodeType":"VariableDeclaration","scope":4804,"src":"26270:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4718,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:14"},"scope":5135,"src":"26222:2393:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4837,"nodeType":"Block","src":"28848:175:14","statements":[{"id":4836,"nodeType":"UncheckedBlock","src":"28858:159:14","statements":[{"assignments":[4816],"declarations":[{"constant":false,"id":4816,"mutability":"mutable","name":"result","nameLocation":"28890:6:14","nodeType":"VariableDeclaration","scope":4836,"src":"28882:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4815,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4820,"initialValue":{"arguments":[{"id":4818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"28904:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4817,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4804,4838],"referencedDeclaration":4804,"src":"28899:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"28931:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4825,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4810,"src":"28973:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}],"id":4824,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"28956:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3526_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4828,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"28991:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"29000:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4822,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"28940:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"28940:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4814,"id":4835,"nodeType":"Return","src":"28924:82:14"}]}]},"documentation":{"id":4805,"nodeType":"StructuredDocumentation","src":"28621:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4838,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:14","nodeType":"FunctionDefinition","parameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4807,"mutability":"mutable","name":"value","nameLocation":"28790:5:14","nodeType":"VariableDeclaration","scope":4838,"src":"28782:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4806,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4810,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:14","nodeType":"VariableDeclaration","scope":4838,"src":"28797:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"},"typeName":{"id":4809,"nodeType":"UserDefinedTypeName","pathNode":{"id":4808,"name":"Rounding","nameLocations":["28797:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"28797:8:14"},"referencedDeclaration":3526,"src":"28797:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:14"},"returnParameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4838,"src":"28839:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4812,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:14"},"scope":5135,"src":"28768:255:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4966,"nodeType":"Block","src":"29216:854:14","statements":[{"assignments":[4847],"declarations":[{"constant":false,"id":4847,"mutability":"mutable","name":"result","nameLocation":"29234:6:14","nodeType":"VariableDeclaration","scope":4966,"src":"29226:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4849,"initialValue":{"hexValue":"30","id":4848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:14"},{"id":4963,"nodeType":"UncheckedBlock","src":"29254:787:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29282:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4866,"nodeType":"IfStatement","src":"29278:103:14","trueBody":{"id":4865,"nodeType":"Block","src":"29301:80:14","statements":[{"expression":{"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29319:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4860,"nodeType":"ExpressionStatement","src":"29319:17:14"},{"expression":{"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4861,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"29354:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4864,"nodeType":"ExpressionStatement","src":"29354:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29398:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4883,"nodeType":"IfStatement","src":"29394:103:14","trueBody":{"id":4882,"nodeType":"Block","src":"29417:80:14","statements":[{"expression":{"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29435:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4877,"nodeType":"ExpressionStatement","src":"29435:17:14"},{"expression":{"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4878,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"29470:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4881,"nodeType":"ExpressionStatement","src":"29470:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29514:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4900,"nodeType":"IfStatement","src":"29510:103:14","trueBody":{"id":4899,"nodeType":"Block","src":"29533:80:14","statements":[{"expression":{"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29551:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4894,"nodeType":"ExpressionStatement","src":"29551:17:14"},{"expression":{"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4895,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"29586:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4898,"nodeType":"ExpressionStatement","src":"29586:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29630:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4917,"nodeType":"IfStatement","src":"29626:100:14","trueBody":{"id":4916,"nodeType":"Block","src":"29648:78:14","statements":[{"expression":{"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29666:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4911,"nodeType":"ExpressionStatement","src":"29666:16:14"},{"expression":{"id":4914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4912,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"29700:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4915,"nodeType":"ExpressionStatement","src":"29700:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29743:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4934,"nodeType":"IfStatement","src":"29739:100:14","trueBody":{"id":4933,"nodeType":"Block","src":"29761:78:14","statements":[{"expression":{"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29779:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4928,"nodeType":"ExpressionStatement","src":"29779:16:14"},{"expression":{"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4929,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"29813:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4932,"nodeType":"ExpressionStatement","src":"29813:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29856:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4951,"nodeType":"IfStatement","src":"29852:100:14","trueBody":{"id":4950,"nodeType":"Block","src":"29874:78:14","statements":[{"expression":{"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29892:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4945,"nodeType":"ExpressionStatement","src":"29892:16:14"},{"expression":{"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4946,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"29926:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4949,"nodeType":"ExpressionStatement","src":"29926:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"29969:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4962,"nodeType":"IfStatement","src":"29965:66:14","trueBody":{"id":4961,"nodeType":"Block","src":"29987:44:14","statements":[{"expression":{"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"30005:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4960,"nodeType":"ExpressionStatement","src":"30005:11:14"}]}}]},{"expression":{"id":4964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"30057:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4845,"id":4965,"nodeType":"Return","src":"30050:13:14"}]},"documentation":{"id":4839,"nodeType":"StructuredDocumentation","src":"29029:120:14","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:14","nodeType":"FunctionDefinition","parameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"value","nameLocation":"29177:5:14","nodeType":"VariableDeclaration","scope":4967,"src":"29169:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4840,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:14"},"returnParameters":{"id":4845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4967,"src":"29207:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4843,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:14"},"scope":5135,"src":"29154:916:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5000,"nodeType":"Block","src":"30305:177:14","statements":[{"id":4999,"nodeType":"UncheckedBlock","src":"30315:161:14","statements":[{"assignments":[4979],"declarations":[{"constant":false,"id":4979,"mutability":"mutable","name":"result","nameLocation":"30347:6:14","nodeType":"VariableDeclaration","scope":4999,"src":"30339:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4978,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4983,"initialValue":{"arguments":[{"id":4981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"30362:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4980,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4967,5001],"referencedDeclaration":4967,"src":"30356:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"30389:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4988,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4973,"src":"30431:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}],"id":4987,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"30414:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3526_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4991,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"30450:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"30459:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4985,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"30398:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"30398:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4977,"id":4998,"nodeType":"Return","src":"30382:83:14"}]}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"30076:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5001,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:14","nodeType":"FunctionDefinition","parameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"value","nameLocation":"30247:5:14","nodeType":"VariableDeclaration","scope":5001,"src":"30239:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4969,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4973,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:14","nodeType":"VariableDeclaration","scope":5001,"src":"30254:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"},"typeName":{"id":4972,"nodeType":"UserDefinedTypeName","pathNode":{"id":4971,"name":"Rounding","nameLocations":["30254:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"30254:8:14"},"referencedDeclaration":3526,"src":"30254:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:14"},"returnParameters":{"id":4977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5001,"src":"30296:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4975,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:14"},"scope":5135,"src":"30224:258:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5077,"nodeType":"Block","src":"30800:675:14","statements":[{"expression":{"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5009,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"30882:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5012,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"30902:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5010,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"30886:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"30886:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5019,"nodeType":"ExpressionStatement","src":"30882:64:14"},{"expression":{"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5020,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"31022:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5023,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"31044:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5024,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"31049:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5021,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"31027:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"31027:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5033,"nodeType":"ExpressionStatement","src":"31022:56:14"},{"expression":{"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5034,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"31153:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5037,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"31175:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5038,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"31180:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5035,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"31158:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"31158:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5047,"nodeType":"ExpressionStatement","src":"31153:48:14"},{"expression":{"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5048,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"31276:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5051,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"31298:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5052,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"31303:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:14","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5049,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"31281:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"31281:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5061,"nodeType":"ExpressionStatement","src":"31276:44:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5062,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"31426:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5068,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"31453:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5069,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"31458:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5066,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"31436:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"31436:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5008,"id":5076,"nodeType":"Return","src":"31418:50:14"}]},"documentation":{"id":5002,"nodeType":"StructuredDocumentation","src":"30488:246:14","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5078,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:14","nodeType":"FunctionDefinition","parameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"x","nameLocation":"30763:1:14","nodeType":"VariableDeclaration","scope":5078,"src":"30755:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5003,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:14"},"returnParameters":{"id":5008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5007,"mutability":"mutable","name":"r","nameLocation":"30797:1:14","nodeType":"VariableDeclaration","scope":5078,"src":"30789:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:14"},"scope":5135,"src":"30739:736:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5114,"nodeType":"Block","src":"31712:184:14","statements":[{"id":5113,"nodeType":"UncheckedBlock","src":"31722:168:14","statements":[{"assignments":[5090],"declarations":[{"constant":false,"id":5090,"mutability":"mutable","name":"result","nameLocation":"31754:6:14","nodeType":"VariableDeclaration","scope":5113,"src":"31746:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5089,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5094,"initialValue":{"arguments":[{"id":5092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"31770:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5091,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5078,5115],"referencedDeclaration":5078,"src":"31763:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"31797:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5099,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5084,"src":"31839:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}],"id":5098,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5134,"src":"31822:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3526_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5090,"src":"31858:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"31873:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5096,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"31806:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"31806:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5088,"id":5112,"nodeType":"Return","src":"31790:89:14"}]}]},"documentation":{"id":5079,"nodeType":"StructuredDocumentation","src":"31481:144:14","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5115,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:14","nodeType":"FunctionDefinition","parameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"value","nameLocation":"31654:5:14","nodeType":"VariableDeclaration","scope":5115,"src":"31646:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5080,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5084,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:14","nodeType":"VariableDeclaration","scope":5115,"src":"31661:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"},"typeName":{"id":5083,"nodeType":"UserDefinedTypeName","pathNode":{"id":5082,"name":"Rounding","nameLocations":["31661:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"31661:8:14"},"referencedDeclaration":3526,"src":"31661:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:14"},"returnParameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5115,"src":"31703:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5086,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:14"},"scope":5135,"src":"31630:266:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5133,"nodeType":"Block","src":"32094:48:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5126,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5119,"src":"32117:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}],"id":5125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5124,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:14","typeDescriptions":{}}},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5123,"id":5132,"nodeType":"Return","src":"32104:31:14"}]},"documentation":{"id":5116,"nodeType":"StructuredDocumentation","src":"31902:113:14","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5134,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:14","nodeType":"FunctionDefinition","parameters":{"id":5120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5119,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:14","nodeType":"VariableDeclaration","scope":5134,"src":"32046:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"},"typeName":{"id":5118,"nodeType":"UserDefinedTypeName","pathNode":{"id":5117,"name":"Rounding","nameLocations":["32046:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3526,"src":"32046:8:14"},"referencedDeclaration":3526,"src":"32046:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3526","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:14"},"returnParameters":{"id":5123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5134,"src":"32088:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5121,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:14"},"scope":5135,"src":"32020:122:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5136,"src":"281:31863:14","usedErrors":[],"usedEvents":[]}],"src":"103:32042:14"},"id":14},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6900]},"id":6901,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5137,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5138,"nodeType":"StructuredDocumentation","src":"218:550:15","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6900,"linearizedBaseContracts":[6900],"name":"SafeCast","nameLocation":"777:8:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5139,"nodeType":"StructuredDocumentation","src":"792:68:15","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5145,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:15","nodeType":"ErrorDefinition","parameters":{"id":5144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5141,"mutability":"mutable","name":"bits","nameLocation":"908:4:15","nodeType":"VariableDeclaration","scope":5145,"src":"902:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5140,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5143,"mutability":"mutable","name":"value","nameLocation":"922:5:15","nodeType":"VariableDeclaration","scope":5145,"src":"914:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5142,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:15"},"src":"865:64:15"},{"documentation":{"id":5146,"nodeType":"StructuredDocumentation","src":"935:75:15","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5150,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:15","nodeType":"ErrorDefinition","parameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"value","nameLocation":"1056:5:15","nodeType":"VariableDeclaration","scope":5150,"src":"1049:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5147,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:15"},"src":"1015:48:15"},{"documentation":{"id":5151,"nodeType":"StructuredDocumentation","src":"1069:67:15","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5157,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:15","nodeType":"ErrorDefinition","parameters":{"id":5156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"bits","nameLocation":"1183:4:15","nodeType":"VariableDeclaration","scope":5157,"src":"1177:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5152,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5155,"mutability":"mutable","name":"value","nameLocation":"1196:5:15","nodeType":"VariableDeclaration","scope":5157,"src":"1189:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5154,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:15"},"src":"1141:62:15"},{"documentation":{"id":5158,"nodeType":"StructuredDocumentation","src":"1209:75:15","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5162,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:15","nodeType":"ErrorDefinition","parameters":{"id":5161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5160,"mutability":"mutable","name":"value","nameLocation":"1331:5:15","nodeType":"VariableDeclaration","scope":5162,"src":"1323:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:15"},"src":"1289:49:15"},{"body":{"id":5189,"nodeType":"Block","src":"1695:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"1709:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5172,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5171,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:15","memberName":"max","nodeType":"MemberAccess","src":"1717:17:15","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5183,"nodeType":"IfStatement","src":"1705:105:15","trueBody":{"id":5182,"nodeType":"Block","src":"1736:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:15","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"1793:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5177,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"1757:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5181,"nodeType":"RevertStatement","src":"1750:49:15"}]}},{"expression":{"arguments":[{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"1834:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5184,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:15","typeDescriptions":{}}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5169,"id":5188,"nodeType":"Return","src":"1819:21:15"}]},"documentation":{"id":5163,"nodeType":"StructuredDocumentation","src":"1344:280:15","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5190,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:15","nodeType":"FunctionDefinition","parameters":{"id":5166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5165,"mutability":"mutable","name":"value","nameLocation":"1656:5:15","nodeType":"VariableDeclaration","scope":5190,"src":"1648:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:15"},"returnParameters":{"id":5169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5190,"src":"1686:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5167,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:15","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:15"},"scope":6900,"src":"1629:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5217,"nodeType":"Block","src":"2204:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"2218:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5200,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5199,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:15","memberName":"max","nodeType":"MemberAccess","src":"2226:17:15","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5211,"nodeType":"IfStatement","src":"2214:105:15","trueBody":{"id":5210,"nodeType":"Block","src":"2245:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:15","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"2302:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5205,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"2266:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5209,"nodeType":"RevertStatement","src":"2259:49:15"}]}},{"expression":{"arguments":[{"id":5214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"2343:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5212,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:15","typeDescriptions":{}}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5197,"id":5216,"nodeType":"Return","src":"2328:21:15"}]},"documentation":{"id":5191,"nodeType":"StructuredDocumentation","src":"1853:280:15","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5218,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:15","nodeType":"FunctionDefinition","parameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5193,"mutability":"mutable","name":"value","nameLocation":"2165:5:15","nodeType":"VariableDeclaration","scope":5218,"src":"2157:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:15"},"returnParameters":{"id":5197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5218,"src":"2195:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5195,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:15","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:15"},"scope":6900,"src":"2138:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5245,"nodeType":"Block","src":"2713:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"2727:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5228,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5227,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:15","memberName":"max","nodeType":"MemberAccess","src":"2735:17:15","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5239,"nodeType":"IfStatement","src":"2723:105:15","trueBody":{"id":5238,"nodeType":"Block","src":"2754:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"2811:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5233,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"2775:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5237,"nodeType":"RevertStatement","src":"2768:49:15"}]}},{"expression":{"arguments":[{"id":5242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"2852:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5240,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:15","typeDescriptions":{}}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5225,"id":5244,"nodeType":"Return","src":"2837:21:15"}]},"documentation":{"id":5219,"nodeType":"StructuredDocumentation","src":"2362:280:15","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5246,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:15","nodeType":"FunctionDefinition","parameters":{"id":5222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5221,"mutability":"mutable","name":"value","nameLocation":"2674:5:15","nodeType":"VariableDeclaration","scope":5246,"src":"2666:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5220,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:15"},"returnParameters":{"id":5225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5246,"src":"2704:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5223,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:15","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:15"},"scope":6900,"src":"2647:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5273,"nodeType":"Block","src":"3222:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3236:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5256,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5255,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:15","memberName":"max","nodeType":"MemberAccess","src":"3244:17:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5267,"nodeType":"IfStatement","src":"3232:105:15","trueBody":{"id":5266,"nodeType":"Block","src":"3263:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:15","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3320:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5261,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"3284:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5265,"nodeType":"RevertStatement","src":"3277:49:15"}]}},{"expression":{"arguments":[{"id":5270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"3361:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5268,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:15","typeDescriptions":{}}},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5253,"id":5272,"nodeType":"Return","src":"3346:21:15"}]},"documentation":{"id":5247,"nodeType":"StructuredDocumentation","src":"2871:280:15","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5274,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:15","nodeType":"FunctionDefinition","parameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"value","nameLocation":"3183:5:15","nodeType":"VariableDeclaration","scope":5274,"src":"3175:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5248,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:15"},"returnParameters":{"id":5253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5274,"src":"3213:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5251,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:15"},"scope":6900,"src":"3156:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5301,"nodeType":"Block","src":"3731:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"3745:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5284,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5283,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:15","memberName":"max","nodeType":"MemberAccess","src":"3753:17:15","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5295,"nodeType":"IfStatement","src":"3741:105:15","trueBody":{"id":5294,"nodeType":"Block","src":"3772:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:15","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"3829:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5289,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"3793:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5293,"nodeType":"RevertStatement","src":"3786:49:15"}]}},{"expression":{"arguments":[{"id":5298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"3870:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5296,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:15","typeDescriptions":{}}},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5281,"id":5300,"nodeType":"Return","src":"3855:21:15"}]},"documentation":{"id":5275,"nodeType":"StructuredDocumentation","src":"3380:280:15","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5302,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:15","nodeType":"FunctionDefinition","parameters":{"id":5278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5277,"mutability":"mutable","name":"value","nameLocation":"3692:5:15","nodeType":"VariableDeclaration","scope":5302,"src":"3684:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5276,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:15"},"returnParameters":{"id":5281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5302,"src":"3722:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5279,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:15","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:15"},"scope":6900,"src":"3665:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5329,"nodeType":"Block","src":"4240:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"4254:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5312,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5311,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:15","memberName":"max","nodeType":"MemberAccess","src":"4262:17:15","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5323,"nodeType":"IfStatement","src":"4250:105:15","trueBody":{"id":5322,"nodeType":"Block","src":"4281:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:15","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"4338:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5317,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"4302:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5321,"nodeType":"RevertStatement","src":"4295:49:15"}]}},{"expression":{"arguments":[{"id":5326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"4379:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5324,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:15","typeDescriptions":{}}},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5309,"id":5328,"nodeType":"Return","src":"4364:21:15"}]},"documentation":{"id":5303,"nodeType":"StructuredDocumentation","src":"3889:280:15","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5330,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:15","nodeType":"FunctionDefinition","parameters":{"id":5306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5305,"mutability":"mutable","name":"value","nameLocation":"4201:5:15","nodeType":"VariableDeclaration","scope":5330,"src":"4193:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5304,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:15"},"returnParameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5330,"src":"4231:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5307,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:15","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:15"},"scope":6900,"src":"4174:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5357,"nodeType":"Block","src":"4749:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"4763:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5340,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5339,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:15","memberName":"max","nodeType":"MemberAccess","src":"4771:17:15","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5351,"nodeType":"IfStatement","src":"4759:105:15","trueBody":{"id":5350,"nodeType":"Block","src":"4790:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:15","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"4847:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5345,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"4811:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5349,"nodeType":"RevertStatement","src":"4804:49:15"}]}},{"expression":{"arguments":[{"id":5354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"4888:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5352,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:15","typeDescriptions":{}}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5337,"id":5356,"nodeType":"Return","src":"4873:21:15"}]},"documentation":{"id":5331,"nodeType":"StructuredDocumentation","src":"4398:280:15","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5358,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:15","nodeType":"FunctionDefinition","parameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"value","nameLocation":"4710:5:15","nodeType":"VariableDeclaration","scope":5358,"src":"4702:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5332,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:15"},"returnParameters":{"id":5337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5358,"src":"4740:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5335,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:15","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:15"},"scope":6900,"src":"4683:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5385,"nodeType":"Block","src":"5258:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"5272:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5368,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5367,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:15","memberName":"max","nodeType":"MemberAccess","src":"5280:17:15","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5379,"nodeType":"IfStatement","src":"5268:105:15","trueBody":{"id":5378,"nodeType":"Block","src":"5299:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:15","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"5356:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5373,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"5320:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5377,"nodeType":"RevertStatement","src":"5313:49:15"}]}},{"expression":{"arguments":[{"id":5382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"5397:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5380,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:15","typeDescriptions":{}}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5365,"id":5384,"nodeType":"Return","src":"5382:21:15"}]},"documentation":{"id":5359,"nodeType":"StructuredDocumentation","src":"4907:280:15","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5386,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:15","nodeType":"FunctionDefinition","parameters":{"id":5362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"value","nameLocation":"5219:5:15","nodeType":"VariableDeclaration","scope":5386,"src":"5211:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5360,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:15"},"returnParameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5386,"src":"5249:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5363,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:15","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:15"},"scope":6900,"src":"5192:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5413,"nodeType":"Block","src":"5767:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"5781:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5396,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5395,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:15","memberName":"max","nodeType":"MemberAccess","src":"5789:17:15","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5407,"nodeType":"IfStatement","src":"5777:105:15","trueBody":{"id":5406,"nodeType":"Block","src":"5808:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:15","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"5865:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5401,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"5829:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5405,"nodeType":"RevertStatement","src":"5822:49:15"}]}},{"expression":{"arguments":[{"id":5410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"5906:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5408,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:15","typeDescriptions":{}}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5393,"id":5412,"nodeType":"Return","src":"5891:21:15"}]},"documentation":{"id":5387,"nodeType":"StructuredDocumentation","src":"5416:280:15","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5414,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:15","nodeType":"FunctionDefinition","parameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"value","nameLocation":"5728:5:15","nodeType":"VariableDeclaration","scope":5414,"src":"5720:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5388,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:15"},"returnParameters":{"id":5393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5414,"src":"5758:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5391,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:15","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:15"},"scope":6900,"src":"5701:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5441,"nodeType":"Block","src":"6276:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"6290:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5424,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:15","memberName":"max","nodeType":"MemberAccess","src":"6298:17:15","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5435,"nodeType":"IfStatement","src":"6286:105:15","trueBody":{"id":5434,"nodeType":"Block","src":"6317:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:15","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"6374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5429,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"6338:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5433,"nodeType":"RevertStatement","src":"6331:49:15"}]}},{"expression":{"arguments":[{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"6415:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5436,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:15","typeDescriptions":{}}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5421,"id":5440,"nodeType":"Return","src":"6400:21:15"}]},"documentation":{"id":5415,"nodeType":"StructuredDocumentation","src":"5925:280:15","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5442,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:15","nodeType":"FunctionDefinition","parameters":{"id":5418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5417,"mutability":"mutable","name":"value","nameLocation":"6237:5:15","nodeType":"VariableDeclaration","scope":5442,"src":"6229:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:15"},"returnParameters":{"id":5421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5442,"src":"6267:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5419,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:15","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:15"},"scope":6900,"src":"6210:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5469,"nodeType":"Block","src":"6785:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"6799:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5452,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:15","memberName":"max","nodeType":"MemberAccess","src":"6807:17:15","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5463,"nodeType":"IfStatement","src":"6795:105:15","trueBody":{"id":5462,"nodeType":"Block","src":"6826:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:15","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"6883:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5457,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"6847:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5461,"nodeType":"RevertStatement","src":"6840:49:15"}]}},{"expression":{"arguments":[{"id":5466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"6924:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5464,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:15","typeDescriptions":{}}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5449,"id":5468,"nodeType":"Return","src":"6909:21:15"}]},"documentation":{"id":5443,"nodeType":"StructuredDocumentation","src":"6434:280:15","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5470,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:15","nodeType":"FunctionDefinition","parameters":{"id":5446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5445,"mutability":"mutable","name":"value","nameLocation":"6746:5:15","nodeType":"VariableDeclaration","scope":5470,"src":"6738:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5444,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:15"},"returnParameters":{"id":5449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5470,"src":"6776:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5447,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:15","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:15"},"scope":6900,"src":"6719:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5497,"nodeType":"Block","src":"7294:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"7308:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5480,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5479,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:15","memberName":"max","nodeType":"MemberAccess","src":"7316:17:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5491,"nodeType":"IfStatement","src":"7304:105:15","trueBody":{"id":5490,"nodeType":"Block","src":"7335:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:15","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"7392:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5485,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"7356:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5489,"nodeType":"RevertStatement","src":"7349:49:15"}]}},{"expression":{"arguments":[{"id":5494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"7433:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5492,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:15","typeDescriptions":{}}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5477,"id":5496,"nodeType":"Return","src":"7418:21:15"}]},"documentation":{"id":5471,"nodeType":"StructuredDocumentation","src":"6943:280:15","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5498,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:15","nodeType":"FunctionDefinition","parameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"value","nameLocation":"7255:5:15","nodeType":"VariableDeclaration","scope":5498,"src":"7247:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:15"},"returnParameters":{"id":5477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5498,"src":"7285:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5475,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:15"},"scope":6900,"src":"7228:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5525,"nodeType":"Block","src":"7803:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"7817:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5508,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5507,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:15","memberName":"max","nodeType":"MemberAccess","src":"7825:17:15","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5519,"nodeType":"IfStatement","src":"7813:105:15","trueBody":{"id":5518,"nodeType":"Block","src":"7844:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:15","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"7901:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5513,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"7865:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5517,"nodeType":"RevertStatement","src":"7858:49:15"}]}},{"expression":{"arguments":[{"id":5522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"7942:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5520,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:15","typeDescriptions":{}}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5505,"id":5524,"nodeType":"Return","src":"7927:21:15"}]},"documentation":{"id":5499,"nodeType":"StructuredDocumentation","src":"7452:280:15","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5526,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:15","nodeType":"FunctionDefinition","parameters":{"id":5502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5501,"mutability":"mutable","name":"value","nameLocation":"7764:5:15","nodeType":"VariableDeclaration","scope":5526,"src":"7756:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5500,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:15"},"returnParameters":{"id":5505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5526,"src":"7794:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5503,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:15","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:15"},"scope":6900,"src":"7737:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5553,"nodeType":"Block","src":"8312:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"8326:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5536,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5535,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:15","memberName":"max","nodeType":"MemberAccess","src":"8334:17:15","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5547,"nodeType":"IfStatement","src":"8322:105:15","trueBody":{"id":5546,"nodeType":"Block","src":"8353:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:15","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"8410:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5541,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"8374:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5545,"nodeType":"RevertStatement","src":"8367:49:15"}]}},{"expression":{"arguments":[{"id":5550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"8451:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5548,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:15","typeDescriptions":{}}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5533,"id":5552,"nodeType":"Return","src":"8436:21:15"}]},"documentation":{"id":5527,"nodeType":"StructuredDocumentation","src":"7961:280:15","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5554,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:15","nodeType":"FunctionDefinition","parameters":{"id":5530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5529,"mutability":"mutable","name":"value","nameLocation":"8273:5:15","nodeType":"VariableDeclaration","scope":5554,"src":"8265:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5528,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:15"},"returnParameters":{"id":5533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5554,"src":"8303:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5531,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:15","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:15"},"scope":6900,"src":"8246:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5581,"nodeType":"Block","src":"8821:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"8835:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5564,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5563,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:15","memberName":"max","nodeType":"MemberAccess","src":"8843:17:15","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5575,"nodeType":"IfStatement","src":"8831:105:15","trueBody":{"id":5574,"nodeType":"Block","src":"8862:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:15","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"8919:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5569,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"8883:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5573,"nodeType":"RevertStatement","src":"8876:49:15"}]}},{"expression":{"arguments":[{"id":5578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"8960:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5576,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:15","typeDescriptions":{}}},"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5561,"id":5580,"nodeType":"Return","src":"8945:21:15"}]},"documentation":{"id":5555,"nodeType":"StructuredDocumentation","src":"8470:280:15","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5582,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:15","nodeType":"FunctionDefinition","parameters":{"id":5558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5557,"mutability":"mutable","name":"value","nameLocation":"8782:5:15","nodeType":"VariableDeclaration","scope":5582,"src":"8774:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5556,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:15"},"returnParameters":{"id":5561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5582,"src":"8812:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5559,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:15","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:15"},"scope":6900,"src":"8755:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5609,"nodeType":"Block","src":"9330:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"9344:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5592,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5591,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:15","memberName":"max","nodeType":"MemberAccess","src":"9352:17:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5603,"nodeType":"IfStatement","src":"9340:105:15","trueBody":{"id":5602,"nodeType":"Block","src":"9371:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"9428:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5597,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"9392:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5601,"nodeType":"RevertStatement","src":"9385:49:15"}]}},{"expression":{"arguments":[{"id":5606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"9469:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5604,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:15","typeDescriptions":{}}},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5589,"id":5608,"nodeType":"Return","src":"9454:21:15"}]},"documentation":{"id":5583,"nodeType":"StructuredDocumentation","src":"8979:280:15","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5610,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:15","nodeType":"FunctionDefinition","parameters":{"id":5586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5585,"mutability":"mutable","name":"value","nameLocation":"9291:5:15","nodeType":"VariableDeclaration","scope":5610,"src":"9283:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5584,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:15"},"returnParameters":{"id":5589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5610,"src":"9321:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5587,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:15"},"scope":6900,"src":"9264:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5637,"nodeType":"Block","src":"9839:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"9853:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5620,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5619,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:15","memberName":"max","nodeType":"MemberAccess","src":"9861:17:15","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5631,"nodeType":"IfStatement","src":"9849:105:15","trueBody":{"id":5630,"nodeType":"Block","src":"9880:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:15","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"9937:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5625,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"9901:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5629,"nodeType":"RevertStatement","src":"9894:49:15"}]}},{"expression":{"arguments":[{"id":5634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5613,"src":"9978:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5632,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:15","typeDescriptions":{}}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5617,"id":5636,"nodeType":"Return","src":"9963:21:15"}]},"documentation":{"id":5611,"nodeType":"StructuredDocumentation","src":"9488:280:15","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5638,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:15","nodeType":"FunctionDefinition","parameters":{"id":5614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5613,"mutability":"mutable","name":"value","nameLocation":"9800:5:15","nodeType":"VariableDeclaration","scope":5638,"src":"9792:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5612,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:15"},"returnParameters":{"id":5617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5638,"src":"9830:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5615,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:15","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:15"},"scope":6900,"src":"9773:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5665,"nodeType":"Block","src":"10348:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"10362:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5648,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5647,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:15","memberName":"max","nodeType":"MemberAccess","src":"10370:17:15","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5659,"nodeType":"IfStatement","src":"10358:105:15","trueBody":{"id":5658,"nodeType":"Block","src":"10389:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:15","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"10446:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5653,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"10410:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5657,"nodeType":"RevertStatement","src":"10403:49:15"}]}},{"expression":{"arguments":[{"id":5662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5641,"src":"10487:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5660,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:15","typeDescriptions":{}}},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5645,"id":5664,"nodeType":"Return","src":"10472:21:15"}]},"documentation":{"id":5639,"nodeType":"StructuredDocumentation","src":"9997:280:15","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5666,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:15","nodeType":"FunctionDefinition","parameters":{"id":5642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5641,"mutability":"mutable","name":"value","nameLocation":"10309:5:15","nodeType":"VariableDeclaration","scope":5666,"src":"10301:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5640,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:15"},"returnParameters":{"id":5645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5644,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5666,"src":"10339:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5643,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:15","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:15"},"scope":6900,"src":"10282:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5693,"nodeType":"Block","src":"10857:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"10871:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5676,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5675,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:15","memberName":"max","nodeType":"MemberAccess","src":"10879:17:15","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5687,"nodeType":"IfStatement","src":"10867:105:15","trueBody":{"id":5686,"nodeType":"Block","src":"10898:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:15","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"10955:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5681,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"10919:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5685,"nodeType":"RevertStatement","src":"10912:49:15"}]}},{"expression":{"arguments":[{"id":5690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5669,"src":"10996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5688,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:15","typeDescriptions":{}}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5673,"id":5692,"nodeType":"Return","src":"10981:21:15"}]},"documentation":{"id":5667,"nodeType":"StructuredDocumentation","src":"10506:280:15","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5694,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:15","nodeType":"FunctionDefinition","parameters":{"id":5670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5669,"mutability":"mutable","name":"value","nameLocation":"10818:5:15","nodeType":"VariableDeclaration","scope":5694,"src":"10810:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5668,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:15"},"returnParameters":{"id":5673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5694,"src":"10848:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5671,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:15","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:15"},"scope":6900,"src":"10791:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5721,"nodeType":"Block","src":"11360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"11374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5704,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5703,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:15","memberName":"max","nodeType":"MemberAccess","src":"11382:16:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5715,"nodeType":"IfStatement","src":"11370:103:15","trueBody":{"id":5714,"nodeType":"Block","src":"11400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"11456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5709,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"11421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5713,"nodeType":"RevertStatement","src":"11414:48:15"}]}},{"expression":{"arguments":[{"id":5718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"11496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5716,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:15","typeDescriptions":{}}},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5701,"id":5720,"nodeType":"Return","src":"11482:20:15"}]},"documentation":{"id":5695,"nodeType":"StructuredDocumentation","src":"11015:276:15","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5722,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5697,"mutability":"mutable","name":"value","nameLocation":"11322:5:15","nodeType":"VariableDeclaration","scope":5722,"src":"11314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5696,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:15"},"returnParameters":{"id":5701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5722,"src":"11352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5699,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:15"},"scope":6900,"src":"11296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5749,"nodeType":"Block","src":"11860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"11874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5732,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5731,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:15","memberName":"max","nodeType":"MemberAccess","src":"11882:16:15","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5743,"nodeType":"IfStatement","src":"11870:103:15","trueBody":{"id":5742,"nodeType":"Block","src":"11900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"11956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5737,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"11921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5741,"nodeType":"RevertStatement","src":"11914:48:15"}]}},{"expression":{"arguments":[{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"11996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5744,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:15","typeDescriptions":{}}},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5729,"id":5748,"nodeType":"Return","src":"11982:20:15"}]},"documentation":{"id":5723,"nodeType":"StructuredDocumentation","src":"11515:276:15","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5750,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5725,"mutability":"mutable","name":"value","nameLocation":"11822:5:15","nodeType":"VariableDeclaration","scope":5750,"src":"11814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5724,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:15"},"returnParameters":{"id":5729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5750,"src":"11852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5727,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:15","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:15"},"scope":6900,"src":"11796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5777,"nodeType":"Block","src":"12360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"12374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5760,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5759,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:15","memberName":"max","nodeType":"MemberAccess","src":"12382:16:15","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5771,"nodeType":"IfStatement","src":"12370:103:15","trueBody":{"id":5770,"nodeType":"Block","src":"12400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"12456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5765,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"12421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5769,"nodeType":"RevertStatement","src":"12414:48:15"}]}},{"expression":{"arguments":[{"id":5774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"12496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5772,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:15","typeDescriptions":{}}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5757,"id":5776,"nodeType":"Return","src":"12482:20:15"}]},"documentation":{"id":5751,"nodeType":"StructuredDocumentation","src":"12015:276:15","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5778,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5753,"mutability":"mutable","name":"value","nameLocation":"12322:5:15","nodeType":"VariableDeclaration","scope":5778,"src":"12314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5752,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:15"},"returnParameters":{"id":5757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5778,"src":"12352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5755,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:15","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:15"},"scope":6900,"src":"12296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5805,"nodeType":"Block","src":"12860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5781,"src":"12874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5788,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5787,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:15","memberName":"max","nodeType":"MemberAccess","src":"12882:16:15","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5799,"nodeType":"IfStatement","src":"12870:103:15","trueBody":{"id":5798,"nodeType":"Block","src":"12900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5781,"src":"12956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5793,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"12921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5797,"nodeType":"RevertStatement","src":"12914:48:15"}]}},{"expression":{"arguments":[{"id":5802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5781,"src":"12996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5800,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:15","typeDescriptions":{}}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5785,"id":5804,"nodeType":"Return","src":"12982:20:15"}]},"documentation":{"id":5779,"nodeType":"StructuredDocumentation","src":"12515:276:15","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5806,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5781,"mutability":"mutable","name":"value","nameLocation":"12822:5:15","nodeType":"VariableDeclaration","scope":5806,"src":"12814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5780,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:15"},"returnParameters":{"id":5785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5806,"src":"12852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5783,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:15","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:15"},"scope":6900,"src":"12796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5833,"nodeType":"Block","src":"13360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"13374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5816,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5815,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:15","memberName":"max","nodeType":"MemberAccess","src":"13382:16:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5827,"nodeType":"IfStatement","src":"13370:103:15","trueBody":{"id":5826,"nodeType":"Block","src":"13400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"13456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5821,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"13421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5825,"nodeType":"RevertStatement","src":"13414:48:15"}]}},{"expression":{"arguments":[{"id":5830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"13496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5828,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:15","typeDescriptions":{}}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5813,"id":5832,"nodeType":"Return","src":"13482:20:15"}]},"documentation":{"id":5807,"nodeType":"StructuredDocumentation","src":"13015:276:15","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5834,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5809,"mutability":"mutable","name":"value","nameLocation":"13322:5:15","nodeType":"VariableDeclaration","scope":5834,"src":"13314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5808,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:15"},"returnParameters":{"id":5813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5834,"src":"13352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5811,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:15"},"scope":6900,"src":"13296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5861,"nodeType":"Block","src":"13860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"13874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5844,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5843,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:15","memberName":"max","nodeType":"MemberAccess","src":"13882:16:15","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5855,"nodeType":"IfStatement","src":"13870:103:15","trueBody":{"id":5854,"nodeType":"Block","src":"13900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"13956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5849,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"13921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5853,"nodeType":"RevertStatement","src":"13914:48:15"}]}},{"expression":{"arguments":[{"id":5858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"13996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5856,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:15","typeDescriptions":{}}},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5841,"id":5860,"nodeType":"Return","src":"13982:20:15"}]},"documentation":{"id":5835,"nodeType":"StructuredDocumentation","src":"13515:276:15","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5862,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5837,"mutability":"mutable","name":"value","nameLocation":"13822:5:15","nodeType":"VariableDeclaration","scope":5862,"src":"13814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5836,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:15"},"returnParameters":{"id":5841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5862,"src":"13852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5839,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:15","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:15"},"scope":6900,"src":"13796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5889,"nodeType":"Block","src":"14360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"14374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5872,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5871,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:15","memberName":"max","nodeType":"MemberAccess","src":"14382:16:15","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5883,"nodeType":"IfStatement","src":"14370:103:15","trueBody":{"id":5882,"nodeType":"Block","src":"14400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"14456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5877,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"14421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5881,"nodeType":"RevertStatement","src":"14414:48:15"}]}},{"expression":{"arguments":[{"id":5886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"14496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5884,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:15","typeDescriptions":{}}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5869,"id":5888,"nodeType":"Return","src":"14482:20:15"}]},"documentation":{"id":5863,"nodeType":"StructuredDocumentation","src":"14015:276:15","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5890,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5865,"mutability":"mutable","name":"value","nameLocation":"14322:5:15","nodeType":"VariableDeclaration","scope":5890,"src":"14314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5864,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:15"},"returnParameters":{"id":5869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5890,"src":"14352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5867,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:15","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:15"},"scope":6900,"src":"14296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5917,"nodeType":"Block","src":"14860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"14874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5900,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5899,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:15","memberName":"max","nodeType":"MemberAccess","src":"14882:16:15","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5911,"nodeType":"IfStatement","src":"14870:103:15","trueBody":{"id":5910,"nodeType":"Block","src":"14900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"14956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5905,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"14921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5909,"nodeType":"RevertStatement","src":"14914:48:15"}]}},{"expression":{"arguments":[{"id":5914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5893,"src":"14996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5912,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:15","typeDescriptions":{}}},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5897,"id":5916,"nodeType":"Return","src":"14982:20:15"}]},"documentation":{"id":5891,"nodeType":"StructuredDocumentation","src":"14515:276:15","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5918,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5893,"mutability":"mutable","name":"value","nameLocation":"14822:5:15","nodeType":"VariableDeclaration","scope":5918,"src":"14814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5892,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:15"},"returnParameters":{"id":5897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5918,"src":"14852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5895,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:15","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:15"},"scope":6900,"src":"14796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5945,"nodeType":"Block","src":"15360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"15374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5928,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5927,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:15","memberName":"max","nodeType":"MemberAccess","src":"15382:16:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5939,"nodeType":"IfStatement","src":"15370:103:15","trueBody":{"id":5938,"nodeType":"Block","src":"15400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"15456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5933,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"15421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5937,"nodeType":"RevertStatement","src":"15414:48:15"}]}},{"expression":{"arguments":[{"id":5942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"15496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5940,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:15","typeDescriptions":{}}},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5925,"id":5944,"nodeType":"Return","src":"15482:20:15"}]},"documentation":{"id":5919,"nodeType":"StructuredDocumentation","src":"15015:276:15","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5946,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5921,"mutability":"mutable","name":"value","nameLocation":"15322:5:15","nodeType":"VariableDeclaration","scope":5946,"src":"15314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5920,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:15"},"returnParameters":{"id":5925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5946,"src":"15352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5923,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:15"},"scope":6900,"src":"15296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5973,"nodeType":"Block","src":"15860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"15874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5956,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5955,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:15","memberName":"max","nodeType":"MemberAccess","src":"15882:16:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5967,"nodeType":"IfStatement","src":"15870:103:15","trueBody":{"id":5966,"nodeType":"Block","src":"15900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"15956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5961,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"15921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5965,"nodeType":"RevertStatement","src":"15914:48:15"}]}},{"expression":{"arguments":[{"id":5970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"15996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5968,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:15","typeDescriptions":{}}},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5953,"id":5972,"nodeType":"Return","src":"15982:20:15"}]},"documentation":{"id":5947,"nodeType":"StructuredDocumentation","src":"15515:276:15","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5974,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5949,"mutability":"mutable","name":"value","nameLocation":"15822:5:15","nodeType":"VariableDeclaration","scope":5974,"src":"15814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5948,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:15"},"returnParameters":{"id":5953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5974,"src":"15852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5951,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:15"},"scope":6900,"src":"15796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6001,"nodeType":"Block","src":"16360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"16374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5984,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5983,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:15","memberName":"max","nodeType":"MemberAccess","src":"16382:16:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5995,"nodeType":"IfStatement","src":"16370:103:15","trueBody":{"id":5994,"nodeType":"Block","src":"16400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"16456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5989,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"16421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5993,"nodeType":"RevertStatement","src":"16414:48:15"}]}},{"expression":{"arguments":[{"id":5998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5977,"src":"16496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5996,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:15","typeDescriptions":{}}},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5981,"id":6000,"nodeType":"Return","src":"16482:20:15"}]},"documentation":{"id":5975,"nodeType":"StructuredDocumentation","src":"16015:276:15","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6002,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5977,"mutability":"mutable","name":"value","nameLocation":"16322:5:15","nodeType":"VariableDeclaration","scope":6002,"src":"16314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5976,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:15"},"returnParameters":{"id":5981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6002,"src":"16352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5979,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:15"},"scope":6900,"src":"16296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6029,"nodeType":"Block","src":"16854:146:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"16868:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6012,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6011,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:15","memberName":"max","nodeType":"MemberAccess","src":"16876:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6023,"nodeType":"IfStatement","src":"16864:101:15","trueBody":{"id":6022,"nodeType":"Block","src":"16893:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"16948:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6017,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"16914:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6021,"nodeType":"RevertStatement","src":"16907:47:15"}]}},{"expression":{"arguments":[{"id":6026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6005,"src":"16987:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6024,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:15","typeDescriptions":{}}},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6009,"id":6028,"nodeType":"Return","src":"16974:19:15"}]},"documentation":{"id":6003,"nodeType":"StructuredDocumentation","src":"16515:272:15","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6030,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:15","nodeType":"FunctionDefinition","parameters":{"id":6006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6005,"mutability":"mutable","name":"value","nameLocation":"16817:5:15","nodeType":"VariableDeclaration","scope":6030,"src":"16809:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6004,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:15"},"returnParameters":{"id":6009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6030,"src":"16847:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6007,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:15"},"scope":6900,"src":"16792:208:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6052,"nodeType":"Block","src":"17236:128:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"17250:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6046,"nodeType":"IfStatement","src":"17246:81:15","trueBody":{"id":6045,"nodeType":"Block","src":"17261:66:15","statements":[{"errorCall":{"arguments":[{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"17310:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6041,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"17282:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6044,"nodeType":"RevertStatement","src":"17275:41:15"}]}},{"expression":{"arguments":[{"id":6049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6033,"src":"17351:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6047,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:15","typeDescriptions":{}}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6037,"id":6051,"nodeType":"Return","src":"17336:21:15"}]},"documentation":{"id":6031,"nodeType":"StructuredDocumentation","src":"17006:160:15","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6053,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:15","nodeType":"FunctionDefinition","parameters":{"id":6034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6033,"mutability":"mutable","name":"value","nameLocation":"17197:5:15","nodeType":"VariableDeclaration","scope":6053,"src":"17190:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6032,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:15"},"returnParameters":{"id":6037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6053,"src":"17227:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6035,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:15"},"scope":6900,"src":"17171:193:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6078,"nodeType":"Block","src":"17761:150:15","statements":[{"expression":{"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"17771:10:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"17791:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6062,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:15","typeDescriptions":{}}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6067,"nodeType":"ExpressionStatement","src":"17771:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6068,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6059,"src":"17811:10:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"17825:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6077,"nodeType":"IfStatement","src":"17807:98:15","trueBody":{"id":6076,"nodeType":"Block","src":"17832:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:15","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6056,"src":"17888:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6071,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"17853:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6075,"nodeType":"RevertStatement","src":"17846:48:15"}]}}]},"documentation":{"id":6054,"nodeType":"StructuredDocumentation","src":"17370:312:15","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6079,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:15","nodeType":"FunctionDefinition","parameters":{"id":6057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6056,"mutability":"mutable","name":"value","nameLocation":"17712:5:15","nodeType":"VariableDeclaration","scope":6079,"src":"17705:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6055,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:15"},"returnParameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6059,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:15","nodeType":"VariableDeclaration","scope":6079,"src":"17742:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6058,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:15"},"scope":6900,"src":"17687:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6104,"nodeType":"Block","src":"18308:150:15","statements":[{"expression":{"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"18318:10:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"18338:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6088,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:15","typeDescriptions":{}}},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6093,"nodeType":"ExpressionStatement","src":"18318:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6094,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6085,"src":"18358:10:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"18372:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6103,"nodeType":"IfStatement","src":"18354:98:15","trueBody":{"id":6102,"nodeType":"Block","src":"18379:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:15","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6082,"src":"18435:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6097,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"18400:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6101,"nodeType":"RevertStatement","src":"18393:48:15"}]}}]},"documentation":{"id":6080,"nodeType":"StructuredDocumentation","src":"17917:312:15","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6105,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:15","nodeType":"FunctionDefinition","parameters":{"id":6083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6082,"mutability":"mutable","name":"value","nameLocation":"18259:5:15","nodeType":"VariableDeclaration","scope":6105,"src":"18252:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6081,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:15"},"returnParameters":{"id":6086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6085,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:15","nodeType":"VariableDeclaration","scope":6105,"src":"18289:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6084,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:15"},"scope":6900,"src":"18234:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6130,"nodeType":"Block","src":"18855:150:15","statements":[{"expression":{"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"18865:10:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"18885:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6114,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:15","typeDescriptions":{}}},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6119,"nodeType":"ExpressionStatement","src":"18865:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6111,"src":"18905:10:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"18919:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6129,"nodeType":"IfStatement","src":"18901:98:15","trueBody":{"id":6128,"nodeType":"Block","src":"18926:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:15","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"18982:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6123,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"18947:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6127,"nodeType":"RevertStatement","src":"18940:48:15"}]}}]},"documentation":{"id":6106,"nodeType":"StructuredDocumentation","src":"18464:312:15","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6131,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:15","nodeType":"FunctionDefinition","parameters":{"id":6109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6108,"mutability":"mutable","name":"value","nameLocation":"18806:5:15","nodeType":"VariableDeclaration","scope":6131,"src":"18799:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6107,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:15"},"returnParameters":{"id":6112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6111,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:15","nodeType":"VariableDeclaration","scope":6131,"src":"18836:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6110,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:15"},"scope":6900,"src":"18781:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6156,"nodeType":"Block","src":"19402:150:15","statements":[{"expression":{"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"19412:10:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"19432:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6140,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:15","typeDescriptions":{}}},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6145,"nodeType":"ExpressionStatement","src":"19412:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6146,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6137,"src":"19452:10:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"19466:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6155,"nodeType":"IfStatement","src":"19448:98:15","trueBody":{"id":6154,"nodeType":"Block","src":"19473:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:15","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6134,"src":"19529:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6149,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"19494:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6153,"nodeType":"RevertStatement","src":"19487:48:15"}]}}]},"documentation":{"id":6132,"nodeType":"StructuredDocumentation","src":"19011:312:15","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6157,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:15","nodeType":"FunctionDefinition","parameters":{"id":6135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6134,"mutability":"mutable","name":"value","nameLocation":"19353:5:15","nodeType":"VariableDeclaration","scope":6157,"src":"19346:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6133,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:15"},"returnParameters":{"id":6138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6137,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:15","nodeType":"VariableDeclaration","scope":6157,"src":"19383:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6136,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:15"},"scope":6900,"src":"19328:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6182,"nodeType":"Block","src":"19949:150:15","statements":[{"expression":{"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6165,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"19959:10:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"19979:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6166,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:15","typeDescriptions":{}}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6171,"nodeType":"ExpressionStatement","src":"19959:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6172,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6163,"src":"19999:10:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"20013:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6181,"nodeType":"IfStatement","src":"19995:98:15","trueBody":{"id":6180,"nodeType":"Block","src":"20020:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:15","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6160,"src":"20076:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6175,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"20041:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6179,"nodeType":"RevertStatement","src":"20034:48:15"}]}}]},"documentation":{"id":6158,"nodeType":"StructuredDocumentation","src":"19558:312:15","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6183,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:15","nodeType":"FunctionDefinition","parameters":{"id":6161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6160,"mutability":"mutable","name":"value","nameLocation":"19900:5:15","nodeType":"VariableDeclaration","scope":6183,"src":"19893:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6159,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:15"},"returnParameters":{"id":6164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6163,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:15","nodeType":"VariableDeclaration","scope":6183,"src":"19930:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6162,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:15"},"scope":6900,"src":"19875:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6208,"nodeType":"Block","src":"20496:150:15","statements":[{"expression":{"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"20506:10:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"20526:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6192,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:15","typeDescriptions":{}}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6197,"nodeType":"ExpressionStatement","src":"20506:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6198,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6189,"src":"20546:10:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"20560:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6207,"nodeType":"IfStatement","src":"20542:98:15","trueBody":{"id":6206,"nodeType":"Block","src":"20567:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:15","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6186,"src":"20623:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6201,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"20588:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6205,"nodeType":"RevertStatement","src":"20581:48:15"}]}}]},"documentation":{"id":6184,"nodeType":"StructuredDocumentation","src":"20105:312:15","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6209,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:15","nodeType":"FunctionDefinition","parameters":{"id":6187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6186,"mutability":"mutable","name":"value","nameLocation":"20447:5:15","nodeType":"VariableDeclaration","scope":6209,"src":"20440:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6185,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:15"},"returnParameters":{"id":6190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6189,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:15","nodeType":"VariableDeclaration","scope":6209,"src":"20477:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6188,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:15"},"scope":6900,"src":"20422:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6234,"nodeType":"Block","src":"21043:150:15","statements":[{"expression":{"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"21053:10:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"21073:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6218,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:15","typeDescriptions":{}}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6223,"nodeType":"ExpressionStatement","src":"21053:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6224,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6215,"src":"21093:10:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"21107:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6233,"nodeType":"IfStatement","src":"21089:98:15","trueBody":{"id":6232,"nodeType":"Block","src":"21114:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:15","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"21170:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6227,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"21135:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6231,"nodeType":"RevertStatement","src":"21128:48:15"}]}}]},"documentation":{"id":6210,"nodeType":"StructuredDocumentation","src":"20652:312:15","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6235,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:15","nodeType":"FunctionDefinition","parameters":{"id":6213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6212,"mutability":"mutable","name":"value","nameLocation":"20994:5:15","nodeType":"VariableDeclaration","scope":6235,"src":"20987:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6211,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:15"},"returnParameters":{"id":6216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6215,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:15","nodeType":"VariableDeclaration","scope":6235,"src":"21024:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6214,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:15"},"scope":6900,"src":"20969:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6260,"nodeType":"Block","src":"21590:150:15","statements":[{"expression":{"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"21600:10:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"21620:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6244,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:15","typeDescriptions":{}}},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6249,"nodeType":"ExpressionStatement","src":"21600:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6250,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6241,"src":"21640:10:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"21654:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6259,"nodeType":"IfStatement","src":"21636:98:15","trueBody":{"id":6258,"nodeType":"Block","src":"21661:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:15","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"21717:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6253,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"21682:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6257,"nodeType":"RevertStatement","src":"21675:48:15"}]}}]},"documentation":{"id":6236,"nodeType":"StructuredDocumentation","src":"21199:312:15","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6261,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:15","nodeType":"FunctionDefinition","parameters":{"id":6239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6238,"mutability":"mutable","name":"value","nameLocation":"21541:5:15","nodeType":"VariableDeclaration","scope":6261,"src":"21534:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6237,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:15"},"returnParameters":{"id":6242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6241,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:15","nodeType":"VariableDeclaration","scope":6261,"src":"21571:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6240,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:15"},"scope":6900,"src":"21516:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6286,"nodeType":"Block","src":"22137:150:15","statements":[{"expression":{"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6267,"src":"22147:10:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6264,"src":"22167:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6270,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:15","typeDescriptions":{}}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6275,"nodeType":"ExpressionStatement","src":"22147:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6267,"src":"22187:10:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6264,"src":"22201:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6285,"nodeType":"IfStatement","src":"22183:98:15","trueBody":{"id":6284,"nodeType":"Block","src":"22208:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:15","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6264,"src":"22264:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6279,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"22229:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6283,"nodeType":"RevertStatement","src":"22222:48:15"}]}}]},"documentation":{"id":6262,"nodeType":"StructuredDocumentation","src":"21746:312:15","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6287,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:15","nodeType":"FunctionDefinition","parameters":{"id":6265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6264,"mutability":"mutable","name":"value","nameLocation":"22088:5:15","nodeType":"VariableDeclaration","scope":6287,"src":"22081:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6263,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:15"},"returnParameters":{"id":6268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6267,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:15","nodeType":"VariableDeclaration","scope":6287,"src":"22118:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6266,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:15"},"scope":6900,"src":"22063:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6312,"nodeType":"Block","src":"22684:150:15","statements":[{"expression":{"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"22694:10:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"22714:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6296,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:15","typeDescriptions":{}}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6301,"nodeType":"ExpressionStatement","src":"22694:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6302,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"22734:10:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"22748:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6311,"nodeType":"IfStatement","src":"22730:98:15","trueBody":{"id":6310,"nodeType":"Block","src":"22755:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6290,"src":"22811:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6305,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"22776:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6309,"nodeType":"RevertStatement","src":"22769:48:15"}]}}]},"documentation":{"id":6288,"nodeType":"StructuredDocumentation","src":"22293:312:15","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6313,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:15","nodeType":"FunctionDefinition","parameters":{"id":6291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6290,"mutability":"mutable","name":"value","nameLocation":"22635:5:15","nodeType":"VariableDeclaration","scope":6313,"src":"22628:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6289,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:15"},"returnParameters":{"id":6294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6293,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:15","nodeType":"VariableDeclaration","scope":6313,"src":"22665:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6292,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:15"},"scope":6900,"src":"22610:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6338,"nodeType":"Block","src":"23231:150:15","statements":[{"expression":{"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"23241:10:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"23261:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6322,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:15","typeDescriptions":{}}},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6327,"nodeType":"ExpressionStatement","src":"23241:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6328,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"23281:10:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"23295:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6337,"nodeType":"IfStatement","src":"23277:98:15","trueBody":{"id":6336,"nodeType":"Block","src":"23302:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:15","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6316,"src":"23358:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6331,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"23323:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6335,"nodeType":"RevertStatement","src":"23316:48:15"}]}}]},"documentation":{"id":6314,"nodeType":"StructuredDocumentation","src":"22840:312:15","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6339,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:15","nodeType":"FunctionDefinition","parameters":{"id":6317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6316,"mutability":"mutable","name":"value","nameLocation":"23182:5:15","nodeType":"VariableDeclaration","scope":6339,"src":"23175:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6315,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:15"},"returnParameters":{"id":6320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6319,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:15","nodeType":"VariableDeclaration","scope":6339,"src":"23212:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6318,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:15"},"scope":6900,"src":"23157:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6364,"nodeType":"Block","src":"23778:150:15","statements":[{"expression":{"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6347,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"23788:10:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"23808:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6348,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:15","typeDescriptions":{}}},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6353,"nodeType":"ExpressionStatement","src":"23788:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6354,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"23828:10:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"23842:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6363,"nodeType":"IfStatement","src":"23824:98:15","trueBody":{"id":6362,"nodeType":"Block","src":"23849:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:15","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"23905:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6357,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"23870:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6361,"nodeType":"RevertStatement","src":"23863:48:15"}]}}]},"documentation":{"id":6340,"nodeType":"StructuredDocumentation","src":"23387:312:15","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6365,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:15","nodeType":"FunctionDefinition","parameters":{"id":6343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6342,"mutability":"mutable","name":"value","nameLocation":"23729:5:15","nodeType":"VariableDeclaration","scope":6365,"src":"23722:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6341,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:15"},"returnParameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:15","nodeType":"VariableDeclaration","scope":6365,"src":"23759:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6344,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:15"},"scope":6900,"src":"23704:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6390,"nodeType":"Block","src":"24325:150:15","statements":[{"expression":{"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"24335:10:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6368,"src":"24355:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6374,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:15","typeDescriptions":{}}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6379,"nodeType":"ExpressionStatement","src":"24335:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6380,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6371,"src":"24375:10:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6368,"src":"24389:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6389,"nodeType":"IfStatement","src":"24371:98:15","trueBody":{"id":6388,"nodeType":"Block","src":"24396:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:15","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6368,"src":"24452:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6383,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"24417:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6387,"nodeType":"RevertStatement","src":"24410:48:15"}]}}]},"documentation":{"id":6366,"nodeType":"StructuredDocumentation","src":"23934:312:15","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6391,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:15","nodeType":"FunctionDefinition","parameters":{"id":6369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6368,"mutability":"mutable","name":"value","nameLocation":"24276:5:15","nodeType":"VariableDeclaration","scope":6391,"src":"24269:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6367,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:15"},"returnParameters":{"id":6372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6371,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:15","nodeType":"VariableDeclaration","scope":6391,"src":"24306:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6370,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:15"},"scope":6900,"src":"24251:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6416,"nodeType":"Block","src":"24872:150:15","statements":[{"expression":{"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6399,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"24882:10:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6394,"src":"24902:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6400,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:15","typeDescriptions":{}}},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6405,"nodeType":"ExpressionStatement","src":"24882:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"24922:10:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6394,"src":"24936:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6415,"nodeType":"IfStatement","src":"24918:98:15","trueBody":{"id":6414,"nodeType":"Block","src":"24943:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:15","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6394,"src":"24999:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6409,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"24964:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6413,"nodeType":"RevertStatement","src":"24957:48:15"}]}}]},"documentation":{"id":6392,"nodeType":"StructuredDocumentation","src":"24481:312:15","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6417,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:15","nodeType":"FunctionDefinition","parameters":{"id":6395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6394,"mutability":"mutable","name":"value","nameLocation":"24823:5:15","nodeType":"VariableDeclaration","scope":6417,"src":"24816:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6393,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:15"},"returnParameters":{"id":6398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6397,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:15","nodeType":"VariableDeclaration","scope":6417,"src":"24853:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6396,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:15"},"scope":6900,"src":"24798:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6442,"nodeType":"Block","src":"25419:150:15","statements":[{"expression":{"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6425,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"25429:10:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"25449:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6426,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:15","typeDescriptions":{}}},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6431,"nodeType":"ExpressionStatement","src":"25429:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6432,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6423,"src":"25469:10:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"25483:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6441,"nodeType":"IfStatement","src":"25465:98:15","trueBody":{"id":6440,"nodeType":"Block","src":"25490:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:15","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"25546:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6435,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"25511:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6439,"nodeType":"RevertStatement","src":"25504:48:15"}]}}]},"documentation":{"id":6418,"nodeType":"StructuredDocumentation","src":"25028:312:15","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6443,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:15","nodeType":"FunctionDefinition","parameters":{"id":6421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"value","nameLocation":"25370:5:15","nodeType":"VariableDeclaration","scope":6443,"src":"25363:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6419,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:15"},"returnParameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6423,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:15","nodeType":"VariableDeclaration","scope":6443,"src":"25400:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6422,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:15"},"scope":6900,"src":"25345:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6468,"nodeType":"Block","src":"25966:150:15","statements":[{"expression":{"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6451,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"25976:10:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"25996:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6452,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:15","typeDescriptions":{}}},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6457,"nodeType":"ExpressionStatement","src":"25976:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6458,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6449,"src":"26016:10:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"26030:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6467,"nodeType":"IfStatement","src":"26012:98:15","trueBody":{"id":6466,"nodeType":"Block","src":"26037:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"26093:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6461,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"26058:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6465,"nodeType":"RevertStatement","src":"26051:48:15"}]}}]},"documentation":{"id":6444,"nodeType":"StructuredDocumentation","src":"25575:312:15","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6469,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:15","nodeType":"FunctionDefinition","parameters":{"id":6447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6446,"mutability":"mutable","name":"value","nameLocation":"25917:5:15","nodeType":"VariableDeclaration","scope":6469,"src":"25910:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6445,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:15"},"returnParameters":{"id":6450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6449,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:15","nodeType":"VariableDeclaration","scope":6469,"src":"25947:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6448,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:15"},"scope":6900,"src":"25892:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6494,"nodeType":"Block","src":"26513:150:15","statements":[{"expression":{"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6477,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"26523:10:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"26543:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6478,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:15","typeDescriptions":{}}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6483,"nodeType":"ExpressionStatement","src":"26523:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6484,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6475,"src":"26563:10:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"26577:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6493,"nodeType":"IfStatement","src":"26559:98:15","trueBody":{"id":6492,"nodeType":"Block","src":"26584:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:15","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6472,"src":"26640:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6487,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"26605:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6491,"nodeType":"RevertStatement","src":"26598:48:15"}]}}]},"documentation":{"id":6470,"nodeType":"StructuredDocumentation","src":"26122:312:15","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6495,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:15","nodeType":"FunctionDefinition","parameters":{"id":6473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6472,"mutability":"mutable","name":"value","nameLocation":"26464:5:15","nodeType":"VariableDeclaration","scope":6495,"src":"26457:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6471,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:15"},"returnParameters":{"id":6476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6475,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:15","nodeType":"VariableDeclaration","scope":6495,"src":"26494:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6474,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:15"},"scope":6900,"src":"26439:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6520,"nodeType":"Block","src":"27060:150:15","statements":[{"expression":{"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"27070:10:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"27090:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6504,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:15","typeDescriptions":{}}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6509,"nodeType":"ExpressionStatement","src":"27070:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6510,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6501,"src":"27110:10:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"27124:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6519,"nodeType":"IfStatement","src":"27106:98:15","trueBody":{"id":6518,"nodeType":"Block","src":"27131:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:15","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6498,"src":"27187:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6513,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"27152:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6517,"nodeType":"RevertStatement","src":"27145:48:15"}]}}]},"documentation":{"id":6496,"nodeType":"StructuredDocumentation","src":"26669:312:15","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6521,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:15","nodeType":"FunctionDefinition","parameters":{"id":6499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6498,"mutability":"mutable","name":"value","nameLocation":"27011:5:15","nodeType":"VariableDeclaration","scope":6521,"src":"27004:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6497,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:15"},"returnParameters":{"id":6502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6501,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:15","nodeType":"VariableDeclaration","scope":6521,"src":"27041:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6500,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:15"},"scope":6900,"src":"26986:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6546,"nodeType":"Block","src":"27607:150:15","statements":[{"expression":{"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"27617:10:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"27637:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6530,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:15","typeDescriptions":{}}},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6535,"nodeType":"ExpressionStatement","src":"27617:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6536,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6527,"src":"27657:10:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"27671:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6545,"nodeType":"IfStatement","src":"27653:98:15","trueBody":{"id":6544,"nodeType":"Block","src":"27678:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:15","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6524,"src":"27734:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6539,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"27699:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6543,"nodeType":"RevertStatement","src":"27692:48:15"}]}}]},"documentation":{"id":6522,"nodeType":"StructuredDocumentation","src":"27216:312:15","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6547,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:15","nodeType":"FunctionDefinition","parameters":{"id":6525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6524,"mutability":"mutable","name":"value","nameLocation":"27558:5:15","nodeType":"VariableDeclaration","scope":6547,"src":"27551:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6523,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:15"},"returnParameters":{"id":6528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6527,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:15","nodeType":"VariableDeclaration","scope":6547,"src":"27588:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6526,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:15"},"scope":6900,"src":"27533:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6572,"nodeType":"Block","src":"28147:148:15","statements":[{"expression":{"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"28157:10:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"28176:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6556,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:15","typeDescriptions":{}}},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6561,"nodeType":"ExpressionStatement","src":"28157:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6562,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"28196:10:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"28210:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6571,"nodeType":"IfStatement","src":"28192:97:15","trueBody":{"id":6570,"nodeType":"Block","src":"28217:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"28272:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6565,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"28238:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6569,"nodeType":"RevertStatement","src":"28231:47:15"}]}}]},"documentation":{"id":6548,"nodeType":"StructuredDocumentation","src":"27763:307:15","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6573,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:15","nodeType":"FunctionDefinition","parameters":{"id":6551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6550,"mutability":"mutable","name":"value","nameLocation":"28099:5:15","nodeType":"VariableDeclaration","scope":6573,"src":"28092:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6549,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:15"},"returnParameters":{"id":6554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6553,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:15","nodeType":"VariableDeclaration","scope":6573,"src":"28129:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6552,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:15"},"scope":6900,"src":"28075:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6598,"nodeType":"Block","src":"28685:148:15","statements":[{"expression":{"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6581,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"28695:10:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"28714:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6582,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:15","typeDescriptions":{}}},"id":6585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6587,"nodeType":"ExpressionStatement","src":"28695:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6588,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6579,"src":"28734:10:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"28748:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6597,"nodeType":"IfStatement","src":"28730:97:15","trueBody":{"id":6596,"nodeType":"Block","src":"28755:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:15","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"28810:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6591,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"28776:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6595,"nodeType":"RevertStatement","src":"28769:47:15"}]}}]},"documentation":{"id":6574,"nodeType":"StructuredDocumentation","src":"28301:307:15","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6599,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:15","nodeType":"FunctionDefinition","parameters":{"id":6577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6576,"mutability":"mutable","name":"value","nameLocation":"28637:5:15","nodeType":"VariableDeclaration","scope":6599,"src":"28630:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6575,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:15"},"returnParameters":{"id":6580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6579,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:15","nodeType":"VariableDeclaration","scope":6599,"src":"28667:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6578,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:15"},"scope":6900,"src":"28613:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6624,"nodeType":"Block","src":"29223:148:15","statements":[{"expression":{"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6607,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"29233:10:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"29252:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6608,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:15","typeDescriptions":{}}},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6613,"nodeType":"ExpressionStatement","src":"29233:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6614,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"29272:10:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"29286:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6623,"nodeType":"IfStatement","src":"29268:97:15","trueBody":{"id":6622,"nodeType":"Block","src":"29293:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:15","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6602,"src":"29348:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6617,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"29314:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6621,"nodeType":"RevertStatement","src":"29307:47:15"}]}}]},"documentation":{"id":6600,"nodeType":"StructuredDocumentation","src":"28839:307:15","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6625,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:15","nodeType":"FunctionDefinition","parameters":{"id":6603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6602,"mutability":"mutable","name":"value","nameLocation":"29175:5:15","nodeType":"VariableDeclaration","scope":6625,"src":"29168:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6601,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:15"},"returnParameters":{"id":6606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6605,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:15","nodeType":"VariableDeclaration","scope":6625,"src":"29205:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6604,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:15"},"scope":6900,"src":"29151:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6650,"nodeType":"Block","src":"29761:148:15","statements":[{"expression":{"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6633,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"29771:10:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"29790:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6634,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:15","typeDescriptions":{}}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6639,"nodeType":"ExpressionStatement","src":"29771:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6640,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"29810:10:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"29824:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6649,"nodeType":"IfStatement","src":"29806:97:15","trueBody":{"id":6648,"nodeType":"Block","src":"29831:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:15","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6628,"src":"29886:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6643,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"29852:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6647,"nodeType":"RevertStatement","src":"29845:47:15"}]}}]},"documentation":{"id":6626,"nodeType":"StructuredDocumentation","src":"29377:307:15","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6651,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:15","nodeType":"FunctionDefinition","parameters":{"id":6629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6628,"mutability":"mutable","name":"value","nameLocation":"29713:5:15","nodeType":"VariableDeclaration","scope":6651,"src":"29706:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6627,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:15"},"returnParameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6631,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:15","nodeType":"VariableDeclaration","scope":6651,"src":"29743:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6630,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:15"},"scope":6900,"src":"29689:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6676,"nodeType":"Block","src":"30299:148:15","statements":[{"expression":{"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6659,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"30309:10:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30328:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6660,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:15","typeDescriptions":{}}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6665,"nodeType":"ExpressionStatement","src":"30309:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6666,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"30348:10:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30362:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6675,"nodeType":"IfStatement","src":"30344:97:15","trueBody":{"id":6674,"nodeType":"Block","src":"30369:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"30424:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6669,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"30390:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6673,"nodeType":"RevertStatement","src":"30383:47:15"}]}}]},"documentation":{"id":6652,"nodeType":"StructuredDocumentation","src":"29915:307:15","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6677,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:15","nodeType":"FunctionDefinition","parameters":{"id":6655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6654,"mutability":"mutable","name":"value","nameLocation":"30251:5:15","nodeType":"VariableDeclaration","scope":6677,"src":"30244:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6653,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:15"},"returnParameters":{"id":6658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:15","nodeType":"VariableDeclaration","scope":6677,"src":"30281:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6656,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:15"},"scope":6900,"src":"30227:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6702,"nodeType":"Block","src":"30837:148:15","statements":[{"expression":{"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6685,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"30847:10:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"30866:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6686,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:15","typeDescriptions":{}}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6691,"nodeType":"ExpressionStatement","src":"30847:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6692,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"30886:10:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"30900:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6701,"nodeType":"IfStatement","src":"30882:97:15","trueBody":{"id":6700,"nodeType":"Block","src":"30907:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:15","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6680,"src":"30962:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6695,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"30928:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6699,"nodeType":"RevertStatement","src":"30921:47:15"}]}}]},"documentation":{"id":6678,"nodeType":"StructuredDocumentation","src":"30453:307:15","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6703,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:15","nodeType":"FunctionDefinition","parameters":{"id":6681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6680,"mutability":"mutable","name":"value","nameLocation":"30789:5:15","nodeType":"VariableDeclaration","scope":6703,"src":"30782:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6679,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:15"},"returnParameters":{"id":6684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6683,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:15","nodeType":"VariableDeclaration","scope":6703,"src":"30819:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6682,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:15"},"scope":6900,"src":"30765:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6728,"nodeType":"Block","src":"31375:148:15","statements":[{"expression":{"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6711,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"31385:10:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"31404:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6712,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:15","typeDescriptions":{}}},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6717,"nodeType":"ExpressionStatement","src":"31385:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6718,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"31424:10:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"31438:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6727,"nodeType":"IfStatement","src":"31420:97:15","trueBody":{"id":6726,"nodeType":"Block","src":"31445:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"31500:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6721,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"31466:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6725,"nodeType":"RevertStatement","src":"31459:47:15"}]}}]},"documentation":{"id":6704,"nodeType":"StructuredDocumentation","src":"30991:307:15","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6729,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:15","nodeType":"FunctionDefinition","parameters":{"id":6707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6706,"mutability":"mutable","name":"value","nameLocation":"31327:5:15","nodeType":"VariableDeclaration","scope":6729,"src":"31320:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6705,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:15"},"returnParameters":{"id":6710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6709,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:15","nodeType":"VariableDeclaration","scope":6729,"src":"31357:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6708,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:15"},"scope":6900,"src":"31303:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6754,"nodeType":"Block","src":"31913:148:15","statements":[{"expression":{"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6737,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"31923:10:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"31942:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6738,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:15","typeDescriptions":{}}},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6743,"nodeType":"ExpressionStatement","src":"31923:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6744,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"31962:10:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"31976:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6753,"nodeType":"IfStatement","src":"31958:97:15","trueBody":{"id":6752,"nodeType":"Block","src":"31983:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"32038:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6747,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"32004:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6751,"nodeType":"RevertStatement","src":"31997:47:15"}]}}]},"documentation":{"id":6730,"nodeType":"StructuredDocumentation","src":"31529:307:15","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6755,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:15","nodeType":"FunctionDefinition","parameters":{"id":6733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6732,"mutability":"mutable","name":"value","nameLocation":"31865:5:15","nodeType":"VariableDeclaration","scope":6755,"src":"31858:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6731,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:15"},"returnParameters":{"id":6736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6735,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:15","nodeType":"VariableDeclaration","scope":6755,"src":"31895:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6734,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:15"},"scope":6900,"src":"31841:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6780,"nodeType":"Block","src":"32451:148:15","statements":[{"expression":{"id":6768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6763,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"32461:10:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"32480:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6764,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:15","typeDescriptions":{}}},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6769,"nodeType":"ExpressionStatement","src":"32461:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6770,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"32500:10:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"32514:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6779,"nodeType":"IfStatement","src":"32496:97:15","trueBody":{"id":6778,"nodeType":"Block","src":"32521:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"32576:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6773,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"32542:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6777,"nodeType":"RevertStatement","src":"32535:47:15"}]}}]},"documentation":{"id":6756,"nodeType":"StructuredDocumentation","src":"32067:307:15","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6781,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:15","nodeType":"FunctionDefinition","parameters":{"id":6759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6758,"mutability":"mutable","name":"value","nameLocation":"32403:5:15","nodeType":"VariableDeclaration","scope":6781,"src":"32396:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6757,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:15"},"returnParameters":{"id":6762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6761,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:15","nodeType":"VariableDeclaration","scope":6781,"src":"32433:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6760,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:15"},"scope":6900,"src":"32379:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6806,"nodeType":"Block","src":"32989:148:15","statements":[{"expression":{"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6789,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"32999:10:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"33018:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6790,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:15","typeDescriptions":{}}},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6795,"nodeType":"ExpressionStatement","src":"32999:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6796,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6787,"src":"33038:10:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"33052:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6805,"nodeType":"IfStatement","src":"33034:97:15","trueBody":{"id":6804,"nodeType":"Block","src":"33059:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:15","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"33114:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6799,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"33080:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6803,"nodeType":"RevertStatement","src":"33073:47:15"}]}}]},"documentation":{"id":6782,"nodeType":"StructuredDocumentation","src":"32605:307:15","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6807,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:15","nodeType":"FunctionDefinition","parameters":{"id":6785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6784,"mutability":"mutable","name":"value","nameLocation":"32941:5:15","nodeType":"VariableDeclaration","scope":6807,"src":"32934:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6783,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:15"},"returnParameters":{"id":6788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6787,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:15","nodeType":"VariableDeclaration","scope":6807,"src":"32971:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6786,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:15"},"scope":6900,"src":"32917:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6832,"nodeType":"Block","src":"33527:148:15","statements":[{"expression":{"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6815,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"33537:10:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6810,"src":"33556:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6816,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:15","typeDescriptions":{}}},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6821,"nodeType":"ExpressionStatement","src":"33537:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6822,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"33576:10:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6810,"src":"33590:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6831,"nodeType":"IfStatement","src":"33572:97:15","trueBody":{"id":6830,"nodeType":"Block","src":"33597:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6810,"src":"33652:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6825,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"33618:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6829,"nodeType":"RevertStatement","src":"33611:47:15"}]}}]},"documentation":{"id":6808,"nodeType":"StructuredDocumentation","src":"33143:307:15","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6833,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:15","nodeType":"FunctionDefinition","parameters":{"id":6811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6810,"mutability":"mutable","name":"value","nameLocation":"33479:5:15","nodeType":"VariableDeclaration","scope":6833,"src":"33472:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6809,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:15"},"returnParameters":{"id":6814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6813,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:15","nodeType":"VariableDeclaration","scope":6833,"src":"33509:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6812,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:15"},"scope":6900,"src":"33455:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6858,"nodeType":"Block","src":"34058:146:15","statements":[{"expression":{"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6841,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"34068:10:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"34086:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6842,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:15","typeDescriptions":{}}},"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6847,"nodeType":"ExpressionStatement","src":"34068:24:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6848,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6839,"src":"34106:10:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"34120:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6857,"nodeType":"IfStatement","src":"34102:96:15","trueBody":{"id":6856,"nodeType":"Block","src":"34127:71:15","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"34181:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6851,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"34148:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6855,"nodeType":"RevertStatement","src":"34141:46:15"}]}}]},"documentation":{"id":6834,"nodeType":"StructuredDocumentation","src":"33681:302:15","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6859,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:15","nodeType":"FunctionDefinition","parameters":{"id":6837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6836,"mutability":"mutable","name":"value","nameLocation":"34011:5:15","nodeType":"VariableDeclaration","scope":6859,"src":"34004:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6835,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:15"},"returnParameters":{"id":6840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6839,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:15","nodeType":"VariableDeclaration","scope":6859,"src":"34041:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6838,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:15"},"scope":6900,"src":"33988:216:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6888,"nodeType":"Block","src":"34444:250:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"34557:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6871,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6870,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:15","memberName":"max","nodeType":"MemberAccess","src":"34573:16:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6868,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:15","typeDescriptions":{}}},"id":6875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6882,"nodeType":"IfStatement","src":"34553:105:15","trueBody":{"id":6881,"nodeType":"Block","src":"34592:66:15","statements":[{"errorCall":{"arguments":[{"id":6878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"34641:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6877,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5162,"src":"34613:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6880,"nodeType":"RevertStatement","src":"34606:41:15"}]}},{"expression":{"arguments":[{"id":6885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"34681:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6883,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:15","typeDescriptions":{}}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6866,"id":6887,"nodeType":"Return","src":"34667:20:15"}]},"documentation":{"id":6860,"nodeType":"StructuredDocumentation","src":"34210:165:15","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6889,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:15","nodeType":"FunctionDefinition","parameters":{"id":6863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6862,"mutability":"mutable","name":"value","nameLocation":"34406:5:15","nodeType":"VariableDeclaration","scope":6889,"src":"34398:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6861,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:15"},"returnParameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6889,"src":"34436:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6864,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:15"},"scope":6900,"src":"34380:314:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6898,"nodeType":"Block","src":"34853:87:15","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:15","statements":[{"nodeType":"YulAssignment","src":"34902:22:15","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:15"},"nodeType":"YulFunctionCall","src":"34914:9:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:15"},"nodeType":"YulFunctionCall","src":"34907:17:15"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6892,"isOffset":false,"isSlot":false,"src":"34921:1:15","valueSize":1},{"declaration":6895,"isOffset":false,"isSlot":false,"src":"34902:1:15","valueSize":1}],"flags":["memory-safe"],"id":6897,"nodeType":"InlineAssembly","src":"34863:71:15"}]},"documentation":{"id":6890,"nodeType":"StructuredDocumentation","src":"34700:90:15","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6899,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:15","nodeType":"FunctionDefinition","parameters":{"id":6893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6892,"mutability":"mutable","name":"b","nameLocation":"34816:1:15","nodeType":"VariableDeclaration","scope":6899,"src":"34811:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6891,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:15"},"returnParameters":{"id":6896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6895,"mutability":"mutable","name":"u","nameLocation":"34850:1:15","nodeType":"VariableDeclaration","scope":6899,"src":"34842:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6894,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:15"},"scope":6900,"src":"34795:145:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6901,"src":"769:34173:15","usedErrors":[5145,5150,5157,5162],"usedEvents":[]}],"src":"192:34751:15"},"id":15},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6900],"SignedMath":[7044]},"id":7045,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6902,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6904,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7045,"sourceUnit":6901,"src":"135:40:16","symbolAliases":[{"foreign":{"id":6903,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"143:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6905,"nodeType":"StructuredDocumentation","src":"177:80:16","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7044,"linearizedBaseContracts":[7044],"name":"SignedMath","nameLocation":"266:10:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":6934,"nodeType":"Block","src":"746:215:16","statements":[{"id":6933,"nodeType":"UncheckedBlock","src":"756:199:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6917,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"894:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"900:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"904:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6926,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6908,"src":"932:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6924,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"916:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6900_$","typeString":"type(library SafeCast)"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6899,"src":"916:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6922,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:16","typeDescriptions":{}}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6916,"id":6932,"nodeType":"Return","src":"887:57:16"}]}]},"documentation":{"id":6906,"nodeType":"StructuredDocumentation","src":"283:374:16","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6935,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:16","nodeType":"FunctionDefinition","parameters":{"id":6913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"mutability":"mutable","name":"condition","nameLocation":"684:9:16","nodeType":"VariableDeclaration","scope":6935,"src":"679:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6907,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6910,"mutability":"mutable","name":"a","nameLocation":"702:1:16","nodeType":"VariableDeclaration","scope":6935,"src":"695:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6909,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6912,"mutability":"mutable","name":"b","nameLocation":"712:1:16","nodeType":"VariableDeclaration","scope":6935,"src":"705:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6911,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:16"},"returnParameters":{"id":6916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6935,"src":"738:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6914,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:16"},"scope":7044,"src":"662:299:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6953,"nodeType":"Block","src":"1102:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6946,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"1127:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6947,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"1131:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6949,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6938,"src":"1134:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6950,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"1137:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6945,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"1119:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6944,"id":6952,"nodeType":"Return","src":"1112:27:16"}]},"documentation":{"id":6936,"nodeType":"StructuredDocumentation","src":"967:66:16","text":" @dev Returns the largest of two signed numbers."},"id":6954,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:16","nodeType":"FunctionDefinition","parameters":{"id":6941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6938,"mutability":"mutable","name":"a","nameLocation":"1058:1:16","nodeType":"VariableDeclaration","scope":6954,"src":"1051:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6937,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6940,"mutability":"mutable","name":"b","nameLocation":"1068:1:16","nodeType":"VariableDeclaration","scope":6954,"src":"1061:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6939,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:16"},"returnParameters":{"id":6944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6954,"src":"1094:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6942,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:16"},"scope":7044,"src":"1038:108:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6972,"nodeType":"Block","src":"1288:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"1313:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"1317:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6957,"src":"1320:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"1323:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6964,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"1305:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6963,"id":6971,"nodeType":"Return","src":"1298:27:16"}]},"documentation":{"id":6955,"nodeType":"StructuredDocumentation","src":"1152:67:16","text":" @dev Returns the smallest of two signed numbers."},"id":6973,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:16","nodeType":"FunctionDefinition","parameters":{"id":6960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6957,"mutability":"mutable","name":"a","nameLocation":"1244:1:16","nodeType":"VariableDeclaration","scope":6973,"src":"1237:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6956,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6959,"mutability":"mutable","name":"b","nameLocation":"1254:1:16","nodeType":"VariableDeclaration","scope":6973,"src":"1247:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6958,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:16"},"returnParameters":{"id":6963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6973,"src":"1280:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6961,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:16"},"scope":7044,"src":"1224:108:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7016,"nodeType":"Block","src":"1537:162:16","statements":[{"assignments":[6984],"declarations":[{"constant":false,"id":6984,"mutability":"mutable","name":"x","nameLocation":"1606:1:16","nodeType":"VariableDeclaration","scope":7016,"src":"1599:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6983,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6997,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"1611:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6986,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"1615:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6989,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"1622:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"1626:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:16"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6998,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"1651:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7003,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"1671:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:16","typeDescriptions":{}}},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6999,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:16","typeDescriptions":{}}},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6976,"src":"1685:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7009,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6978,"src":"1689:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7013,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6982,"id":7015,"nodeType":"Return","src":"1644:48:16"}]},"documentation":{"id":6974,"nodeType":"StructuredDocumentation","src":"1338:126:16","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7017,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:16","nodeType":"FunctionDefinition","parameters":{"id":6979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6976,"mutability":"mutable","name":"a","nameLocation":"1493:1:16","nodeType":"VariableDeclaration","scope":7017,"src":"1486:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6975,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6978,"mutability":"mutable","name":"b","nameLocation":"1503:1:16","nodeType":"VariableDeclaration","scope":7017,"src":"1496:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6977,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:16"},"returnParameters":{"id":6982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7017,"src":"1529:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6980,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:16"},"scope":7044,"src":"1469:230:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7042,"nodeType":"Block","src":"1843:767:16","statements":[{"id":7041,"nodeType":"UncheckedBlock","src":"1853:751:16","statements":[{"assignments":[7026],"declarations":[{"constant":false,"id":7026,"mutability":"mutable","name":"mask","nameLocation":"2424:4:16","nodeType":"VariableDeclaration","scope":7041,"src":"2417:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7025,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7030,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7027,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"2431:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7033,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"2576:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7034,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"2580:4:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7037,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"2588:4:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:16","typeDescriptions":{}}},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7024,"id":7040,"nodeType":"Return","src":"2560:33:16"}]}]},"documentation":{"id":7018,"nodeType":"StructuredDocumentation","src":"1705:78:16","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7043,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:16","nodeType":"FunctionDefinition","parameters":{"id":7021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7020,"mutability":"mutable","name":"n","nameLocation":"1808:1:16","nodeType":"VariableDeclaration","scope":7043,"src":"1801:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7019,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:16"},"returnParameters":{"id":7024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7043,"src":"1834:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7022,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:16"},"scope":7044,"src":"1788:822:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7045,"src":"258:2354:16","usedErrors":[],"usedEvents":[]}],"src":"109:2504:16"},"id":16},"contracts/AppForwarder.sol":{"ast":{"absolutePath":"contracts/AppForwarder.sol","exportedSymbols":{"Address":[938],"AppForwarder":[7076],"ECDSA":[3201],"EIP712":[3428],"ERC2771Context":[169],"ERC2771Forwarder":[678],"Errors":[990],"Nonces":[1058]},"id":7077,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7046,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol","file":"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol","id":7047,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7077,"sourceUnit":679,"src":"58:61:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7049,"name":"ERC2771Forwarder","nameLocations":["323:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":678,"src":"323:16:17"},"id":7050,"nodeType":"InheritanceSpecifier","src":"323:16:17"}],"canonicalName":"AppForwarder","contractDependencies":[],"contractKind":"contract","documentation":{"id":7048,"nodeType":"StructuredDocumentation","src":"121:176:17","text":" @title AppForwarder\n @dev ERC2771Forwarder implementation for offline QR payments\n @notice This contract handles meta-transactions for offline payment processing"},"fullyImplemented":true,"id":7076,"linearizedBaseContracts":[7076,678,1058,3428,24],"name":"AppForwarder","nameLocation":"307:12:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":7056,"nodeType":"Block","src":"393:2:17","statements":[]},"id":7057,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"417070466f72776172646572","id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"377:14:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_db83c83c55dc69446fcf86f8377d9cf441df089e5ee8504f58b2a10bb4e16b2b","typeString":"literal_string \"AppForwarder\""},"value":"AppForwarder"}],"id":7054,"kind":"baseConstructorSpecifier","modifierName":{"id":7052,"name":"ERC2771Forwarder","nameLocations":["360:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":678,"src":"360:16:17"},"nodeType":"ModifierInvocation","src":"360:32:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7051,"nodeType":"ParameterList","parameters":[],"src":"357:2:17"},"returnParameters":{"id":7055,"nodeType":"ParameterList","parameters":[],"src":"393:0:17"},"scope":7076,"src":"346:49:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7065,"nodeType":"Block","src":"549:38:17","statements":[{"expression":{"hexValue":"417070466f72776172646572","id":7063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"566:14:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_db83c83c55dc69446fcf86f8377d9cf441df089e5ee8504f58b2a10bb4e16b2b","typeString":"literal_string \"AppForwarder\""},"value":"AppForwarder"},"functionReturnParameters":7062,"id":7064,"nodeType":"Return","src":"559:21:17"}]},"documentation":{"id":7058,"nodeType":"StructuredDocumentation","src":"405:87:17","text":" @dev Get the forwarder name\n @return The name of the forwarder"},"functionSelector":"06fdde03","id":7066,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"506:4:17","nodeType":"FunctionDefinition","parameters":{"id":7059,"nodeType":"ParameterList","parameters":[],"src":"510:2:17"},"returnParameters":{"id":7062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7066,"src":"534:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7060,"name":"string","nodeType":"ElementaryTypeName","src":"534:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"533:15:17"},"scope":7076,"src":"497:90:17","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":7074,"nodeType":"Block","src":"750:27:17","statements":[{"expression":{"hexValue":"31","id":7072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"767:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"},"functionReturnParameters":7071,"id":7073,"nodeType":"Return","src":"760:10:17"}]},"documentation":{"id":7067,"nodeType":"StructuredDocumentation","src":"597:93:17","text":" @dev Get the forwarder version\n @return The version of the forwarder"},"functionSelector":"54fd4d50","id":7075,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"704:7:17","nodeType":"FunctionDefinition","parameters":{"id":7068,"nodeType":"ParameterList","parameters":[],"src":"711:2:17"},"returnParameters":{"id":7071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7075,"src":"735:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7069,"name":"string","nodeType":"ElementaryTypeName","src":"735:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"734:15:17"},"scope":7076,"src":"695:82:17","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":7077,"src":"298:481:17","usedErrors":[227,234,239,246,978,981,1000,1124,1126],"usedEvents":[4,220]}],"src":"32:748:17"},"id":17}},"contracts":{"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}"}},"@openzeppelin/contracts/metatx/ERC2771Context.sol":{"ERC2771Context":{"abi":[{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"trustedForwarder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isTrustedForwarder(address)":"572b6c05","trustedForwarder()":"7da0a877"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Context variant with ERC-2771 support. WARNING: Avoid using this pattern in contracts that rely in a specific calldata length as they'll be affected by any forwarder whose `msg.data` is suffixed with the `from` address according to the ERC-2771 specification adding the address size in bytes (20) to the calldata size. An example of an unexpected behavior could be an unintended fallback (or another function) invocation while trying to invoke the `receive` function only accessible if `msg.data.length == 0`. WARNING: The usage of `delegatecall` in this contract is dangerous and may result in context corruption. Any forwarded request to this contract triggering a `delegatecall` to itself will result in an invalid {_msgSender} recovery.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"isTrustedForwarder(address)\":{\"details\":\"Indicates whether any particular address is the trusted forwarder.\"},\"trustedForwarder()\":{\"details\":\"Returns the address of the trusted forwarder.\"}},\"stateVariables\":{\"_trustedForwarder\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":\"ERC2771Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x345acfb731203002ef98916d5a222339709db0ad44dc4a389e7f1ce4088ce59b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1dcd7e6c8ca2b402e232d2e44666c282a894c475bca15532464a47513222e5d\",\"dweb:/ipfs/QmbfGjwHHCUxHtkCECoisxr7JDiZXSFtrHNizwwKzNNSHJ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol":{"ERC2771Forwarder":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint48","name":"deadline","type":"uint48"}],"name":"ERC2771ForwarderExpiredRequest","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"from","type":"address"}],"name":"ERC2771ForwarderInvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestedValue","type":"uint256"},{"internalType":"uint256","name":"msgValue","type":"uint256"}],"name":"ERC2771ForwarderMismatchedValue","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"address","name":"forwarder","type":"address"}],"name":"ERC2771UntrustfulTarget","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"ExecutedForwardRequest","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint48","name":"deadline","type":"uint48"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct ERC2771Forwarder.ForwardRequestData","name":"request","type":"tuple"}],"name":"execute","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint48","name":"deadline","type":"uint48"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct ERC2771Forwarder.ForwardRequestData[]","name":"requests","type":"tuple[]"},{"internalType":"address payable","name":"refundReceiver","type":"address"}],"name":"executeBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint48","name":"deadline","type":"uint48"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct ERC2771Forwarder.ForwardRequestData","name":"request","type":"tuple"}],"name":"verify","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_257":{"entryPoint":null,"id":257,"parameterSlots":1,"returnSlots":0},"@_3298":{"entryPoint":null,"id":3298,"parameterSlots":2,"returnSlots":0},"@_buildDomainSeparator_3345":{"entryPoint":null,"id":3345,"parameterSlots":0,"returnSlots":1},"@getStringSlot_1428":{"entryPoint":null,"id":1428,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1268":{"entryPoint":267,"id":1268,"parameterSlots":2,"returnSlots":1},"@toShortString_1170":{"entryPoint":324,"id":1170,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":460,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":991,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":704,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":1044,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":787,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":422,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":644,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":400,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5086:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:18"},"nodeType":"YulFunctionCall","src":"66:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:18"},"nodeType":"YulFunctionCall","src":"56:31:18"},"nodeType":"YulExpressionStatement","src":"56:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:18"},"nodeType":"YulFunctionCall","src":"96:15:18"},"nodeType":"YulExpressionStatement","src":"96:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:18"},"nodeType":"YulFunctionCall","src":"120:15:18"},"nodeType":"YulExpressionStatement","src":"120:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:18"},{"body":{"nodeType":"YulBlock","src":"212:184:18","statements":[{"nodeType":"YulVariableDeclaration","src":"222:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"231:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"226:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"291:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"316:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"321:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"312:3:18"},"nodeType":"YulFunctionCall","src":"312:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"335:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"340:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"331:3:18"},"nodeType":"YulFunctionCall","src":"331:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"325:5:18"},"nodeType":"YulFunctionCall","src":"325:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"305:6:18"},"nodeType":"YulFunctionCall","src":"305:39:18"},"nodeType":"YulExpressionStatement","src":"305:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"252:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"255:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"249:2:18"},"nodeType":"YulFunctionCall","src":"249:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"263:19:18","statements":[{"nodeType":"YulAssignment","src":"265:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"274:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"277:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"270:3:18"},"nodeType":"YulFunctionCall","src":"270:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"265:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"245:3:18","statements":[]},"src":"241:113:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"374:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"370:3:18"},"nodeType":"YulFunctionCall","src":"370:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"388:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"363:6:18"},"nodeType":"YulFunctionCall","src":"363:27:18"},"nodeType":"YulExpressionStatement","src":"363:27:18"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"190:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"195:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"200:6:18","type":""}],"src":"146:250:18"},{"body":{"nodeType":"YulBlock","src":"492:806:18","statements":[{"body":{"nodeType":"YulBlock","src":"538:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"547:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"550:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"540:6:18"},"nodeType":"YulFunctionCall","src":"540:12:18"},"nodeType":"YulExpressionStatement","src":"540:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"513:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"522:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"509:3:18"},"nodeType":"YulFunctionCall","src":"509:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"534:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"505:3:18"},"nodeType":"YulFunctionCall","src":"505:32:18"},"nodeType":"YulIf","src":"502:52:18"},{"nodeType":"YulVariableDeclaration","src":"563:30:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"583:9:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"577:5:18"},"nodeType":"YulFunctionCall","src":"577:16:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"567:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"602:28:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"620:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"624:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"616:3:18"},"nodeType":"YulFunctionCall","src":"616:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"628:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"612:3:18"},"nodeType":"YulFunctionCall","src":"612:18:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"606:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"657:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"666:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"669:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"659:6:18"},"nodeType":"YulFunctionCall","src":"659:12:18"},"nodeType":"YulExpressionStatement","src":"659:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"645:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"653:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"642:2:18"},"nodeType":"YulFunctionCall","src":"642:14:18"},"nodeType":"YulIf","src":"639:34:18"},{"nodeType":"YulVariableDeclaration","src":"682:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"696:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"707:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"692:3:18"},"nodeType":"YulFunctionCall","src":"692:22:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"686:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"762:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"771:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"774:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"764:6:18"},"nodeType":"YulFunctionCall","src":"764:12:18"},"nodeType":"YulExpressionStatement","src":"764:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"741:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"745:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"737:3:18"},"nodeType":"YulFunctionCall","src":"737:13:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"752:7:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"733:3:18"},"nodeType":"YulFunctionCall","src":"733:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"726:6:18"},"nodeType":"YulFunctionCall","src":"726:35:18"},"nodeType":"YulIf","src":"723:55:18"},{"nodeType":"YulVariableDeclaration","src":"787:19:18","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"803:2:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"797:5:18"},"nodeType":"YulFunctionCall","src":"797:9:18"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"791:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"829:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"831:16:18"},"nodeType":"YulFunctionCall","src":"831:18:18"},"nodeType":"YulExpressionStatement","src":"831:18:18"}]},"condition":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"821:2:18"},{"name":"_1","nodeType":"YulIdentifier","src":"825:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"818:2:18"},"nodeType":"YulFunctionCall","src":"818:10:18"},"nodeType":"YulIf","src":"815:36:18"},{"nodeType":"YulVariableDeclaration","src":"860:17:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"874:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"870:3:18"},"nodeType":"YulFunctionCall","src":"870:7:18"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"864:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"886:23:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"906:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"900:5:18"},"nodeType":"YulFunctionCall","src":"900:9:18"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"890:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"918:71:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"940:6:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"964:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"968:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"960:3:18"},"nodeType":"YulFunctionCall","src":"960:13:18"},{"name":"_4","nodeType":"YulIdentifier","src":"975:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"956:3:18"},"nodeType":"YulFunctionCall","src":"956:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"980:2:18","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"952:3:18"},"nodeType":"YulFunctionCall","src":"952:31:18"},{"name":"_4","nodeType":"YulIdentifier","src":"985:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"948:3:18"},"nodeType":"YulFunctionCall","src":"948:40:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"936:3:18"},"nodeType":"YulFunctionCall","src":"936:53:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"922:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1048:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1050:16:18"},"nodeType":"YulFunctionCall","src":"1050:18:18"},"nodeType":"YulExpressionStatement","src":"1050:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1007:10:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1019:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1004:2:18"},"nodeType":"YulFunctionCall","src":"1004:18:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1027:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1039:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1024:2:18"},"nodeType":"YulFunctionCall","src":"1024:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1001:2:18"},"nodeType":"YulFunctionCall","src":"1001:46:18"},"nodeType":"YulIf","src":"998:72:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1086:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1090:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1079:6:18"},"nodeType":"YulFunctionCall","src":"1079:22:18"},"nodeType":"YulExpressionStatement","src":"1079:22:18"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1117:6:18"},{"name":"_3","nodeType":"YulIdentifier","src":"1125:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1110:6:18"},"nodeType":"YulFunctionCall","src":"1110:18:18"},"nodeType":"YulExpressionStatement","src":"1110:18:18"},{"body":{"nodeType":"YulBlock","src":"1174:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1186:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1176:6:18"},"nodeType":"YulFunctionCall","src":"1176:12:18"},"nodeType":"YulExpressionStatement","src":"1176:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1151:2:18"},{"name":"_3","nodeType":"YulIdentifier","src":"1155:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:18"},"nodeType":"YulFunctionCall","src":"1147:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1160:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1143:3:18"},"nodeType":"YulFunctionCall","src":"1143:20:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1165:7:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1140:2:18"},"nodeType":"YulFunctionCall","src":"1140:33:18"},"nodeType":"YulIf","src":"1137:53:18"},{"expression":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"1238:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"1242:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1234:3:18"},"nodeType":"YulFunctionCall","src":"1234:11:18"},{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1251:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1259:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1247:3:18"},"nodeType":"YulFunctionCall","src":"1247:15:18"},{"name":"_3","nodeType":"YulIdentifier","src":"1264:2:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"1199:34:18"},"nodeType":"YulFunctionCall","src":"1199:68:18"},"nodeType":"YulExpressionStatement","src":"1199:68:18"},{"nodeType":"YulAssignment","src":"1276:16:18","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1286:6:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1276:6:18"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"458:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"469:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"481:6:18","type":""}],"src":"401:897:18"},{"body":{"nodeType":"YulBlock","src":"1358:325:18","statements":[{"nodeType":"YulAssignment","src":"1368:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1382:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1385:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1378:3:18"},"nodeType":"YulFunctionCall","src":"1378:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1368:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"1399:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1429:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"1435:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1425:3:18"},"nodeType":"YulFunctionCall","src":"1425:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1403:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1476:31:18","statements":[{"nodeType":"YulAssignment","src":"1478:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1492:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1500:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1488:3:18"},"nodeType":"YulFunctionCall","src":"1488:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1478:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1456:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1449:6:18"},"nodeType":"YulFunctionCall","src":"1449:26:18"},"nodeType":"YulIf","src":"1446:61:18"},{"body":{"nodeType":"YulBlock","src":"1566:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1587:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1594:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1599:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1590:3:18"},"nodeType":"YulFunctionCall","src":"1590:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1580:6:18"},"nodeType":"YulFunctionCall","src":"1580:31:18"},"nodeType":"YulExpressionStatement","src":"1580:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1631:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1634:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1624:6:18"},"nodeType":"YulFunctionCall","src":"1624:15:18"},"nodeType":"YulExpressionStatement","src":"1624:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:18"},"nodeType":"YulFunctionCall","src":"1652:15:18"},"nodeType":"YulExpressionStatement","src":"1652:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1522:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1545:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1553:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1542:2:18"},"nodeType":"YulFunctionCall","src":"1542:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1519:2:18"},"nodeType":"YulFunctionCall","src":"1519:38:18"},"nodeType":"YulIf","src":"1516:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1338:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:18","type":""}],"src":"1303:380:18"},{"body":{"nodeType":"YulBlock","src":"1744:65:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1761:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1764:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1754:6:18"},"nodeType":"YulFunctionCall","src":"1754:14:18"},"nodeType":"YulExpressionStatement","src":"1754:14:18"},{"nodeType":"YulAssignment","src":"1777:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1795:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1798:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1785:9:18"},"nodeType":"YulFunctionCall","src":"1785:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1777:4:18"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1727:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1735:4:18","type":""}],"src":"1688:121:18"},{"body":{"nodeType":"YulBlock","src":"1895:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"1928:425:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1942:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1952:1:18","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1946:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"1973:2:18"},{"name":"array","nodeType":"YulIdentifier","src":"1977:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1966:6:18"},"nodeType":"YulFunctionCall","src":"1966:17:18"},"nodeType":"YulExpressionStatement","src":"1966:17:18"},{"nodeType":"YulVariableDeclaration","src":"1996:31:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2018:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"2022:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2008:9:18"},"nodeType":"YulFunctionCall","src":"2008:19:18"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2000:4:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2040:57:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2063:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2073:1:18","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2080:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"2092:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2076:3:18"},"nodeType":"YulFunctionCall","src":"2076:19:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2069:3:18"},"nodeType":"YulFunctionCall","src":"2069:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2059:3:18"},"nodeType":"YulFunctionCall","src":"2059:38:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2044:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2134:23:18","statements":[{"nodeType":"YulAssignment","src":"2136:19:18","value":{"name":"data","nodeType":"YulIdentifier","src":"2151:4:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2136:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2116:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"2128:4:18","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2113:2:18"},"nodeType":"YulFunctionCall","src":"2113:20:18"},"nodeType":"YulIf","src":"2110:47:18"},{"nodeType":"YulVariableDeclaration","src":"2170:41:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2184:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2194:1:18","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2201:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"2206:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2197:3:18"},"nodeType":"YulFunctionCall","src":"2197:12:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2190:3:18"},"nodeType":"YulFunctionCall","src":"2190:20:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2180:3:18"},"nodeType":"YulFunctionCall","src":"2180:31:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2174:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2224:24:18","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2237:11:18"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2228:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2322:21:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2331:5:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2338:2:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2324:6:18"},"nodeType":"YulFunctionCall","src":"2324:17:18"},"nodeType":"YulExpressionStatement","src":"2324:17:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2272:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"2279:2:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2269:2:18"},"nodeType":"YulFunctionCall","src":"2269:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2283:26:18","statements":[{"nodeType":"YulAssignment","src":"2285:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2298:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2305:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2294:3:18"},"nodeType":"YulFunctionCall","src":"2294:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2285:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"2265:3:18","statements":[]},"src":"2261:82:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1911:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1916:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1908:2:18"},"nodeType":"YulFunctionCall","src":"1908:11:18"},"nodeType":"YulIf","src":"1905:448:18"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"1867:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"1874:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"1879:10:18","type":""}],"src":"1814:545:18"},{"body":{"nodeType":"YulBlock","src":"2449:81:18","statements":[{"nodeType":"YulAssignment","src":"2459:65:18","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2474:4:18"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2492:1:18","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2495:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2488:3:18"},"nodeType":"YulFunctionCall","src":"2488:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2505:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2501:3:18"},"nodeType":"YulFunctionCall","src":"2501:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2484:3:18"},"nodeType":"YulFunctionCall","src":"2484:24:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2480:3:18"},"nodeType":"YulFunctionCall","src":"2480:29:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2470:3:18"},"nodeType":"YulFunctionCall","src":"2470:40:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2516:1:18","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2519:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2512:3:18"},"nodeType":"YulFunctionCall","src":"2512:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2467:2:18"},"nodeType":"YulFunctionCall","src":"2467:57:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2459:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2426:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"2432:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2440:4:18","type":""}],"src":"2364:166:18"},{"body":{"nodeType":"YulBlock","src":"2631:1256:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2641:24:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2661:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2655:5:18"},"nodeType":"YulFunctionCall","src":"2655:10:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2645:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2708:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2710:16:18"},"nodeType":"YulFunctionCall","src":"2710:18:18"},"nodeType":"YulExpressionStatement","src":"2710:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2680:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2696:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"2700:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2692:3:18"},"nodeType":"YulFunctionCall","src":"2692:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"2704:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2688:3:18"},"nodeType":"YulFunctionCall","src":"2688:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2677:2:18"},"nodeType":"YulFunctionCall","src":"2677:30:18"},"nodeType":"YulIf","src":"2674:56:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2783:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2821:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2815:5:18"},"nodeType":"YulFunctionCall","src":"2815:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"2789:25:18"},"nodeType":"YulFunctionCall","src":"2789:38:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"2829:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"2739:43:18"},"nodeType":"YulFunctionCall","src":"2739:97:18"},"nodeType":"YulExpressionStatement","src":"2739:97:18"},{"nodeType":"YulVariableDeclaration","src":"2845:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2862:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"2849:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2872:23:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2891:4:18","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"2876:11:18","type":""}]},{"nodeType":"YulAssignment","src":"2904:24:18","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2917:11:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2904:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"2974:656:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2988:35:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3007:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3019:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3015:3:18"},"nodeType":"YulFunctionCall","src":"3015:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3003:3:18"},"nodeType":"YulFunctionCall","src":"3003:20:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"2992:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3036:49:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3080:4:18"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3050:29:18"},"nodeType":"YulFunctionCall","src":"3050:35:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3040:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3098:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3107:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3102:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3185:172:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3210:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3228:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3233:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3224:3:18"},"nodeType":"YulFunctionCall","src":"3224:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3218:5:18"},"nodeType":"YulFunctionCall","src":"3218:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3203:6:18"},"nodeType":"YulFunctionCall","src":"3203:42:18"},"nodeType":"YulExpressionStatement","src":"3203:42:18"},{"nodeType":"YulAssignment","src":"3262:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3276:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3284:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3272:3:18"},"nodeType":"YulFunctionCall","src":"3272:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3262:6:18"}]},{"nodeType":"YulAssignment","src":"3303:40:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3320:9:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3331:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3316:3:18"},"nodeType":"YulFunctionCall","src":"3316:27:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3303:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3132:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3135:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3129:2:18"},"nodeType":"YulFunctionCall","src":"3129:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3144:28:18","statements":[{"nodeType":"YulAssignment","src":"3146:24:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3155:1:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3158:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3151:3:18"},"nodeType":"YulFunctionCall","src":"3151:19:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3146:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"3125:3:18","statements":[]},"src":"3121:236:18"},{"body":{"nodeType":"YulBlock","src":"3405:166:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3423:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3450:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3455:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3446:3:18"},"nodeType":"YulFunctionCall","src":"3446:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3440:5:18"},"nodeType":"YulFunctionCall","src":"3440:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3427:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3490:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3502:9:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3529:1:18","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3532:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3525:3:18"},"nodeType":"YulFunctionCall","src":"3525:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"3541:3:18","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3521:3:18"},"nodeType":"YulFunctionCall","src":"3521:24:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3551:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3547:3:18"},"nodeType":"YulFunctionCall","src":"3547:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3517:3:18"},"nodeType":"YulFunctionCall","src":"3517:37:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3513:3:18"},"nodeType":"YulFunctionCall","src":"3513:42:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3498:3:18"},"nodeType":"YulFunctionCall","src":"3498:58:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3483:6:18"},"nodeType":"YulFunctionCall","src":"3483:74:18"},"nodeType":"YulExpressionStatement","src":"3483:74:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3376:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"3385:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3373:2:18"},"nodeType":"YulFunctionCall","src":"3373:19:18"},"nodeType":"YulIf","src":"3370:201:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3591:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3605:1:18","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3608:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3601:3:18"},"nodeType":"YulFunctionCall","src":"3601:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"3617:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3597:3:18"},"nodeType":"YulFunctionCall","src":"3597:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3584:6:18"},"nodeType":"YulFunctionCall","src":"3584:36:18"},"nodeType":"YulExpressionStatement","src":"3584:36:18"}]},"nodeType":"YulCase","src":"2967:663:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2972:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3647:234:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3661:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3674:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3665:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3710:67:18","statements":[{"nodeType":"YulAssignment","src":"3728:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3747:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3752:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3743:3:18"},"nodeType":"YulFunctionCall","src":"3743:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3737:5:18"},"nodeType":"YulFunctionCall","src":"3737:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3728:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3691:6:18"},"nodeType":"YulIf","src":"3688:89:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3797:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3856:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"3863:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"3803:52:18"},"nodeType":"YulFunctionCall","src":"3803:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3790:6:18"},"nodeType":"YulFunctionCall","src":"3790:81:18"},"nodeType":"YulExpressionStatement","src":"3790:81:18"}]},"nodeType":"YulCase","src":"3639:242:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2947:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2955:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2944:2:18"},"nodeType":"YulFunctionCall","src":"2944:14:18"},"nodeType":"YulSwitch","src":"2937:944:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2616:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"2622:3:18","type":""}],"src":"2535:1352:18"},{"body":{"nodeType":"YulBlock","src":"4105:276:18","statements":[{"nodeType":"YulAssignment","src":"4115:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4127:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4138:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4123:3:18"},"nodeType":"YulFunctionCall","src":"4123:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4115:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"4169:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4151:6:18"},"nodeType":"YulFunctionCall","src":"4151:25:18"},"nodeType":"YulExpressionStatement","src":"4151:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4196:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4207:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4192:3:18"},"nodeType":"YulFunctionCall","src":"4192:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"4212:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4185:6:18"},"nodeType":"YulFunctionCall","src":"4185:34:18"},"nodeType":"YulExpressionStatement","src":"4185:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4239:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4250:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4235:3:18"},"nodeType":"YulFunctionCall","src":"4235:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"4255:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4228:6:18"},"nodeType":"YulFunctionCall","src":"4228:34:18"},"nodeType":"YulExpressionStatement","src":"4228:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4282:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4293:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4278:3:18"},"nodeType":"YulFunctionCall","src":"4278:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"4298:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4271:6:18"},"nodeType":"YulFunctionCall","src":"4271:34:18"},"nodeType":"YulExpressionStatement","src":"4271:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4325:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4336:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4321:3:18"},"nodeType":"YulFunctionCall","src":"4321:19:18"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4346:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4362:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4367:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4358:3:18"},"nodeType":"YulFunctionCall","src":"4358:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"4371:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4354:3:18"},"nodeType":"YulFunctionCall","src":"4354:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4342:3:18"},"nodeType":"YulFunctionCall","src":"4342:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4314:6:18"},"nodeType":"YulFunctionCall","src":"4314:61:18"},"nodeType":"YulExpressionStatement","src":"4314:61:18"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4042:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4053:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4061:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4069:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4077:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4085:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4096:4:18","type":""}],"src":"3892:489:18"},{"body":{"nodeType":"YulBlock","src":"4507:275:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4524:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4517:6:18"},"nodeType":"YulFunctionCall","src":"4517:21:18"},"nodeType":"YulExpressionStatement","src":"4517:21:18"},{"nodeType":"YulVariableDeclaration","src":"4547:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4567:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4561:5:18"},"nodeType":"YulFunctionCall","src":"4561:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4551:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4594:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4605:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4590:3:18"},"nodeType":"YulFunctionCall","src":"4590:18:18"},{"name":"length","nodeType":"YulIdentifier","src":"4610:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4583:6:18"},"nodeType":"YulFunctionCall","src":"4583:34:18"},"nodeType":"YulExpressionStatement","src":"4583:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4665:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4673:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4661:3:18"},"nodeType":"YulFunctionCall","src":"4661:15:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4682:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4693:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4678:3:18"},"nodeType":"YulFunctionCall","src":"4678:18:18"},{"name":"length","nodeType":"YulIdentifier","src":"4698:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4626:34:18"},"nodeType":"YulFunctionCall","src":"4626:79:18"},"nodeType":"YulExpressionStatement","src":"4626:79:18"},{"nodeType":"YulAssignment","src":"4714:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4730:9:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4749:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4757:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:18"},"nodeType":"YulFunctionCall","src":"4745:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4766:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4762:3:18"},"nodeType":"YulFunctionCall","src":"4762:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4741:3:18"},"nodeType":"YulFunctionCall","src":"4741:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4726:3:18"},"nodeType":"YulFunctionCall","src":"4726:45:18"},{"kind":"number","nodeType":"YulLiteral","src":"4773:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4722:3:18"},"nodeType":"YulFunctionCall","src":"4722:54:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4714:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4476:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4487:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4498:4:18","type":""}],"src":"4386:396:18"},{"body":{"nodeType":"YulBlock","src":"4881:203:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4891:26:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4911:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4905:5:18"},"nodeType":"YulFunctionCall","src":"4905:12:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4895:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4926:32:18","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4945:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"4952:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4941:3:18"},"nodeType":"YulFunctionCall","src":"4941:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4935:5:18"},"nodeType":"YulFunctionCall","src":"4935:23:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4926:5:18"}]},{"body":{"nodeType":"YulBlock","src":"4995:83:18","statements":[{"nodeType":"YulAssignment","src":"5009:59:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5022:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5037:1:18","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5044:4:18","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"5050:6:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5040:3:18"},"nodeType":"YulFunctionCall","src":"5040:17:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5033:3:18"},"nodeType":"YulFunctionCall","src":"5033:25:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5064:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5060:3:18"},"nodeType":"YulFunctionCall","src":"5060:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5029:3:18"},"nodeType":"YulFunctionCall","src":"5029:38:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5018:3:18"},"nodeType":"YulFunctionCall","src":"5018:50:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5009:5:18"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4973:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4981:4:18","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4970:2:18"},"nodeType":"YulFunctionCall","src":"4970:16:18"},"nodeType":"YulIf","src":"4967:111:18"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"4861:5:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4871:5:18","type":""}],"src":"4787:297:18"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x144B CODESIZE SUB DUP1 PUSH3 0x144B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x1CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 SWAP1 PUSH3 0x5C DUP3 PUSH1 0x0 PUSH3 0x10B JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0x6D DUP2 PUSH1 0x1 PUSH3 0x10B JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0xFB PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH3 0x439 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x12B JUMPI PUSH3 0x123 DUP4 PUSH3 0x144 JUMP JUMPDEST SWAP1 POP PUSH3 0x13E JUMP JUMPDEST DUP2 PUSH3 0x138 DUP5 DUP3 PUSH3 0x313 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x17B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x172 SWAP2 SWAP1 PUSH3 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH3 0x188 DUP3 PUSH3 0x414 JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x1C3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x1A9 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x221 JUMPI PUSH3 0x221 PUSH3 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x24C JUMPI PUSH3 0x24C PUSH3 0x190 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x279 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x1A6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x299 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2BA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x30E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2E9 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x30A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2F5 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x32F JUMPI PUSH3 0x32F PUSH3 0x190 JUMP JUMPDEST PUSH3 0x347 DUP2 PUSH3 0x340 DUP5 SLOAD PUSH3 0x284 JUMP JUMPDEST DUP5 PUSH3 0x2C0 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x37F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x366 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x30A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3B0 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x38F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3CF JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x400 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x1A6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x2BA JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0xFB7 PUSH3 0x494 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x3B8 ADD MSTORE PUSH1 0x0 PUSH2 0x386 ADD MSTORE PUSH1 0x0 PUSH2 0xACD ADD MSTORE PUSH1 0x0 PUSH2 0xAA5 ADD MSTORE PUSH1 0x0 PUSH2 0xA00 ADD MSTORE PUSH1 0x0 PUSH2 0xA2A ADD MSTORE PUSH1 0x0 PUSH2 0xA54 ADD MSTORE PUSH2 0xFB7 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19D8D38C EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xCCF96B4A EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xDF905CAF EQ PUSH2 0x105 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x9F CALLDATASIZE PUSH1 0x4 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x103 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x127 DUP6 PUSH2 0x2FA JUMP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP1 ISZERO PUSH2 0x138 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x141 JUMPI POP DUP1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x15E PUSH2 0x37F JUMP JUMPDEST PUSH2 0x166 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x258 JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x1BA JUMPI PUSH2 0x1BA PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH2 0x1DA SWAP1 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH2 0xE37 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH2 0x20B DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x1F3 JUMPI PUSH2 0x1F3 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST DUP7 PUSH2 0x3DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x247 JUMPI DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x224 JUMPI PUSH2 0x224 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH2 0x244 SWAP1 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH2 0xE37 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x251 DUP2 PUSH2 0xE4A JUMP JUMPDEST SWAP1 POP PUSH2 0x1A0 JUMP JUMPDEST POP CALLVALUE DUP3 EQ PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70647F79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLVALUE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x297 JUMPI PUSH2 0x297 DUP5 DUP3 PUSH2 0x5C1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x40 ADD CALLDATALOAD CALLVALUE EQ PUSH2 0x2CF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x70647F79 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 ADD CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE CALLVALUE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x27E JUMP JUMPDEST PUSH2 0x2DA DUP2 PUSH1 0x1 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x2F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x30C DUP8 PUSH2 0x657 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x329 PUSH2 0x324 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0xC6C JUMP JUMPDEST PUSH2 0x7CC JUMP JUMPDEST TIMESTAMP PUSH2 0x33A PUSH1 0xA0 DUP11 ADD PUSH1 0x80 DUP12 ADD PUSH2 0xE63 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND LT ISZERO DUP4 DUP1 ISZERO PUSH2 0x36E JUMPI POP PUSH2 0x359 PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3AC PUSH32 0x0 PUSH1 0x0 PUSH2 0x849 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3AC PUSH32 0x0 PUSH1 0x1 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3EF DUP8 PUSH2 0x2FA JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP6 ISZERO PUSH2 0x4B5 JUMPI DUP4 PUSH2 0x43D JUMPI PUSH2 0x412 PUSH1 0x40 DUP9 ADD PUSH1 0x20 DUP10 ADD PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD2650CD1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x27E JUMP JUMPDEST DUP3 PUSH2 0x476 JUMPI PUSH2 0x452 PUSH1 0xA0 DUP9 ADD PUSH1 0x80 DUP10 ADD PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A777AC5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x27E JUMP JUMPDEST DUP2 PUSH2 0x4B5 JUMPI DUP1 PUSH2 0x489 PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6422D02B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x27E JUMP JUMPDEST DUP4 DUP1 ISZERO PUSH2 0x4BF JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x4C8 JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH1 0x0 PUSH2 0x507 PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0xC6C JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD PUSH1 0x0 PUSH2 0x51D PUSH1 0xA0 DUP14 ADD DUP14 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x52A PUSH1 0x20 DUP16 ADD DUP16 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x20 DUP6 ADD DUP7 DUP9 DUP11 CALL SWAP11 POP GAS SWAP1 POP PUSH2 0x56B DUP2 DUP15 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE DUP13 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH32 0x842FB24A83793558587A3DAB2BE7674DA4A51D09C5542D6DD354E5D0EA70813C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x27E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x63E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x651 JUMPI PUSH2 0x651 DUP2 PUSH2 0x912 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x7A6 PUSH2 0x66C PUSH1 0xC0 DUP8 ADD DUP8 PUSH2 0xE8B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x7A0 SWAP3 POP PUSH32 0x7F96328B83274EBC7C1CF4F7A3ABDA602B51A78B7FA1D86A2CE353D75E587CAC SWAP2 POP PUSH2 0x6D4 SWAP1 POP PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0xC6C JUMP JUMPDEST PUSH2 0x6E4 PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 DUP12 ADD CALLDATALOAD PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH2 0x6FE PUSH2 0x9F PUSH1 0x20 DUP16 ADD DUP16 PUSH2 0xC6C JUMP JUMPDEST DUP14 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x711 SWAP2 SWAP1 PUSH2 0xE63 JUMP JUMPDEST DUP15 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x721 SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72F SWAP3 SWAP2 SWAP1 PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND SWAP1 DUP3 ADD MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH6 0xFFFFFFFFFFFF AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x93A JUMP JUMPDEST SWAP1 PUSH2 0x967 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7C0 PUSH2 0xF0F JUMP JUMPDEST EQ SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x572B6C05 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 DUP10 GAS STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x833 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x83F JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x863 JUMPI PUSH2 0x85C DUP4 PUSH2 0x9B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F0 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x86F SWAP1 PUSH2 0xF25 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x89B SWAP1 PUSH2 0xF25 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x905 PUSH1 0x3F PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH2 0xF5F JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x90E JUMPI INVALID JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x921 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F0 PUSH2 0x947 PUSH2 0x9F3 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x9A1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x993 DUP9 DUP3 DUP6 DUP6 PUSH2 0xB1E JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x9AD JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9C1 DUP4 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xA4C JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xA76 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3AC PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xB59 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBD9 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xBE3 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0xE0 DUP2 DUP6 SUB SLT ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC50 DUP2 PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCAF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC93 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0xCEF PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0xC89 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xD01 DUP2 DUP11 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD53 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD37 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xDB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP POP DUP5 ADD CALLDATALOAD PUSH2 0xDE0 DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0xDE NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xE17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8F0 JUMPI PUSH2 0x8F0 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE5C JUMPI PUSH2 0xE5C PUSH2 0xE21 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xEA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF39 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF59 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF7C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP BALANCE 0xBB 0x21 CREATE2 PUSH27 0x51C82BC50BD42CFBD7016860774846A7E0B0AC46B3E3BBC5CE4364 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"2778:14223:2:-:0;;;4360:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3428:431:12;;;;;;;;;;;;-1:-1:-1;;;3428:431:12;;;;4399:4:2;;3501:45:12;4399:4:2;-1:-1:-1;3501:30:12;:45::i;:::-;3493:53;;3567:51;:7;3601:16;3567:33;:51::i;:::-;3556:62;;3642:22;;;;;;;;;;3628:36;;3691:25;;;;;;3674:42;;3744:13;3727:30;;3792:23;4326:11;;4339:14;;4304:80;;;2079:95;4304:80;;;4151:25:18;4192:18;;;4185:34;;;;4235:18;;;4228:34;4355:13:12;4278:18:18;;;4271:34;4378:4:12;4321:19:18;;;4314:61;4268:7:12;;4123:19:18;;4304:80:12;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;3792:23;3767:48;;-1:-1:-1;;3847:4:12;3825:27;;-1:-1:-1;2778:14223:2;;2887:340:8;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:8;;-1:-1:-1;3006:215:8;2887:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:8;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:8:o;14:127:18:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:18;370:16;;363:27;146:250::o;401:897::-;481:6;534:2;522:9;513:7;509:23;505:32;502:52;;;550:1;547;540:12;502:52;577:16;;-1:-1:-1;;;;;642:14:18;;;639:34;;;669:1;666;659:12;639:34;707:6;696:9;692:22;682:32;;752:7;745:4;741:2;737:13;733:27;723:55;;774:1;771;764:12;723:55;803:2;797:9;825:2;821;818:10;815:36;;;831:18;;:::i;:::-;906:2;900:9;874:2;960:13;;-1:-1:-1;;956:22:18;;;980:2;952:31;948:40;936:53;;;1004:18;;;1024:22;;;1001:46;998:72;;;1050:18;;:::i;:::-;1090:10;1086:2;1079:22;1125:2;1117:6;1110:18;1165:7;1160:2;1155;1151;1147:11;1143:20;1140:33;1137:53;;;1186:1;1183;1176:12;1137:53;1199:68;1264:2;1259;1251:6;1247:15;1242:2;1238;1234:11;1199:68;:::i;:::-;1286:6;401:897;-1:-1:-1;;;;;;;401:897:18:o;1303:380::-;1382:1;1378:12;;;;1425;;;1446:61;;1500:4;1492:6;1488:17;1478:27;;1446:61;1553:2;1545:6;1542:14;1522:18;1519:38;1516:161;;1599:10;1594:3;1590:20;1587:1;1580:31;1634:4;1631:1;1624:15;1662:4;1659:1;1652:15;1516:161;;1303:380;;;:::o;1814:545::-;1916:2;1911:3;1908:11;1905:448;;;1952:1;1977:5;1973:2;1966:17;2022:4;2018:2;2008:19;2092:2;2080:10;2076:19;2073:1;2069:27;2063:4;2059:38;2128:4;2116:10;2113:20;2110:47;;;-1:-1:-1;2151:4:18;2110:47;2206:2;2201:3;2197:12;2194:1;2190:20;2184:4;2180:31;2170:41;;2261:82;2279:2;2272:5;2269:13;2261:82;;;2324:17;;;2305:1;2294:13;2261:82;;;2265:3;;;1905:448;1814:545;;;:::o;2535:1352::-;2655:10;;-1:-1:-1;;;;;2677:30:18;;2674:56;;;2710:18;;:::i;:::-;2739:97;2829:6;2789:38;2821:4;2815:11;2789:38;:::i;:::-;2783:4;2739:97;:::i;:::-;2891:4;;2955:2;2944:14;;2972:1;2967:663;;;;3674:1;3691:6;3688:89;;;-1:-1:-1;3743:19:18;;;3737:26;3688:89;-1:-1:-1;;2492:1:18;2488:11;;;2484:24;2480:29;2470:40;2516:1;2512:11;;;2467:57;3790:81;;2937:944;;2967:663;1761:1;1754:14;;;1798:4;1785:18;;-1:-1:-1;;3003:20:18;;;3121:236;3135:7;3132:1;3129:14;3121:236;;;3224:19;;;3218:26;3203:42;;3316:27;;;;3284:1;3272:14;;;;3151:19;;3121:236;;;3125:3;3385:6;3376:7;3373:19;3370:201;;;3446:19;;;3440:26;-1:-1:-1;;3529:1:18;3525:14;;;3541:3;3521:24;3517:37;3513:42;3498:58;3483:74;;3370:201;-1:-1:-1;;;;;3617:1:18;3601:14;;;3597:22;3584:36;;-1:-1:-1;2535:1352:18:o;4386:396::-;4535:2;4524:9;4517:21;4498:4;4567:6;4561:13;4610:6;4605:2;4594:9;4590:18;4583:34;4626:79;4698:6;4693:2;4682:9;4678:18;4673:2;4665:6;4661:15;4626:79;:::i;:::-;4766:2;4745:15;-1:-1:-1;;4741:29:18;4726:45;;;;4773:2;4722:54;;4386:396;-1:-1:-1;;4386:396:18:o;4787:297::-;4905:12;;4952:4;4941:16;;;4935:23;;4905:12;4970:16;;4967:111;;;-1:-1:-1;;5044:4:18;5040:17;;;;5037:1;5033:25;5029:38;5018:50;;4787:297;-1:-1:-1;4787:297:18:o;:::-;2778:14223:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_EIP712Name_3415":{"entryPoint":895,"id":3415,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3427":{"entryPoint":945,"id":3427,"parameterSlots":0,"returnSlots":1},"@_buildDomainSeparator_3345":{"entryPoint":null,"id":3345,"parameterSlots":0,"returnSlots":1},"@_checkForwardedGas_677":{"entryPoint":2294,"id":677,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_3324":{"entryPoint":2547,"id":3324,"parameterSlots":0,"returnSlots":1},"@_execute_616":{"entryPoint":990,"id":616,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_3361":{"entryPoint":2362,"id":3361,"parameterSlots":1,"returnSlots":1},"@_isTrustedByTarget_658":{"entryPoint":1996,"id":658,"parameterSlots":1,"returnSlots":1},"@_recoverForwardRequestSigner_504":{"entryPoint":1623,"id":504,"parameterSlots":1,"returnSlots":2},"@_revert_937":{"entryPoint":2322,"id":937,"parameterSlots":1,"returnSlots":0},"@_useNonce_1032":{"entryPoint":null,"id":1032,"parameterSlots":1,"returnSlots":1},"@_validate_448":{"entryPoint":762,"id":448,"parameterSlots":1,"returnSlots":4},"@byteLength_1228":{"entryPoint":3053,"id":1228,"parameterSlots":1,"returnSlots":1},"@eip712Domain_3403":{"entryPoint":330,"id":3403,"parameterSlots":0,"returnSlots":7},"@executeBatch_406":{"entryPoint":400,"id":406,"parameterSlots":3,"returnSlots":0},"@execute_317":{"entryPoint":671,"id":317,"parameterSlots":1,"returnSlots":0},"@nonces_1017":{"entryPoint":null,"id":1017,"parameterSlots":1,"returnSlots":1},"@sendValue_736":{"entryPoint":1473,"id":736,"parameterSlots":2,"returnSlots":0},"@toStringWithFallback_1295":{"entryPoint":2121,"id":1295,"parameterSlots":2,"returnSlots":1},"@toString_1196":{"entryPoint":2484,"id":1196,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3513":{"entryPoint":null,"id":3513,"parameterSlots":2,"returnSlots":1},"@tryRecover_2927":{"entryPoint":2407,"id":2927,"parameterSlots":2,"returnSlots":3},"@tryRecover_3115":{"entryPoint":2846,"id":3115,"parameterSlots":4,"returnSlots":3},"@verify_283":{"entryPoint":280,"id":283,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3180,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_ForwardRequestData_$206_calldata_ptr_$dyn_calldata_ptrt_address_payable":{"entryPoint":3429,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_struct$_ForwardRequestData_$206_calldata_ptr":{"entryPoint":3093,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint48":{"entryPoint":3683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":3839,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":3801,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3279,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":3723,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_t_struct$_ForwardRequestData_$206_calldata_ptr":{"entryPoint":3585,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3639,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3935,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":3658,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3617,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":3855,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3563,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":3159,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9970:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"121:290:18","statements":[{"body":{"nodeType":"YulBlock","src":"167:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"176:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"179:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"169:6:18"},"nodeType":"YulFunctionCall","src":"169:12:18"},"nodeType":"YulExpressionStatement","src":"169:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"142:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"151:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"138:3:18"},"nodeType":"YulFunctionCall","src":"138:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"163:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"134:3:18"},"nodeType":"YulFunctionCall","src":"134:32:18"},"nodeType":"YulIf","src":"131:52:18"},{"nodeType":"YulVariableDeclaration","src":"192:37:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"219:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"206:12:18"},"nodeType":"YulFunctionCall","src":"206:23:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"196:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"272:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"281:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"284:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"274:6:18"},"nodeType":"YulFunctionCall","src":"274:12:18"},"nodeType":"YulExpressionStatement","src":"274:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"244:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"252:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"241:2:18"},"nodeType":"YulFunctionCall","src":"241:30:18"},"nodeType":"YulIf","src":"238:50:18"},{"nodeType":"YulVariableDeclaration","src":"297:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"311:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"322:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"307:3:18"},"nodeType":"YulFunctionCall","src":"307:22:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"301:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"368:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"377:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"380:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"370:6:18"},"nodeType":"YulFunctionCall","src":"370:12:18"},"nodeType":"YulExpressionStatement","src":"370:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"349:7:18"},{"name":"_1","nodeType":"YulIdentifier","src":"358:2:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"345:3:18"},"nodeType":"YulFunctionCall","src":"345:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"363:3:18","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"341:3:18"},"nodeType":"YulFunctionCall","src":"341:26:18"},"nodeType":"YulIf","src":"338:46:18"},{"nodeType":"YulAssignment","src":"393:12:18","value":{"name":"_1","nodeType":"YulIdentifier","src":"403:2:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"393:6:18"}]}]},"name":"abi_decode_tuple_t_struct$_ForwardRequestData_$206_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"87:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"98:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"110:6:18","type":""}],"src":"14:397:18"},{"body":{"nodeType":"YulBlock","src":"511:92:18","statements":[{"nodeType":"YulAssignment","src":"521:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"533:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"544:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"529:3:18"},"nodeType":"YulFunctionCall","src":"529:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"521:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"563:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"588:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"581:6:18"},"nodeType":"YulFunctionCall","src":"581:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"574:6:18"},"nodeType":"YulFunctionCall","src":"574:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"556:6:18"},"nodeType":"YulFunctionCall","src":"556:41:18"},"nodeType":"YulExpressionStatement","src":"556:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"480:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"491:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"502:4:18","type":""}],"src":"416:187:18"},{"body":{"nodeType":"YulBlock","src":"653:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"717:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"726:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"729:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"719:6:18"},"nodeType":"YulFunctionCall","src":"719:12:18"},"nodeType":"YulExpressionStatement","src":"719:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"687:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"702:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"707:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"698:3:18"},"nodeType":"YulFunctionCall","src":"698:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"711:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"694:3:18"},"nodeType":"YulFunctionCall","src":"694:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"683:3:18"},"nodeType":"YulFunctionCall","src":"683:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"673:2:18"},"nodeType":"YulFunctionCall","src":"673:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"666:6:18"},"nodeType":"YulFunctionCall","src":"666:50:18"},"nodeType":"YulIf","src":"663:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"642:5:18","type":""}],"src":"608:131:18"},{"body":{"nodeType":"YulBlock","src":"814:177:18","statements":[{"body":{"nodeType":"YulBlock","src":"860:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"869:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"872:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"862:6:18"},"nodeType":"YulFunctionCall","src":"862:12:18"},"nodeType":"YulExpressionStatement","src":"862:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"835:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"844:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"831:3:18"},"nodeType":"YulFunctionCall","src":"831:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"856:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"827:3:18"},"nodeType":"YulFunctionCall","src":"827:32:18"},"nodeType":"YulIf","src":"824:52:18"},{"nodeType":"YulVariableDeclaration","src":"885:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"898:12:18"},"nodeType":"YulFunctionCall","src":"898:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"889:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"955:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"930:24:18"},"nodeType":"YulFunctionCall","src":"930:31:18"},"nodeType":"YulExpressionStatement","src":"930:31:18"},{"nodeType":"YulAssignment","src":"970:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"980:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"970:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"780:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"791:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"803:6:18","type":""}],"src":"744:247:18"},{"body":{"nodeType":"YulBlock","src":"1097:76:18","statements":[{"nodeType":"YulAssignment","src":"1107:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1119:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1130:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1115:3:18"},"nodeType":"YulFunctionCall","src":"1115:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1107:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1149:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"1160:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1142:6:18"},"nodeType":"YulFunctionCall","src":"1142:25:18"},"nodeType":"YulExpressionStatement","src":"1142:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1066:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1077:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1088:4:18","type":""}],"src":"996:177:18"},{"body":{"nodeType":"YulBlock","src":"1228:373:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1238:26:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1258:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1252:5:18"},"nodeType":"YulFunctionCall","src":"1252:12:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1242:6:18","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1280:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1285:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1273:6:18"},"nodeType":"YulFunctionCall","src":"1273:19:18"},"nodeType":"YulExpressionStatement","src":"1273:19:18"},{"nodeType":"YulVariableDeclaration","src":"1301:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1310:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1305:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1372:110:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1386:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1396:4:18","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1390:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1428:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1433:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1424:3:18"},"nodeType":"YulFunctionCall","src":"1424:11:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1437:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1420:3:18"},"nodeType":"YulFunctionCall","src":"1420:20:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1456:5:18"},{"name":"i","nodeType":"YulIdentifier","src":"1463:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1452:3:18"},"nodeType":"YulFunctionCall","src":"1452:13:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1467:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1448:3:18"},"nodeType":"YulFunctionCall","src":"1448:22:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1442:5:18"},"nodeType":"YulFunctionCall","src":"1442:29:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1413:6:18"},"nodeType":"YulFunctionCall","src":"1413:59:18"},"nodeType":"YulExpressionStatement","src":"1413:59:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1331:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"1334:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1328:2:18"},"nodeType":"YulFunctionCall","src":"1328:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1342:21:18","statements":[{"nodeType":"YulAssignment","src":"1344:17:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1353:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"1356:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1349:3:18"},"nodeType":"YulFunctionCall","src":"1349:12:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1344:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1324:3:18","statements":[]},"src":"1320:162:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1506:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1511:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1502:3:18"},"nodeType":"YulFunctionCall","src":"1502:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"1520:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1498:3:18"},"nodeType":"YulFunctionCall","src":"1498:27:18"},{"kind":"number","nodeType":"YulLiteral","src":"1527:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1491:6:18"},"nodeType":"YulFunctionCall","src":"1491:38:18"},"nodeType":"YulExpressionStatement","src":"1491:38:18"},{"nodeType":"YulAssignment","src":"1538:57:18","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1553:3:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1566:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1574:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1562:3:18"},"nodeType":"YulFunctionCall","src":"1562:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1583:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1579:3:18"},"nodeType":"YulFunctionCall","src":"1579:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1558:3:18"},"nodeType":"YulFunctionCall","src":"1558:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1549:3:18"},"nodeType":"YulFunctionCall","src":"1549:39:18"},{"kind":"number","nodeType":"YulLiteral","src":"1590:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1545:3:18"},"nodeType":"YulFunctionCall","src":"1545:50:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1538:3:18"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1205:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1212:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1220:3:18","type":""}],"src":"1178:423:18"},{"body":{"nodeType":"YulBlock","src":"1963:902:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1980:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1995:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2007:3:18","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"2012:3:18","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2003:3:18"},"nodeType":"YulFunctionCall","src":"2003:13:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1991:3:18"},"nodeType":"YulFunctionCall","src":"1991:26:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1973:6:18"},"nodeType":"YulFunctionCall","src":"1973:45:18"},"nodeType":"YulExpressionStatement","src":"1973:45:18"},{"nodeType":"YulVariableDeclaration","src":"2027:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2037:2:18","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2031:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2059:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2070:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2055:3:18"},"nodeType":"YulFunctionCall","src":"2055:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"2075:3:18","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2048:6:18"},"nodeType":"YulFunctionCall","src":"2048:31:18"},"nodeType":"YulExpressionStatement","src":"2048:31:18"},{"nodeType":"YulVariableDeclaration","src":"2088:60:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2120:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2132:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2143:3:18","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2128:3:18"},"nodeType":"YulFunctionCall","src":"2128:19:18"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2102:17:18"},"nodeType":"YulFunctionCall","src":"2102:46:18"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2092:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2168:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2179:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:18"},"nodeType":"YulFunctionCall","src":"2164:18:18"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2188:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2196:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2184:3:18"},"nodeType":"YulFunctionCall","src":"2184:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2157:6:18"},"nodeType":"YulFunctionCall","src":"2157:50:18"},"nodeType":"YulExpressionStatement","src":"2157:50:18"},{"nodeType":"YulVariableDeclaration","src":"2216:47:18","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2248:6:18"},{"name":"tail_1","nodeType":"YulIdentifier","src":"2256:6:18"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2230:17:18"},"nodeType":"YulFunctionCall","src":"2230:33:18"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"2220:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2283:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2294:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2279:3:18"},"nodeType":"YulFunctionCall","src":"2279:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"2299:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2272:6:18"},"nodeType":"YulFunctionCall","src":"2272:34:18"},"nodeType":"YulExpressionStatement","src":"2272:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2326:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2337:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2322:3:18"},"nodeType":"YulFunctionCall","src":"2322:19:18"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2347:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2363:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2368:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2359:3:18"},"nodeType":"YulFunctionCall","src":"2359:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"2372:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2355:3:18"},"nodeType":"YulFunctionCall","src":"2355:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2343:3:18"},"nodeType":"YulFunctionCall","src":"2343:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2315:6:18"},"nodeType":"YulFunctionCall","src":"2315:61:18"},"nodeType":"YulExpressionStatement","src":"2315:61:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2396:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2407:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:18"},"nodeType":"YulFunctionCall","src":"2392:19:18"},{"name":"value5","nodeType":"YulIdentifier","src":"2413:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2385:6:18"},"nodeType":"YulFunctionCall","src":"2385:35:18"},"nodeType":"YulExpressionStatement","src":"2385:35:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2440:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2451:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2436:3:18"},"nodeType":"YulFunctionCall","src":"2436:19:18"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"2461:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2469:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2457:3:18"},"nodeType":"YulFunctionCall","src":"2457:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2429:6:18"},"nodeType":"YulFunctionCall","src":"2429:51:18"},"nodeType":"YulExpressionStatement","src":"2429:51:18"},{"nodeType":"YulVariableDeclaration","src":"2489:17:18","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"2500:6:18"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"2493:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2515:27:18","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"2535:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2529:5:18"},"nodeType":"YulFunctionCall","src":"2529:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2519:6:18","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"2558:6:18"},{"name":"length","nodeType":"YulIdentifier","src":"2566:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2551:6:18"},"nodeType":"YulFunctionCall","src":"2551:22:18"},"nodeType":"YulExpressionStatement","src":"2551:22:18"},{"nodeType":"YulAssignment","src":"2582:22:18","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"2593:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2601:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:18"},"nodeType":"YulFunctionCall","src":"2589:15:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2582:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"2613:29:18","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"2631:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2639:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2627:3:18"},"nodeType":"YulFunctionCall","src":"2627:15:18"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2617:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2651:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2660:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2655:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2719:120:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2740:3:18"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2751:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2745:5:18"},"nodeType":"YulFunctionCall","src":"2745:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2733:6:18"},"nodeType":"YulFunctionCall","src":"2733:26:18"},"nodeType":"YulExpressionStatement","src":"2733:26:18"},{"nodeType":"YulAssignment","src":"2772:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2783:3:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2788:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2779:3:18"},"nodeType":"YulFunctionCall","src":"2779:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2772:3:18"}]},{"nodeType":"YulAssignment","src":"2804:25:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2818:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2826:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2814:3:18"},"nodeType":"YulFunctionCall","src":"2814:15:18"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2804:6:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2681:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"2684:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2678:2:18"},"nodeType":"YulFunctionCall","src":"2678:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2692:18:18","statements":[{"nodeType":"YulAssignment","src":"2694:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2703:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"2706:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2699:3:18"},"nodeType":"YulFunctionCall","src":"2699:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2694:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"2674:3:18","statements":[]},"src":"2670:169:18"},{"nodeType":"YulAssignment","src":"2848:11:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"2856:3:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2848:4:18"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1884:9:18","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1895:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1903:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1911:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1919:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1927:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1935:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1943:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1954:4:18","type":""}],"src":"1606:1259:18"},{"body":{"nodeType":"YulBlock","src":"3037:634:18","statements":[{"body":{"nodeType":"YulBlock","src":"3083:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3092:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3095:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3085:6:18"},"nodeType":"YulFunctionCall","src":"3085:12:18"},"nodeType":"YulExpressionStatement","src":"3085:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3058:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3067:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3054:3:18"},"nodeType":"YulFunctionCall","src":"3054:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3079:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3050:3:18"},"nodeType":"YulFunctionCall","src":"3050:32:18"},"nodeType":"YulIf","src":"3047:52:18"},{"nodeType":"YulVariableDeclaration","src":"3108:37:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3135:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3122:12:18"},"nodeType":"YulFunctionCall","src":"3122:23:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3112:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3154:28:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3164:18:18","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3158:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3209:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3218:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3221:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3211:6:18"},"nodeType":"YulFunctionCall","src":"3211:12:18"},"nodeType":"YulExpressionStatement","src":"3211:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3197:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3205:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3194:2:18"},"nodeType":"YulFunctionCall","src":"3194:14:18"},"nodeType":"YulIf","src":"3191:34:18"},{"nodeType":"YulVariableDeclaration","src":"3234:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3248:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3259:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3244:3:18"},"nodeType":"YulFunctionCall","src":"3244:22:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3238:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3314:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3323:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3326:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3316:6:18"},"nodeType":"YulFunctionCall","src":"3316:12:18"},"nodeType":"YulExpressionStatement","src":"3316:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3293:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"3297:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3289:3:18"},"nodeType":"YulFunctionCall","src":"3289:13:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3304:7:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3285:3:18"},"nodeType":"YulFunctionCall","src":"3285:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3278:6:18"},"nodeType":"YulFunctionCall","src":"3278:35:18"},"nodeType":"YulIf","src":"3275:55:18"},{"nodeType":"YulVariableDeclaration","src":"3339:30:18","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3366:2:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3353:12:18"},"nodeType":"YulFunctionCall","src":"3353:16:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3343:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3396:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3408:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3398:6:18"},"nodeType":"YulFunctionCall","src":"3398:12:18"},"nodeType":"YulExpressionStatement","src":"3398:12:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3384:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3392:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3381:2:18"},"nodeType":"YulFunctionCall","src":"3381:14:18"},"nodeType":"YulIf","src":"3378:34:18"},{"body":{"nodeType":"YulBlock","src":"3472:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3481:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3484:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3474:6:18"},"nodeType":"YulFunctionCall","src":"3474:12:18"},"nodeType":"YulExpressionStatement","src":"3474:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3435:2:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3443:1:18","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3446:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3439:3:18"},"nodeType":"YulFunctionCall","src":"3439:14:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3431:3:18"},"nodeType":"YulFunctionCall","src":"3431:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3456:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3427:3:18"},"nodeType":"YulFunctionCall","src":"3427:34:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3463:7:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3424:2:18"},"nodeType":"YulFunctionCall","src":"3424:47:18"},"nodeType":"YulIf","src":"3421:67:18"},{"nodeType":"YulAssignment","src":"3497:23:18","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3511:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"3515:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3507:3:18"},"nodeType":"YulFunctionCall","src":"3507:13:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3497:6:18"}]},{"nodeType":"YulAssignment","src":"3529:16:18","value":{"name":"length","nodeType":"YulIdentifier","src":"3539:6:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3529:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3554:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3584:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3595:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3580:3:18"},"nodeType":"YulFunctionCall","src":"3580:20:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3567:12:18"},"nodeType":"YulFunctionCall","src":"3567:34:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3558:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3635:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3610:24:18"},"nodeType":"YulFunctionCall","src":"3610:31:18"},"nodeType":"YulExpressionStatement","src":"3610:31:18"},{"nodeType":"YulAssignment","src":"3650:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"3660:5:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3650:6:18"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_ForwardRequestData_$206_calldata_ptr_$dyn_calldata_ptrt_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2987:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2998:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3010:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3018:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3026:6:18","type":""}],"src":"2870:801:18"},{"body":{"nodeType":"YulBlock","src":"3708:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3725:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3732:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3737:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3728:3:18"},"nodeType":"YulFunctionCall","src":"3728:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3718:6:18"},"nodeType":"YulFunctionCall","src":"3718:31:18"},"nodeType":"YulExpressionStatement","src":"3718:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3765:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3768:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3758:6:18"},"nodeType":"YulFunctionCall","src":"3758:15:18"},"nodeType":"YulExpressionStatement","src":"3758:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3789:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3792:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3782:6:18"},"nodeType":"YulFunctionCall","src":"3782:15:18"},"nodeType":"YulExpressionStatement","src":"3782:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3676:127:18"},{"body":{"nodeType":"YulBlock","src":"3840:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3857:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3864:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3869:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3860:3:18"},"nodeType":"YulFunctionCall","src":"3860:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3850:6:18"},"nodeType":"YulFunctionCall","src":"3850:31:18"},"nodeType":"YulExpressionStatement","src":"3850:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3897:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3900:4:18","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3890:6:18"},"nodeType":"YulFunctionCall","src":"3890:15:18"},"nodeType":"YulExpressionStatement","src":"3890:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3921:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3924:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3914:6:18"},"nodeType":"YulFunctionCall","src":"3914:15:18"},"nodeType":"YulExpressionStatement","src":"3914:15:18"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"3808:127:18"},{"body":{"nodeType":"YulBlock","src":"4052:223:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4062:51:18","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"4101:11:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4088:12:18"},"nodeType":"YulFunctionCall","src":"4088:25:18"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"4066:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4203:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4212:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4215:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4205:6:18"},"nodeType":"YulFunctionCall","src":"4205:12:18"},"nodeType":"YulExpressionStatement","src":"4205:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"4136:18:18"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"4164:12:18"},"nodeType":"YulFunctionCall","src":"4164:14:18"},{"name":"base_ref","nodeType":"YulIdentifier","src":"4180:8:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4160:3:18"},"nodeType":"YulFunctionCall","src":"4160:29:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4195:3:18","type":"","value":"222"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4191:3:18"},"nodeType":"YulFunctionCall","src":"4191:8:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4156:3:18"},"nodeType":"YulFunctionCall","src":"4156:44:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4132:3:18"},"nodeType":"YulFunctionCall","src":"4132:69:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4125:6:18"},"nodeType":"YulFunctionCall","src":"4125:77:18"},"nodeType":"YulIf","src":"4122:97:18"},{"nodeType":"YulAssignment","src":"4228:41:18","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"4240:8:18"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"4250:18:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4236:3:18"},"nodeType":"YulFunctionCall","src":"4236:33:18"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"4228:4:18"}]}]},"name":"access_calldata_tail_t_struct$_ForwardRequestData_$206_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"4017:8:18","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"4027:11:18","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"4043:4:18","type":""}],"src":"3940:335:18"},{"body":{"nodeType":"YulBlock","src":"4312:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4329:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4336:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4341:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4332:3:18"},"nodeType":"YulFunctionCall","src":"4332:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4322:6:18"},"nodeType":"YulFunctionCall","src":"4322:31:18"},"nodeType":"YulExpressionStatement","src":"4322:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4369:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4372:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4362:6:18"},"nodeType":"YulFunctionCall","src":"4362:15:18"},"nodeType":"YulExpressionStatement","src":"4362:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4393:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4396:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4386:6:18"},"nodeType":"YulFunctionCall","src":"4386:15:18"},"nodeType":"YulExpressionStatement","src":"4386:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4280:127:18"},{"body":{"nodeType":"YulBlock","src":"4460:77:18","statements":[{"nodeType":"YulAssignment","src":"4470:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4481:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"4484:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4477:3:18"},"nodeType":"YulFunctionCall","src":"4477:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4470:3:18"}]},{"body":{"nodeType":"YulBlock","src":"4509:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4511:16:18"},"nodeType":"YulFunctionCall","src":"4511:18:18"},"nodeType":"YulExpressionStatement","src":"4511:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4501:1:18"},{"name":"sum","nodeType":"YulIdentifier","src":"4504:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4498:2:18"},"nodeType":"YulFunctionCall","src":"4498:10:18"},"nodeType":"YulIf","src":"4495:36:18"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4443:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"4446:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4452:3:18","type":""}],"src":"4412:125:18"},{"body":{"nodeType":"YulBlock","src":"4589:88:18","statements":[{"body":{"nodeType":"YulBlock","src":"4620:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4622:16:18"},"nodeType":"YulFunctionCall","src":"4622:18:18"},"nodeType":"YulExpressionStatement","src":"4622:18:18"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4605:5:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4616:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4612:3:18"},"nodeType":"YulFunctionCall","src":"4612:6:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4602:2:18"},"nodeType":"YulFunctionCall","src":"4602:17:18"},"nodeType":"YulIf","src":"4599:43:18"},{"nodeType":"YulAssignment","src":"4651:20:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"4669:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4658:3:18"},"nodeType":"YulFunctionCall","src":"4658:13:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4651:3:18"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4571:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4581:3:18","type":""}],"src":"4542:135:18"},{"body":{"nodeType":"YulBlock","src":"4811:119:18","statements":[{"nodeType":"YulAssignment","src":"4821:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4833:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4844:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4829:3:18"},"nodeType":"YulFunctionCall","src":"4829:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4821:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4863:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"4874:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4856:6:18"},"nodeType":"YulFunctionCall","src":"4856:25:18"},"nodeType":"YulExpressionStatement","src":"4856:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4901:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4912:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4897:3:18"},"nodeType":"YulFunctionCall","src":"4897:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"4917:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4890:6:18"},"nodeType":"YulFunctionCall","src":"4890:34:18"},"nodeType":"YulExpressionStatement","src":"4890:34:18"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4772:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4783:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4791:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4802:4:18","type":""}],"src":"4682:248:18"},{"body":{"nodeType":"YulBlock","src":"5004:211:18","statements":[{"body":{"nodeType":"YulBlock","src":"5050:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5059:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5062:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5052:6:18"},"nodeType":"YulFunctionCall","src":"5052:12:18"},"nodeType":"YulExpressionStatement","src":"5052:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5025:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5034:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5021:3:18"},"nodeType":"YulFunctionCall","src":"5021:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5046:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5017:3:18"},"nodeType":"YulFunctionCall","src":"5017:32:18"},"nodeType":"YulIf","src":"5014:52:18"},{"nodeType":"YulVariableDeclaration","src":"5075:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5101:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5088:12:18"},"nodeType":"YulFunctionCall","src":"5088:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5079:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5169:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5178:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5181:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5171:6:18"},"nodeType":"YulFunctionCall","src":"5171:12:18"},"nodeType":"YulExpressionStatement","src":"5171:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5133:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5144:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5151:14:18","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5140:3:18"},"nodeType":"YulFunctionCall","src":"5140:26:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5130:2:18"},"nodeType":"YulFunctionCall","src":"5130:37:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5123:6:18"},"nodeType":"YulFunctionCall","src":"5123:45:18"},"nodeType":"YulIf","src":"5120:65:18"},{"nodeType":"YulAssignment","src":"5194:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"5204:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5194:6:18"}]}]},"name":"abi_decode_tuple_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4970:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4981:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4993:6:18","type":""}],"src":"4935:280:18"},{"body":{"nodeType":"YulBlock","src":"5349:175:18","statements":[{"nodeType":"YulAssignment","src":"5359:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5371:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5382:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5367:3:18"},"nodeType":"YulFunctionCall","src":"5367:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5359:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"5394:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5412:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5417:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5408:3:18"},"nodeType":"YulFunctionCall","src":"5408:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"5421:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5404:3:18"},"nodeType":"YulFunctionCall","src":"5404:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5398:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5439:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"5462:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5450:3:18"},"nodeType":"YulFunctionCall","src":"5450:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5432:6:18"},"nodeType":"YulFunctionCall","src":"5432:34:18"},"nodeType":"YulExpressionStatement","src":"5432:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5486:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5497:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5482:3:18"},"nodeType":"YulFunctionCall","src":"5482:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5506:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"5514:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5502:3:18"},"nodeType":"YulFunctionCall","src":"5502:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5475:6:18"},"nodeType":"YulFunctionCall","src":"5475:43:18"},"nodeType":"YulExpressionStatement","src":"5475:43:18"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5310:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5321:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5329:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5340:4:18","type":""}],"src":"5220:304:18"},{"body":{"nodeType":"YulBlock","src":"5628:97:18","statements":[{"nodeType":"YulAssignment","src":"5638:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5650:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5661:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5646:3:18"},"nodeType":"YulFunctionCall","src":"5646:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5638:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5680:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5695:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5703:14:18","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5691:3:18"},"nodeType":"YulFunctionCall","src":"5691:27:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5673:6:18"},"nodeType":"YulFunctionCall","src":"5673:46:18"},"nodeType":"YulExpressionStatement","src":"5673:46:18"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5597:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5608:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5619:4:18","type":""}],"src":"5529:196:18"},{"body":{"nodeType":"YulBlock","src":"5824:427:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5834:51:18","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"5873:11:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5860:12:18"},"nodeType":"YulFunctionCall","src":"5860:25:18"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"5838:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5974:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5983:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5986:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5976:6:18"},"nodeType":"YulFunctionCall","src":"5976:12:18"},"nodeType":"YulExpressionStatement","src":"5976:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"5908:18:18"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"5936:12:18"},"nodeType":"YulFunctionCall","src":"5936:14:18"},{"name":"base_ref","nodeType":"YulIdentifier","src":"5952:8:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5932:3:18"},"nodeType":"YulFunctionCall","src":"5932:29:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5967:2:18","type":"","value":"30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5963:3:18"},"nodeType":"YulFunctionCall","src":"5963:7:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5928:3:18"},"nodeType":"YulFunctionCall","src":"5928:43:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5904:3:18"},"nodeType":"YulFunctionCall","src":"5904:68:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5897:6:18"},"nodeType":"YulFunctionCall","src":"5897:76:18"},"nodeType":"YulIf","src":"5894:96:18"},{"nodeType":"YulVariableDeclaration","src":"5999:47:18","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"6017:8:18"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"6027:18:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6013:3:18"},"nodeType":"YulFunctionCall","src":"6013:33:18"},"variables":[{"name":"addr_1","nodeType":"YulTypedName","src":"6003:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6055:30:18","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"6078:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6065:12:18"},"nodeType":"YulFunctionCall","src":"6065:20:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6055:6:18"}]},{"body":{"nodeType":"YulBlock","src":"6128:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6137:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6140:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:18"},"nodeType":"YulFunctionCall","src":"6130:12:18"},"nodeType":"YulExpressionStatement","src":"6130:12:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6100:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6108:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6097:2:18"},"nodeType":"YulFunctionCall","src":"6097:30:18"},"nodeType":"YulIf","src":"6094:50:18"},{"nodeType":"YulAssignment","src":"6153:25:18","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"6165:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6173:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6161:3:18"},"nodeType":"YulFunctionCall","src":"6161:17:18"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"6153:4:18"}]},{"body":{"nodeType":"YulBlock","src":"6229:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6238:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6241:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6231:6:18"},"nodeType":"YulFunctionCall","src":"6231:12:18"},"nodeType":"YulExpressionStatement","src":"6231:12:18"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"6194:4:18"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"6204:12:18"},"nodeType":"YulFunctionCall","src":"6204:14:18"},{"name":"length","nodeType":"YulIdentifier","src":"6220:6:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6200:3:18"},"nodeType":"YulFunctionCall","src":"6200:27:18"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"6190:3:18"},"nodeType":"YulFunctionCall","src":"6190:38:18"},"nodeType":"YulIf","src":"6187:58:18"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"5781:8:18","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"5791:11:18","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"5807:4:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"5813:6:18","type":""}],"src":"5730:521:18"},{"body":{"nodeType":"YulBlock","src":"6431:185:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6454:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"6459:6:18"},{"name":"value1","nodeType":"YulIdentifier","src":"6467:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6441:12:18"},"nodeType":"YulFunctionCall","src":"6441:33:18"},"nodeType":"YulExpressionStatement","src":"6441:33:18"},{"nodeType":"YulVariableDeclaration","src":"6483:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6497:3:18"},{"name":"value1","nodeType":"YulIdentifier","src":"6502:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6493:3:18"},"nodeType":"YulFunctionCall","src":"6493:16:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6487:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6525:2:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6537:2:18","type":"","value":"96"},{"name":"value2","nodeType":"YulIdentifier","src":"6541:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6533:3:18"},"nodeType":"YulFunctionCall","src":"6533:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6554:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6550:3:18"},"nodeType":"YulFunctionCall","src":"6550:31:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6529:3:18"},"nodeType":"YulFunctionCall","src":"6529:53:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6518:6:18"},"nodeType":"YulFunctionCall","src":"6518:65:18"},"nodeType":"YulExpressionStatement","src":"6518:65:18"},{"nodeType":"YulAssignment","src":"6592:18:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6603:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"6607:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6599:3:18"},"nodeType":"YulFunctionCall","src":"6599:11:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6592:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6391:3:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6396:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6404:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6412:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6423:3:18","type":""}],"src":"6256:360:18"},{"body":{"nodeType":"YulBlock","src":"6744:135:18","statements":[{"nodeType":"YulAssignment","src":"6754:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6766:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6777:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6762:3:18"},"nodeType":"YulFunctionCall","src":"6762:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6754:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6796:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"6807:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6789:6:18"},"nodeType":"YulFunctionCall","src":"6789:25:18"},"nodeType":"YulExpressionStatement","src":"6789:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6834:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6845:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6830:3:18"},"nodeType":"YulFunctionCall","src":"6830:18:18"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6864:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6857:6:18"},"nodeType":"YulFunctionCall","src":"6857:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6850:6:18"},"nodeType":"YulFunctionCall","src":"6850:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6823:6:18"},"nodeType":"YulFunctionCall","src":"6823:50:18"},"nodeType":"YulExpressionStatement","src":"6823:50:18"}]},"name":"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6705:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6716:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6724:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6735:4:18","type":""}],"src":"6621:258:18"},{"body":{"nodeType":"YulBlock","src":"7075:14:18","statements":[{"nodeType":"YulAssignment","src":"7077:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"7084:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7077:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7059:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7067:3:18","type":""}],"src":"6884:205:18"},{"body":{"nodeType":"YulBlock","src":"7241:124:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7264:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"7269:6:18"},{"name":"value1","nodeType":"YulIdentifier","src":"7277:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7251:12:18"},"nodeType":"YulFunctionCall","src":"7251:33:18"},"nodeType":"YulExpressionStatement","src":"7251:33:18"},{"nodeType":"YulVariableDeclaration","src":"7293:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7307:3:18"},{"name":"value1","nodeType":"YulIdentifier","src":"7312:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7303:3:18"},"nodeType":"YulFunctionCall","src":"7303:16:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7297:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7335:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"7339:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7328:6:18"},"nodeType":"YulFunctionCall","src":"7328:13:18"},"nodeType":"YulExpressionStatement","src":"7328:13:18"},{"nodeType":"YulAssignment","src":"7350:9:18","value":{"name":"_1","nodeType":"YulIdentifier","src":"7357:2:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7350:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7209:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7214:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7222:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7233:3:18","type":""}],"src":"7094:271:18"},{"body":{"nodeType":"YulBlock","src":"7665:459:18","statements":[{"nodeType":"YulAssignment","src":"7675:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7687:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7698:3:18","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7683:3:18"},"nodeType":"YulFunctionCall","src":"7683:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7675:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7718:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"7729:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7711:6:18"},"nodeType":"YulFunctionCall","src":"7711:25:18"},"nodeType":"YulExpressionStatement","src":"7711:25:18"},{"nodeType":"YulVariableDeclaration","src":"7745:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7763:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7768:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7759:3:18"},"nodeType":"YulFunctionCall","src":"7759:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"7772:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7755:3:18"},"nodeType":"YulFunctionCall","src":"7755:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7749:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7794:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7805:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7790:3:18"},"nodeType":"YulFunctionCall","src":"7790:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7814:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"7822:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7810:3:18"},"nodeType":"YulFunctionCall","src":"7810:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7783:6:18"},"nodeType":"YulFunctionCall","src":"7783:43:18"},"nodeType":"YulExpressionStatement","src":"7783:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7846:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7857:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7842:3:18"},"nodeType":"YulFunctionCall","src":"7842:18:18"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7866:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"7874:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7862:3:18"},"nodeType":"YulFunctionCall","src":"7862:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7835:6:18"},"nodeType":"YulFunctionCall","src":"7835:43:18"},"nodeType":"YulExpressionStatement","src":"7835:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7898:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7909:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7894:3:18"},"nodeType":"YulFunctionCall","src":"7894:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"7914:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7887:6:18"},"nodeType":"YulFunctionCall","src":"7887:34:18"},"nodeType":"YulExpressionStatement","src":"7887:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7941:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7952:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7937:3:18"},"nodeType":"YulFunctionCall","src":"7937:19:18"},{"name":"value4","nodeType":"YulIdentifier","src":"7958:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7930:6:18"},"nodeType":"YulFunctionCall","src":"7930:35:18"},"nodeType":"YulExpressionStatement","src":"7930:35:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7985:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7996:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7981:3:18"},"nodeType":"YulFunctionCall","src":"7981:19:18"},{"name":"value5","nodeType":"YulIdentifier","src":"8002:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7974:6:18"},"nodeType":"YulFunctionCall","src":"7974:35:18"},"nodeType":"YulExpressionStatement","src":"7974:35:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8029:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8040:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8025:3:18"},"nodeType":"YulFunctionCall","src":"8025:19:18"},{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"8050:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8058:14:18","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8046:3:18"},"nodeType":"YulFunctionCall","src":"8046:27:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8018:6:18"},"nodeType":"YulFunctionCall","src":"8018:56:18"},"nodeType":"YulExpressionStatement","src":"8018:56:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8094:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8105:3:18","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8090:3:18"},"nodeType":"YulFunctionCall","src":"8090:19:18"},{"name":"value7","nodeType":"YulIdentifier","src":"8111:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8083:6:18"},"nodeType":"YulFunctionCall","src":"8083:35:18"},"nodeType":"YulExpressionStatement","src":"8083:35:18"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7578:9:18","type":""},{"name":"value7","nodeType":"YulTypedName","src":"7589:6:18","type":""},{"name":"value6","nodeType":"YulTypedName","src":"7597:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7605:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7613:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7621:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7629:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7637:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7645:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7656:4:18","type":""}],"src":"7370:754:18"},{"body":{"nodeType":"YulBlock","src":"8161:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8178:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8185:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8190:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8181:3:18"},"nodeType":"YulFunctionCall","src":"8181:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8171:6:18"},"nodeType":"YulFunctionCall","src":"8171:31:18"},"nodeType":"YulExpressionStatement","src":"8171:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8218:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8221:4:18","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8211:6:18"},"nodeType":"YulFunctionCall","src":"8211:15:18"},"nodeType":"YulExpressionStatement","src":"8211:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8242:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8245:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8235:6:18"},"nodeType":"YulFunctionCall","src":"8235:15:18"},"nodeType":"YulExpressionStatement","src":"8235:15:18"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"8129:127:18"},{"body":{"nodeType":"YulBlock","src":"8362:102:18","statements":[{"nodeType":"YulAssignment","src":"8372:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:18"},"nodeType":"YulFunctionCall","src":"8380:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8414:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8429:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8445:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8450:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8441:3:18"},"nodeType":"YulFunctionCall","src":"8441:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"8454:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8437:3:18"},"nodeType":"YulFunctionCall","src":"8437:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8425:3:18"},"nodeType":"YulFunctionCall","src":"8425:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8407:6:18"},"nodeType":"YulFunctionCall","src":"8407:51:18"},"nodeType":"YulExpressionStatement","src":"8407:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8331:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8342:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8353:4:18","type":""}],"src":"8261:203:18"},{"body":{"nodeType":"YulBlock","src":"8524:325:18","statements":[{"nodeType":"YulAssignment","src":"8534:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8548:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8551:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8544:3:18"},"nodeType":"YulFunctionCall","src":"8544:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8534:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"8565:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8595:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"8601:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8591:3:18"},"nodeType":"YulFunctionCall","src":"8591:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8569:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8642:31:18","statements":[{"nodeType":"YulAssignment","src":"8644:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8658:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8666:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8654:3:18"},"nodeType":"YulFunctionCall","src":"8654:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8644:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8622:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8615:6:18"},"nodeType":"YulFunctionCall","src":"8615:26:18"},"nodeType":"YulIf","src":"8612:61:18"},{"body":{"nodeType":"YulBlock","src":"8732:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8753:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8760:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8765:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8756:3:18"},"nodeType":"YulFunctionCall","src":"8756:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8746:6:18"},"nodeType":"YulFunctionCall","src":"8746:31:18"},"nodeType":"YulExpressionStatement","src":"8746:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8797:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8800:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8790:6:18"},"nodeType":"YulFunctionCall","src":"8790:15:18"},"nodeType":"YulExpressionStatement","src":"8790:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8825:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8828:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8818:6:18"},"nodeType":"YulFunctionCall","src":"8818:15:18"},"nodeType":"YulExpressionStatement","src":"8818:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8688:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8711:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8719:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8708:2:18"},"nodeType":"YulFunctionCall","src":"8708:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8685:2:18"},"nodeType":"YulFunctionCall","src":"8685:38:18"},"nodeType":"YulIf","src":"8682:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8504:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8513:6:18","type":""}],"src":"8469:380:18"},{"body":{"nodeType":"YulBlock","src":"8900:171:18","statements":[{"body":{"nodeType":"YulBlock","src":"8931:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8952:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8959:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8964:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8955:3:18"},"nodeType":"YulFunctionCall","src":"8955:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8945:6:18"},"nodeType":"YulFunctionCall","src":"8945:31:18"},"nodeType":"YulExpressionStatement","src":"8945:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8996:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8999:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8989:6:18"},"nodeType":"YulFunctionCall","src":"8989:15:18"},"nodeType":"YulExpressionStatement","src":"8989:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9024:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9027:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9017:6:18"},"nodeType":"YulFunctionCall","src":"9017:15:18"},"nodeType":"YulExpressionStatement","src":"9017:15:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"8920:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8913:6:18"},"nodeType":"YulFunctionCall","src":"8913:9:18"},"nodeType":"YulIf","src":"8910:132:18"},{"nodeType":"YulAssignment","src":"9051:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9060:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"9063:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9056:3:18"},"nodeType":"YulFunctionCall","src":"9056:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9051:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8885:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"8888:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"8894:1:18","type":""}],"src":"8854:217:18"},{"body":{"nodeType":"YulBlock","src":"9257:217:18","statements":[{"nodeType":"YulAssignment","src":"9267:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9279:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9290:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9275:3:18"},"nodeType":"YulFunctionCall","src":"9275:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9267:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9310:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"9321:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9303:6:18"},"nodeType":"YulFunctionCall","src":"9303:25:18"},"nodeType":"YulExpressionStatement","src":"9303:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9348:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9359:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9344:3:18"},"nodeType":"YulFunctionCall","src":"9344:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9368:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9376:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9364:3:18"},"nodeType":"YulFunctionCall","src":"9364:17:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9337:6:18"},"nodeType":"YulFunctionCall","src":"9337:45:18"},"nodeType":"YulExpressionStatement","src":"9337:45:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9402:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9413:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9398:3:18"},"nodeType":"YulFunctionCall","src":"9398:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"9418:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9391:6:18"},"nodeType":"YulFunctionCall","src":"9391:34:18"},"nodeType":"YulExpressionStatement","src":"9391:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9445:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9456:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9441:3:18"},"nodeType":"YulFunctionCall","src":"9441:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"9461:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9434:6:18"},"nodeType":"YulFunctionCall","src":"9434:34:18"},"nodeType":"YulExpressionStatement","src":"9434:34:18"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9202:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9213:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9221:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9229:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9237:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9248:4:18","type":""}],"src":"9076:398:18"},{"body":{"nodeType":"YulBlock","src":"9692:276:18","statements":[{"nodeType":"YulAssignment","src":"9702:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9714:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9725:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9710:3:18"},"nodeType":"YulFunctionCall","src":"9710:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9702:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9745:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"9756:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9738:6:18"},"nodeType":"YulFunctionCall","src":"9738:25:18"},"nodeType":"YulExpressionStatement","src":"9738:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9783:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9794:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9779:3:18"},"nodeType":"YulFunctionCall","src":"9779:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"9799:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9772:6:18"},"nodeType":"YulFunctionCall","src":"9772:34:18"},"nodeType":"YulExpressionStatement","src":"9772:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9826:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9837:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9822:3:18"},"nodeType":"YulFunctionCall","src":"9822:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"9842:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9815:6:18"},"nodeType":"YulFunctionCall","src":"9815:34:18"},"nodeType":"YulExpressionStatement","src":"9815:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9869:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9880:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9865:3:18"},"nodeType":"YulFunctionCall","src":"9865:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"9885:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9858:6:18"},"nodeType":"YulFunctionCall","src":"9858:34:18"},"nodeType":"YulExpressionStatement","src":"9858:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9912:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9923:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9908:3:18"},"nodeType":"YulFunctionCall","src":"9908:19:18"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9933:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9949:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"9954:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9945:3:18"},"nodeType":"YulFunctionCall","src":"9945:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"9958:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9941:3:18"},"nodeType":"YulFunctionCall","src":"9941:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9929:3:18"},"nodeType":"YulFunctionCall","src":"9929:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9901:6:18"},"nodeType":"YulFunctionCall","src":"9901:61:18"},"nodeType":"YulExpressionStatement","src":"9901:61:18"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9629:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9640:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9648:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9656:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9664:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9672:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9683:4:18","type":""}],"src":"9479:489:18"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_struct$_ForwardRequestData_$206_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 224) { revert(0, 0) }\n        value0 := _1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, _1)\n        let srcPtr := add(value6, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_array$_t_struct$_ForwardRequestData_$206_calldata_ptr_$dyn_calldata_ptrt_address_payable(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        let value := calldataload(add(headStart, 0x20))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function access_calldata_tail_t_struct$_ForwardRequestData_$206_calldata_ptr(base_ref, ptr_to_tail) -> addr\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(222)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint48(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffff))\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        end := add(_1, 20)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), and(value6, 0xffffffffffff))\n        mstore(add(headStart, 224), value7)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3222":[{"length":32,"start":2644}],"3224":[{"length":32,"start":2602}],"3226":[{"length":32,"start":2560}],"3228":[{"length":32,"start":2725}],"3230":[{"length":32,"start":2765}],"3233":[{"length":32,"start":902}],"3236":[{"length":32,"start":952}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19D8D38C EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xCCF96B4A EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0xDF905CAF EQ PUSH2 0x105 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA PUSH2 0x9F CALLDATASIZE PUSH1 0x4 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x103 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x127 DUP6 PUSH2 0x2FA JUMP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP1 ISZERO PUSH2 0x138 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x141 JUMPI POP DUP1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x15E PUSH2 0x37F JUMP JUMPDEST PUSH2 0x166 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x258 JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x1BA JUMPI PUSH2 0x1BA PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH2 0x1DA SWAP1 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH2 0xE37 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH2 0x20B DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x1F3 JUMPI PUSH2 0x1F3 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST DUP7 PUSH2 0x3DE JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x247 JUMPI DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x224 JUMPI PUSH2 0x224 PUSH2 0xDEB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xE01 JUMP JUMPDEST PUSH2 0x244 SWAP1 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH2 0xE37 JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x251 DUP2 PUSH2 0xE4A JUMP JUMPDEST SWAP1 POP PUSH2 0x1A0 JUMP JUMPDEST POP CALLVALUE DUP3 EQ PUSH2 0x287 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70647F79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLVALUE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x297 JUMPI PUSH2 0x297 DUP5 DUP3 PUSH2 0x5C1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x40 ADD CALLDATALOAD CALLVALUE EQ PUSH2 0x2CF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x70647F79 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 ADD CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE CALLVALUE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x27E JUMP JUMPDEST PUSH2 0x2DA DUP2 PUSH1 0x1 PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x2F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x30C DUP8 PUSH2 0x657 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x329 PUSH2 0x324 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0xC6C JUMP JUMPDEST PUSH2 0x7CC JUMP JUMPDEST TIMESTAMP PUSH2 0x33A PUSH1 0xA0 DUP11 ADD PUSH1 0x80 DUP12 ADD PUSH2 0xE63 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND LT ISZERO DUP4 DUP1 ISZERO PUSH2 0x36E JUMPI POP PUSH2 0x359 PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3AC PUSH32 0x0 PUSH1 0x0 PUSH2 0x849 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3AC PUSH32 0x0 PUSH1 0x1 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3EF DUP8 PUSH2 0x2FA JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP6 ISZERO PUSH2 0x4B5 JUMPI DUP4 PUSH2 0x43D JUMPI PUSH2 0x412 PUSH1 0x40 DUP9 ADD PUSH1 0x20 DUP10 ADD PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD2650CD1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x27E JUMP JUMPDEST DUP3 PUSH2 0x476 JUMPI PUSH2 0x452 PUSH1 0xA0 DUP9 ADD PUSH1 0x80 DUP10 ADD PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A777AC5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x27E JUMP JUMPDEST DUP2 PUSH2 0x4B5 JUMPI DUP1 PUSH2 0x489 PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6422D02B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x27E JUMP JUMPDEST DUP4 DUP1 ISZERO PUSH2 0x4BF JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x4C8 JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH1 0x0 PUSH2 0x507 PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0xC6C JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD PUSH1 0x0 PUSH2 0x51D PUSH1 0xA0 DUP14 ADD DUP14 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x52A PUSH1 0x20 DUP16 ADD DUP16 PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x53C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x20 DUP6 ADD DUP7 DUP9 DUP11 CALL SWAP11 POP GAS SWAP1 POP PUSH2 0x56B DUP2 DUP15 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE DUP13 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH32 0x842FB24A83793558587A3DAB2BE7674DA4A51D09C5542D6DD354E5D0EA70813C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x27E JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x63E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x651 JUMPI PUSH2 0x651 DUP2 PUSH2 0x912 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x7A6 PUSH2 0x66C PUSH1 0xC0 DUP8 ADD DUP8 PUSH2 0xE8B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x7A0 SWAP3 POP PUSH32 0x7F96328B83274EBC7C1CF4F7A3ABDA602B51A78B7FA1D86A2CE353D75E587CAC SWAP2 POP PUSH2 0x6D4 SWAP1 POP PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0xC6C JUMP JUMPDEST PUSH2 0x6E4 PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0xC6C JUMP JUMPDEST PUSH1 0x40 DUP12 ADD CALLDATALOAD PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH2 0x6FE PUSH2 0x9F PUSH1 0x20 DUP16 ADD DUP16 PUSH2 0xC6C JUMP JUMPDEST DUP14 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x711 SWAP2 SWAP1 PUSH2 0xE63 JUMP JUMPDEST DUP15 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x721 SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72F SWAP3 SWAP2 SWAP1 PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND SWAP1 DUP3 ADD MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH6 0xFFFFFFFFFFFF AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x93A JUMP JUMPDEST SWAP1 PUSH2 0x967 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7C0 PUSH2 0xF0F JUMP JUMPDEST EQ SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x572B6C05 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 DUP10 GAS STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x833 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x83F JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x863 JUMPI PUSH2 0x85C DUP4 PUSH2 0x9B4 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F0 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x86F SWAP1 PUSH2 0xF25 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x89B SWAP1 PUSH2 0xF25 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8BD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x905 PUSH1 0x3F PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH2 0xF5F JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x90E JUMPI INVALID JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x921 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F0 PUSH2 0x947 PUSH2 0x9F3 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x9A1 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x993 DUP9 DUP3 DUP6 DUP6 PUSH2 0xB1E JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x9AD JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9C1 DUP4 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xA4C JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xA76 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3AC PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xB59 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBD9 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xBE3 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0xE0 DUP2 DUP6 SUB SLT ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC50 DUP2 PUSH2 0xC57 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCAF JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC93 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0xCEF PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0xC89 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xD01 DUP2 DUP11 PUSH2 0xC89 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD53 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD37 JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xD92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xDB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xDCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP POP DUP5 ADD CALLDATALOAD PUSH2 0xDE0 DUP2 PUSH2 0xC57 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0xDE NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xE17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x8F0 JUMPI PUSH2 0x8F0 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE5C JUMPI PUSH2 0xE5C PUSH2 0xE21 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xEA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xEBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xF39 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xF59 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF7C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP BALANCE 0xBB 0x21 CREATE2 PUSH27 0x51C82BC50BD42CFBD7016860774846A7E0B0AC46B3E3BBC5CE4364 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"2778:14223:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4890:244;;;;;;;;;;-1:-1:-1;4890:244:2;;;;;:::i;:::-;;:::i;:::-;;;581:14:18;;574:22;556:41;;544:2;529:18;4890:244:2;;;;;;;;538:107:6;;;;;;;;;;-1:-1:-1;538:107:6;;;;;:::i;:::-;-1:-1:-1;;;;;624:14:6;598:7;624:14;;;:7;:14;;;;;;;538:107;;;;1142:25:18;;;1130:2;1115:18;538:107:6;996:177:18;5228:557:12;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;7558:1264:2:-;;;;;;:::i;:::-;;:::i;:::-;;5650:507;;;;;;:::i;:::-;;:::i;4890:244::-;4972:4;4989:23;5014:11;5027:16;5049:18;5059:7;5049:9;:18::i;:::-;4988:79;;;;;;;5084:18;:28;;;;;5106:6;5084:28;:43;;;;;5116:11;5084:43;5077:50;4890:244;-1:-1:-1;;;;;4890:244:2:o;5228:557:12:-;5326:13;5353:18;5385:21;5420:15;5449:25;5488:12;5514:27;5617:13;:11;:13::i;:::-;5644:16;:14;:16::i;:::-;5752;;;5736:1;5752:16;;;;;;;;;-1:-1:-1;;;5566:212:12;;;-1:-1:-1;5566:212:12;;-1:-1:-1;5674:13:12;;-1:-1:-1;5709:4:12;;-1:-1:-1;5736:1:12;-1:-1:-1;5752:16:12;-1:-1:-1;5566:212:12;-1:-1:-1;5228:557:12:o;7558:1264:2:-;-1:-1:-1;;;;;7721:28:2;;;7707:11;;;7821:251;7837:19;;;7821:251;;;7894:8;;7903:1;7894:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7877:34;;7894:17;;;7877:34;;:::i;:::-;;;7925:12;7940:29;7949:8;;7958:1;7949:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7962:6;7940:8;:29::i;:::-;7925:44;;7988:7;7983:79;;8030:8;;8039:1;8030:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;8015:32;;8030:17;;;8015:32;;:::i;:::-;;;7983:79;-1:-1:-1;7858:3:2;;;:::i;:::-;;;7821:251;;;;8225:9;8208:13;:26;8204:121;;8257:57;;-1:-1:-1;;;8257:57:2;;;;;4856:25:18;;;8304:9:2;4897:18:18;;;4890:34;4829:18;;8257:57:2;;;;;;;;8204:121;8492:16;;8488:328;;8759:46;8777:14;8793:11;8759:17;:46::i;:::-;7697:1125;;;7558:1264;;;:::o;5650:507::-;5956:7;:13;;;5943:9;:26;5939:121;;6024:13;5992:57;;-1:-1:-1;;;5992:57:2;;6024:13;;;;5992:57;;;4856:25:18;6039:9:2;4897:18:18;;;4890:34;4829:18;;5992:57:2;4682:248:18;5939:121:2;6075:23;6084:7;6093:4;6075:8;:23::i;:::-;6070:81;;6121:19;;-1:-1:-1;;;6121:19:2;;;;;;;;;;;6070:81;5650:507;:::o;9006:457::-;9107:23;9132:11;9145:16;9163:14;9190:12;9204:17;9225:37;9254:7;9225:28;:37::i;:::-;9189:73;;-1:-1:-1;9189:73:2;-1:-1:-1;9294:30:2;9313:10;;;;;;;;:::i;:::-;9294:18;:30::i;:::-;9358:15;9338:16;;;;;;;;:::i;:::-;:35;;;;9387:7;:36;;;;-1:-1:-1;9411:12:2;;;;:7;:12;:::i;:::-;-1:-1:-1;;;;;9398:25:2;:9;-1:-1:-1;;;;;9398:25:2;;9387:36;9273:183;;-1:-1:-1;9273:183:2;-1:-1:-1;9273:183:2;-1:-1:-1;9437:9:2;-1:-1:-1;;9006:457:2;;;;;:::o;6105:126:12:-;6151:13;6183:41;:5;6210:13;6183:26;:41::i;:::-;6176:48;;6105:126;:::o;6557:135::-;6606:13;6638:47;:8;6668:16;6638:29;:47::i;11063:1659:2:-;11192:12;11217:23;11242:11;11255:16;11273:14;11291:18;11301:7;11291:9;:18::i;:::-;11216:93;;;;;;;;11507:19;11503:402;;;11547:18;11542:115;;11616:10;;;;;;;;:::i;:::-;11592:50;;-1:-1:-1;;;11592:50:2;;-1:-1:-1;;;;;5450:15:18;;;11592:50:2;;;5432:34:18;11636:4:2;5482:18:18;;;5475:43;5367:18;;11592:50:2;5220:304:18;11542:115:2;11676:6;11671:101;;11740:16;;;;;;;;:::i;:::-;11709:48;;-1:-1:-1;;;11709:48:2;;5703:14:18;5691:27;;;11709:48:2;;;5673:46:18;5646:18;;11709:48:2;5529:196:18;11671:101:2;11791:11;11786:109;;11859:6;11867:12;;;;:7;:12;:::i;:::-;11829:51;;-1:-1:-1;;;11829:51:2;;-1:-1:-1;;;;;5450:15:18;;;11829:51:2;;;5432:34:18;5502:15;;5482:18;;;5475:43;5367:18;;11829:51:2;5220:304:18;11786:109:2;11992:18;:33;;;;;12014:11;11992:33;:43;;;;;12029:6;11992:43;11988:728;;;-1:-1:-1;;;;;1121:14:6;;12136:20:2;1121:14:6;;;:7;:14;;;;;:16;;;;;;;;12136:40:2;-1:-1:-1;12208:11:2;;;;12191:14;12246:10;;;;;;;;:::i;:::-;12233:23;-1:-1:-1;12286:13:2;;;;12270;12350:12;;;;12286:7;12350:12;:::i;:::-;12364;;;;:7;:12;:::i;:::-;12333:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12313:64;;12392:15;12533:1;12530;12523:4;12517:11;12510:4;12504;12500:15;12493:5;12489:2;12481:6;12476:59;12465:70;;12563:5;12552:16;;12596:36;12615:7;12624;12596:18;:36::i;:::-;12652:53;;;6789:25:18;;;6857:14;;6850:22;6845:2;6830:18;;6823:50;-1:-1:-1;;;;;12652:53:2;;;;;6762:18:18;12652:53:2;;;;;;;12037:679;;;;;;11988:728;11206:1516;;;;11063:1659;;;;:::o;1290:365:3:-;1399:6;1375:21;:30;1371:125;;;1428:57;;-1:-1:-1;;;1428:57:3;;1455:21;1428:57;;;4856:25:18;4897:18;;;4890:34;;;4829:18;;1428:57:3;4682:248:18;1371:125:3;1507:12;1521:23;1548:9;-1:-1:-1;;;;;1548:14:3;1570:6;1548:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:75;;;;1596:7;1591:58;;1619:19;1627:10;1619:7;:19::i;:::-;1361:294;;1290:365;;:::o;9755:724:2:-;9875:12;;;;9963:445;10390:17;;;;:7;:17;:::i;:::-;9963:445;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9963:415:2;;-1:-1:-1;3115:141:2;;-1:-1:-1;10099:12:2;;-1:-1:-1;10099:12:2;;;:7;:12;:::i;:::-;10133:10;;;;;;;;:::i;:::-;10165:13;;;;10200:11;;;;10233:20;10240:12;;;;10165:7;10240:12;:::i;10233:20::-;10275:7;:16;;;;;;;;;;:::i;:::-;10323:7;:12;;;;;;;;:::i;:::-;10313:23;;;;;;;:::i;:::-;;;;;;;;;;10020:334;;;7711:25:18;;;;-1:-1:-1;;;;;7810:15:18;;;7790:18;;;7783:43;7862:15;;;;7842:18;;;7835:43;7894:18;;;7887:34;;;;7937:19;;;7930:35;7981:19;;;7974:35;8058:14;8046:27;8025:19;;;8018:56;8090:19;;;8083:35;;;;7683:19;;10020:334:2;;;;;;;;;;;;9993:375;;;;;;9963:16;:415::i;:::-;:426;;:445::i;:::-;-1:-1:-1;9915:493:2;;-1:-1:-1;9915:493:2;-1:-1:-1;10434:26:2;10427:3;:33;;;;;;;;:::i;:::-;;;10462:9;;-1:-1:-1;9755:724:2;;-1:-1:-1;;;9755:724:2:o;13133:1087::-;13253:66;;13312:4;13253:66;;;8407:51:18;13208:4:2;;;;8380:18:18;;13253:66:2;;;-1:-1:-1;;13253:66:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;13253:66:2;-1:-1:-1;;;13253:66:2;;;14029:20;;13253:66;;-1:-1:-1;;;;;;;13253:66:2;;-1:-1:-1;;13995:6:2;13988:5;13977:82;13966:93;;14086:16;14072:30;;14136:1;14130:8;14115:23;;14165:7;:29;;;;;14190:4;14176:10;:18;;14165:29;:48;;;;;14212:1;14198:11;:15;14165:48;14158:55;13133:1087;-1:-1:-1;;;;;;13133:1087:2:o;3368:267:8:-;3462:13;1390:66;3491:46;;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3487:142;3368:267;;;;:::o;14840:2159:2:-;16584:16;16598:2;16584:11;;;;:16;:::i;:::-;16574:7;:26;16570:423;;;16960:9;16570:423;14840:2159;;:::o;5559:434:3:-;5690:17;;:21;5686:301;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;-1:-1:-1;;;5957:19:3;;;;;;;;;;;5017:176:12;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;4049:4:13;4043:11;-1:-1:-1;;;4067:23:13;;4119:4;4110:14;;4103:39;;;;4171:4;4162:14;;4155:34;4227:4;4212:20;;;3874:374;2129:778:11;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:11;;2823:1;;-1:-1:-1;2827:35:11;;2295:606;2129:778;;;;;:::o;2078:378:8:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:8;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:8;;;-1:-1:-1;2408:4:8;2399:14;;2392:28;;;;-1:-1:-1;2363:16:8;2078:378::o;3945:262:12:-;3998:7;4029:4;-1:-1:-1;;;;;4038:11:12;4021:28;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;-1:-1:-1;4107:22:12;;3945:262::o;4017:184::-;4167:23;4304:80;;;2079:95;4304:80;;;9738:25:18;4326:11:12;9779:18:18;;;9772:34;;;;4339:14:12;9822:18:18;;;9815:34;4355:13:12;9865:18:18;;;9858:34;4378:4:12;9908:19:18;;;9901:61;4268:7:12;;9710:19:18;;4304:80:12;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;5203:1551:11;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:11;;-1:-1:-1;6385:30:11;;-1:-1:-1;6417:1:11;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;9303:25:18;;;9376:4;9364:17;;9344:18;;;9337:45;;;;9398:18;;;9391:34;;;9441:18;;;9434:34;;;6541:24:11;;9275:19:18;;6541:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:11;;-1:-1:-1;;6541:24:11;;;-1:-1:-1;;;;;;;6579:20:11;;6575:113;;-1:-1:-1;6631:1:11;;-1:-1:-1;6635:29:11;;-1:-1:-1;6631:1:11;;-1:-1:-1;6615:62:11;;6575:113;6706:6;-1:-1:-1;6714:20:11;;-1:-1:-1;6714:20:11;;-1:-1:-1;5203:1551:11;;;;;;;;;:::o;2528:245:8:-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:8;;;;;;;;;;;14:397:18;110:6;163:2;151:9;142:7;138:23;134:32;131:52;;;179:1;176;169:12;131:52;219:9;206:23;252:18;244:6;241:30;238:50;;;284:1;281;274:12;238:50;307:22;;363:3;345:16;;;341:26;338:46;;;380:1;377;370:12;338:46;403:2;14:397;-1:-1:-1;;;14:397:18:o;608:131::-;-1:-1:-1;;;;;683:31:18;;673:42;;663:70;;729:1;726;719:12;744:247;803:6;856:2;844:9;835:7;831:23;827:32;824:52;;;872:1;869;862:12;824:52;911:9;898:23;930:31;955:5;930:31;:::i;1178:423::-;1220:3;1258:5;1252:12;1285:6;1280:3;1273:19;1310:1;1320:162;1334:6;1331:1;1328:13;1320:162;;;1396:4;1452:13;;;1448:22;;1442:29;1424:11;;;1420:20;;1413:59;1349:12;1320:162;;;1324:3;1527:1;1520:4;1511:6;1506:3;1502:16;1498:27;1491:38;1590:4;1583:2;1579:7;1574:2;1566:6;1562:15;1558:29;1553:3;1549:39;1545:50;1538:57;;;1178:423;;;;:::o;1606:1259::-;2012:3;2007;2003:13;1995:6;1991:26;1980:9;1973:45;1954:4;2037:2;2075:3;2070:2;2059:9;2055:18;2048:31;2102:46;2143:3;2132:9;2128:19;2120:6;2102:46;:::i;:::-;2196:9;2188:6;2184:22;2179:2;2168:9;2164:18;2157:50;2230:33;2256:6;2248;2230:33;:::i;:::-;2294:2;2279:18;;2272:34;;;-1:-1:-1;;;;;2343:32:18;;2337:3;2322:19;;2315:61;2363:3;2392:19;;2385:35;;;2457:22;;;2451:3;2436:19;;2429:51;2529:13;;2551:22;;;2627:15;;;;-1:-1:-1;2589:15:18;;;;-1:-1:-1;2670:169:18;2684:6;2681:1;2678:13;2670:169;;;2745:13;;2733:26;;2814:15;;;;2779:12;;;;2706:1;2699:9;2670:169;;;-1:-1:-1;2856:3:18;;1606:1259;-1:-1:-1;;;;;;;;;;;;1606:1259:18:o;2870:801::-;3010:6;3018;3026;3079:2;3067:9;3058:7;3054:23;3050:32;3047:52;;;3095:1;3092;3085:12;3047:52;3135:9;3122:23;3164:18;3205:2;3197:6;3194:14;3191:34;;;3221:1;3218;3211:12;3191:34;3259:6;3248:9;3244:22;3234:32;;3304:7;3297:4;3293:2;3289:13;3285:27;3275:55;;3326:1;3323;3316:12;3275:55;3366:2;3353:16;3392:2;3384:6;3381:14;3378:34;;;3408:1;3405;3398:12;3378:34;3463:7;3456:4;3446:6;3443:1;3439:14;3435:2;3431:23;3427:34;3424:47;3421:67;;;3484:1;3481;3474:12;3421:67;3515:4;3507:13;;;;-1:-1:-1;3539:6:18;-1:-1:-1;;3580:20:18;;3567:34;3610:31;3567:34;3610:31;:::i;:::-;3660:5;3650:15;;;2870:801;;;;;:::o;3808:127::-;3869:10;3864:3;3860:20;3857:1;3850:31;3900:4;3897:1;3890:15;3924:4;3921:1;3914:15;3940:335;4043:4;4101:11;4088:25;4195:3;4191:8;4180;4164:14;4160:29;4156:44;4136:18;4132:69;4122:97;;4215:1;4212;4205:12;4122:97;4236:33;;;;;3940:335;-1:-1:-1;;3940:335:18:o;4280:127::-;4341:10;4336:3;4332:20;4329:1;4322:31;4372:4;4369:1;4362:15;4396:4;4393:1;4386:15;4412:125;4477:9;;;4498:10;;;4495:36;;;4511:18;;:::i;4542:135::-;4581:3;4602:17;;;4599:43;;4622:18;;:::i;:::-;-1:-1:-1;4669:1:18;4658:13;;4542:135::o;4935:280::-;4993:6;5046:2;5034:9;5025:7;5021:23;5017:32;5014:52;;;5062:1;5059;5052:12;5014:52;5101:9;5088:23;5151:14;5144:5;5140:26;5133:5;5130:37;5120:65;;5181:1;5178;5171:12;5730:521;5807:4;5813:6;5873:11;5860:25;5967:2;5963:7;5952:8;5936:14;5932:29;5928:43;5908:18;5904:68;5894:96;;5986:1;5983;5976:12;5894:96;6013:33;;6065:20;;;-1:-1:-1;6108:18:18;6097:30;;6094:50;;;6140:1;6137;6130:12;6094:50;6173:4;6161:17;;-1:-1:-1;6204:14:18;6200:27;;;6190:38;;6187:58;;;6241:1;6238;6231:12;6187:58;5730:521;;;;;:::o;6256:360::-;6467:6;6459;6454:3;6441:33;6537:2;6533:15;;;;-1:-1:-1;;6529:53:18;6493:16;;6518:65;;;6607:2;6599:11;;6256:360;-1:-1:-1;6256:360:18:o;7094:271::-;7277:6;7269;7264:3;7251:33;7233:3;7303:16;;7328:13;;;7303:16;7094:271;-1:-1:-1;7094:271:18:o;8129:127::-;8190:10;8185:3;8181:20;8178:1;8171:31;8221:4;8218:1;8211:15;8245:4;8242:1;8235:15;8469:380;8548:1;8544:12;;;;8591;;;8612:61;;8666:4;8658:6;8654:17;8644:27;;8612:61;8719:2;8711:6;8708:14;8688:18;8685:38;8682:161;;8765:10;8760:3;8756:20;8753:1;8746:31;8800:4;8797:1;8790:15;8828:4;8825:1;8818:15;8682:161;;8469:380;;;:::o;8854:217::-;8894:1;8920;8910:132;;8964:10;8959:3;8955:20;8952:1;8945:31;8999:4;8996:1;8989:15;9027:4;9024:1;9017:15;8910:132;-1:-1:-1;9056:9:18;;8854:217::o"},"methodIdentifiers":{"eip712Domain()":"84b0196e","execute((address,address,uint256,uint256,uint48,bytes,bytes))":"df905caf","executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)":"ccf96b4a","nonces(address)":"7ecebe00","verify((address,address,uint256,uint256,uint48,bytes,bytes))":"19d8d38c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"ERC2771ForwarderExpiredRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ERC2771ForwarderInvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"ERC2771ForwarderMismatchedValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"ERC2771UntrustfulTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedForwardRequest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A forwarder compatible with ERC-2771 contracts. See {ERC2771Context}. This forwarder operates on forward requests that include: * `from`: An address to operate on behalf of. It is required to be equal to the request signer. * `to`: The address that should be called. * `value`: The amount of native token to attach with the requested call. * `gas`: The amount of gas limit that will be forwarded with the requested call. * `nonce`: A unique transaction ordering identifier to avoid replayability and request invalidation. * `deadline`: A timestamp after which the request is not executable anymore. * `data`: Encoded `msg.data` to send with the requested call. Relayers are able to submit batches if they are processing a high volume of requests. With high throughput, relayers may run into limitations of the chain such as limits on the number of transactions in the mempool. In these cases the recommendation is to distribute the load among multiple accounts. NOTE: Batching requests includes an optional refund for unused `msg.value` that is achieved by performing a call with empty calldata. While this is within the bounds of ERC-2771 compliance, if the refund receiver happens to consider the forwarder a trusted forwarder, it MUST properly handle `msg.data.length == 0`. `ERC2771Context` in OpenZeppelin Contracts versions prior to 4.9.3 do not handle this properly. ==== Security Considerations If a relayer submits a forward request, it should be willing to pay up to 100% of the gas amount specified in the request. This contract does not implement any kind of retribution for this gas, and it is assumed that there is an out of band incentive for relayers to pay for execution on behalf of signers. Often, the relayer is operated by a project that will consider it a user acquisition cost. By offering to pay for gas, relayers are at risk of having that gas used by an attacker toward some other purpose that is not aligned with the expected out of band incentives. If you operate a relayer, consider whitelisting target contracts and function selectors. When relaying ERC-721 or ERC-1155 transfers specifically, consider rejecting the use of the `data` field, since it can be used to execute arbitrary code.\",\"errors\":{\"ERC2771ForwarderExpiredRequest(uint48)\":[{\"details\":\"The request `deadline` has expired.\"}],\"ERC2771ForwarderInvalidSigner(address,address)\":[{\"details\":\"The request `from` doesn't match with the recovered `signer`.\"}],\"ERC2771ForwarderMismatchedValue(uint256,uint256)\":[{\"details\":\"The `requestedValue` doesn't match with the available `msgValue`.\"}],\"ERC2771UntrustfulTarget(address,address)\":[{\"details\":\"The request target doesn't trust the `forwarder`.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ExecutedForwardRequest(address,uint256,bool)\":{\"details\":\"Emitted when a `ForwardRequest` is executed. NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline, or simply a revert in the requested call. The contract guarantees that the relayer is not able to force the requested call to run out of gas.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"See {EIP712-constructor}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"execute((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}.\"},\"executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)\":{\"details\":\"Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"verify((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol\":\"ERC2771Forwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x345acfb731203002ef98916d5a222339709db0ad44dc4a389e7f1ce4088ce59b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1dcd7e6c8ca2b402e232d2e44666c282a894c475bca15532464a47513222e5d\",\"dweb:/ipfs/QmbfGjwHHCUxHtkCECoisxr7JDiZXSFtrHNizwwKzNNSHJ\"]},\"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol\":{\"keccak256\":\"0x2727ef32bb32f440c5ab7225ae4bdd6bd8706d61d76ba573b85b824cbfd9c03a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8afdc43560109a2fe87e17a05d7871530aaa506a8c5c4f5c0b6d00a9304ca61\",\"dweb:/ipfs/QmdWXRUPHhgmuLHkhiqAab53Y3Ark7Zezu3jJmfqx9S8dK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cddf71d3b8763324ae3f616c5653f13922a0bf677b41cc1ebc91498032c5fed64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xDDF71D3B8763324AE3F616C565 EXTCODEHASH SGT SWAP3 0x2A SIGNEXTEND 0xF6 PUSH24 0xB41CC1EBC91498032C5FED64736F6C634300081400330000 ","sourceMap":"233:5762:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5762:3;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206cddf71d3b8763324ae3f616c5653f13922a0bf677b41cc1ebc91498032c5fed64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0xDDF71D3B8763324AE3F616C565 EXTCODEHASH SGT SWAP3 0x2A SIGNEXTEND 0xF6 PUSH24 0xB41CC1EBC91498032C5FED64736F6C634300081400330000 ","sourceMap":"233:5762:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207baf2a57d05d5f225e9d9cc7c7ebce0fe3661af1a1e1ce184ff187ea42e6103e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xAF2A57D05D5F225E9D9CC7C7EBCE0FE3661AF1A1E1CE184FF187EA42 0xE6 LT RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"411:484:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207baf2a57d05d5f225e9d9cc7c7ebce0fe3661af1a1e1ce184ff187ea42e6103e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xAF2A57D05D5F225E9D9CC7C7EBCE0FE3661AF1A1E1CE184FF187EA42 0xE6 LT RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"411:484:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122007dc85d1aec00f43265f5f1c5a1b853c352d20b7969297378a1b8e5cf03563e164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xDC DUP6 0xD1 0xAE 0xC0 0xF NUMBER 0x26 PUSH0 PUSH0 SHR GAS SHL DUP6 EXTCODECOPY CALLDATALOAD 0x2D KECCAK256 0xB7 SWAP7 SWAP3 SWAP8 CALLDATACOPY DUP11 SHL DUP15 0x5C CREATE CALLDATALOAD PUSH4 0xE164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1255:3046:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1255:3046:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122007dc85d1aec00f43265f5f1c5a1b853c352d20b7969297378a1b8e5cf03563e164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xDC DUP6 0xD1 0xAE 0xC0 0xF NUMBER 0x26 PUSH0 PUSH0 SHR GAS SHL DUP6 EXTCODECOPY CALLDATALOAD 0x2D KECCAK256 0xB7 SWAP7 SWAP3 SWAP8 CALLDATACOPY DUP11 SHL DUP15 0x5C CREATE CALLDATALOAD PUSH4 0xE164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1255:3046:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1407:2774:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122080637b4cf8f58442afd5b19cbd15928226ab732381b221bc298e4f170f1c143264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH4 0x7B4CF8F5 DUP5 TIMESTAMP 0xAF 0xD5 0xB1 SWAP13 0xBD ISZERO SWAP3 DUP3 0x26 0xAB PUSH20 0x2381B221BC298E4F170F1C143264736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c86b651b296f4d0a2ef0fd743497384b12e402f602b3c0f834bc25cb2c3df064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC8 PUSH12 0x651B296F4D0A2EF0FD743497 CODESIZE 0x4B SLT 0xE4 MUL 0xF6 MUL 0xB3 0xC0 0xF8 CALLVALUE 0xBC 0x25 0xCB 0x2C RETURNDATASIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18982:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18982:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1c86b651b296f4d0a2ef0fd743497384b12e402f602b3c0f834bc25cb2c3df064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xC8 PUSH12 0x651B296F4D0A2EF0FD743497 CODESIZE 0x4B SLT 0xE4 MUL 0xF6 MUL 0xB3 0xC0 0xF8 CALLVALUE 0xBC 0x25 0xCB 0x2C RETURNDATASIZE CREATE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18982:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ","sourceMap":"344:7470:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ","sourceMap":"344:7470:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d63ce4e14043b34e4c6dcd455f241e08307ca4606e59a4476bc619285ca23f0a64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 EXTCODECOPY 0xE4 0xE1 BLOCKHASH NUMBER 0xB3 0x4E 0x4C PUSH14 0xCD455F241E08307CA4606E59A447 PUSH12 0xC619285CA23F0A64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3729:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d63ce4e14043b34e4c6dcd455f241e08307ca4606e59a4476bc619285ca23f0a64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 EXTCODECOPY 0xE4 0xE1 BLOCKHASH NUMBER 0xB3 0x4E 0x4C PUSH14 0xCD455F241E08307CA4606E59A447 PUSH12 0xC619285CA23F0A64736F6C63 NUMBER STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:16;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/AppForwarder.sol":{"AppForwarder":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint48","name":"deadline","type":"uint48"}],"name":"ERC2771ForwarderExpiredRequest","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"from","type":"address"}],"name":"ERC2771ForwarderInvalidSigner","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestedValue","type":"uint256"},{"internalType":"uint256","name":"msgValue","type":"uint256"}],"name":"ERC2771ForwarderMismatchedValue","type":"error"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"address","name":"forwarder","type":"address"}],"name":"ERC2771UntrustfulTarget","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"signer","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"ExecutedForwardRequest","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint48","name":"deadline","type":"uint48"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct ERC2771Forwarder.ForwardRequestData","name":"request","type":"tuple"}],"name":"execute","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint48","name":"deadline","type":"uint48"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct ERC2771Forwarder.ForwardRequestData[]","name":"requests","type":"tuple[]"},{"internalType":"address payable","name":"refundReceiver","type":"address"}],"name":"executeBatch","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"gas","type":"uint256"},{"internalType":"uint48","name":"deadline","type":"uint48"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct ERC2771Forwarder.ForwardRequestData","name":"request","type":"tuple"}],"name":"verify","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_257":{"entryPoint":null,"id":257,"parameterSlots":1,"returnSlots":0},"@_3298":{"entryPoint":null,"id":3298,"parameterSlots":2,"returnSlots":0},"@_7057":{"entryPoint":null,"id":7057,"parameterSlots":0,"returnSlots":0},"@_buildDomainSeparator_3345":{"entryPoint":null,"id":3345,"parameterSlots":0,"returnSlots":1},"@getStringSlot_1428":{"entryPoint":null,"id":1428,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_1268":{"entryPoint":269,"id":1268,"parameterSlots":2,"returnSlots":1},"@toShortString_1170":{"entryPoint":326,"id":1170,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":771,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":484,"id":null,"parameterSlots":3,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":851,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":567,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":424,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":402,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4081:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:18"},"nodeType":"YulFunctionCall","src":"66:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:18"},"nodeType":"YulFunctionCall","src":"56:31:18"},"nodeType":"YulExpressionStatement","src":"56:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:18"},"nodeType":"YulFunctionCall","src":"96:15:18"},"nodeType":"YulExpressionStatement","src":"96:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:18"},"nodeType":"YulFunctionCall","src":"120:15:18"},"nodeType":"YulExpressionStatement","src":"120:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:18"},{"body":{"nodeType":"YulBlock","src":"201:325:18","statements":[{"nodeType":"YulAssignment","src":"211:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:18"},"nodeType":"YulFunctionCall","src":"221:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:18"},"nodeType":"YulFunctionCall","src":"268:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:18","statements":[{"nodeType":"YulAssignment","src":"321:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:18"},"nodeType":"YulFunctionCall","src":"331:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:18"},"nodeType":"YulFunctionCall","src":"292:26:18"},"nodeType":"YulIf","src":"289:61:18"},{"body":{"nodeType":"YulBlock","src":"409:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:18"},"nodeType":"YulFunctionCall","src":"433:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:18"},"nodeType":"YulFunctionCall","src":"423:31:18"},"nodeType":"YulExpressionStatement","src":"423:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:18"},"nodeType":"YulFunctionCall","src":"467:15:18"},"nodeType":"YulExpressionStatement","src":"467:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:18"},"nodeType":"YulFunctionCall","src":"495:15:18"},"nodeType":"YulExpressionStatement","src":"495:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:18"},"nodeType":"YulFunctionCall","src":"385:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:18"},"nodeType":"YulFunctionCall","src":"362:38:18"},"nodeType":"YulIf","src":"359:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:18","type":""}],"src":"146:380:18"},{"body":{"nodeType":"YulBlock","src":"587:65:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:18"},"nodeType":"YulFunctionCall","src":"597:14:18"},"nodeType":"YulExpressionStatement","src":"597:14:18"},{"nodeType":"YulAssignment","src":"620:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:18"},"nodeType":"YulFunctionCall","src":"628:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:18"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:18","type":""}],"src":"531:121:18"},{"body":{"nodeType":"YulBlock","src":"738:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:18","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:18","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:18","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:18"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:18"},"nodeType":"YulFunctionCall","src":"809:17:18"},"nodeType":"YulExpressionStatement","src":"809:17:18"},{"nodeType":"YulVariableDeclaration","src":"839:31:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:18"},"nodeType":"YulFunctionCall","src":"851:19:18"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:18","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:18"},"nodeType":"YulFunctionCall","src":"919:19:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:18"},"nodeType":"YulFunctionCall","src":"912:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:18"},"nodeType":"YulFunctionCall","src":"902:38:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:18","statements":[{"nodeType":"YulAssignment","src":"979:19:18","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:18","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:18"},"nodeType":"YulFunctionCall","src":"956:20:18"},"nodeType":"YulIf","src":"953:47:18"},{"nodeType":"YulVariableDeclaration","src":"1013:41:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:18","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:18"},"nodeType":"YulFunctionCall","src":"1040:12:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:18"},"nodeType":"YulFunctionCall","src":"1033:20:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:18"},"nodeType":"YulFunctionCall","src":"1023:31:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:18","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:18"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:18"},"nodeType":"YulFunctionCall","src":"1167:17:18"},"nodeType":"YulExpressionStatement","src":"1167:17:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:18"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:18"},"nodeType":"YulFunctionCall","src":"1112:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:18","statements":[{"nodeType":"YulAssignment","src":"1128:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:18"},"nodeType":"YulFunctionCall","src":"1137:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:18","statements":[]},"src":"1104:82:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:18"},"nodeType":"YulFunctionCall","src":"751:11:18"},"nodeType":"YulIf","src":"748:448:18"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:18","type":""}],"src":"657:545:18"},{"body":{"nodeType":"YulBlock","src":"1292:81:18","statements":[{"nodeType":"YulAssignment","src":"1302:65:18","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:18"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:18","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:18"},"nodeType":"YulFunctionCall","src":"1331:11:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:18"},"nodeType":"YulFunctionCall","src":"1344:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:18"},"nodeType":"YulFunctionCall","src":"1327:24:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:18"},"nodeType":"YulFunctionCall","src":"1323:29:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:18"},"nodeType":"YulFunctionCall","src":"1313:40:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:18","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:18"},"nodeType":"YulFunctionCall","src":"1355:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:18"},"nodeType":"YulFunctionCall","src":"1310:57:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:18","type":""}],"src":"1207:166:18"},{"body":{"nodeType":"YulBlock","src":"1474:1256:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:18"},"nodeType":"YulFunctionCall","src":"1498:10:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:18"},"nodeType":"YulFunctionCall","src":"1553:18:18"},"nodeType":"YulExpressionStatement","src":"1553:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:18","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:18"},"nodeType":"YulFunctionCall","src":"1535:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:18"},"nodeType":"YulFunctionCall","src":"1531:18:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:18"},"nodeType":"YulFunctionCall","src":"1520:30:18"},"nodeType":"YulIf","src":"1517:56:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:18"},"nodeType":"YulFunctionCall","src":"1658:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:18"},"nodeType":"YulFunctionCall","src":"1632:38:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:18"},"nodeType":"YulFunctionCall","src":"1582:97:18"},"nodeType":"YulExpressionStatement","src":"1582:97:18"},{"nodeType":"YulVariableDeclaration","src":"1688:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:18","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:18","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:18","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:18"},"nodeType":"YulFunctionCall","src":"1858:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:18"},"nodeType":"YulFunctionCall","src":"1846:20:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:18"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:18"},"nodeType":"YulFunctionCall","src":"1893:35:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:18"},"nodeType":"YulFunctionCall","src":"2067:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:18"},"nodeType":"YulFunctionCall","src":"2061:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:18"},"nodeType":"YulFunctionCall","src":"2046:42:18"},"nodeType":"YulExpressionStatement","src":"2046:42:18"},{"nodeType":"YulAssignment","src":"2105:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:18"},"nodeType":"YulFunctionCall","src":"2115:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:18"}]},{"nodeType":"YulAssignment","src":"2146:40:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:18"},"nodeType":"YulFunctionCall","src":"2159:27:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:18"},"nodeType":"YulFunctionCall","src":"1972:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:18","statements":[{"nodeType":"YulAssignment","src":"1989:24:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:18"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:18"},"nodeType":"YulFunctionCall","src":"1994:19:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:18","statements":[]},"src":"1964:236:18"},{"body":{"nodeType":"YulBlock","src":"2248:166:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:18"},"nodeType":"YulFunctionCall","src":"2289:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:18"},"nodeType":"YulFunctionCall","src":"2283:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:18"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:18","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:18"},"nodeType":"YulFunctionCall","src":"2368:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:18","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:18"},"nodeType":"YulFunctionCall","src":"2364:24:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:18"},"nodeType":"YulFunctionCall","src":"2390:6:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:18"},"nodeType":"YulFunctionCall","src":"2360:37:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:18"},"nodeType":"YulFunctionCall","src":"2356:42:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:18"},"nodeType":"YulFunctionCall","src":"2341:58:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:18"},"nodeType":"YulFunctionCall","src":"2326:74:18"},"nodeType":"YulExpressionStatement","src":"2326:74:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:18"},"nodeType":"YulFunctionCall","src":"2216:19:18"},"nodeType":"YulIf","src":"2213:201:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:18","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:18"},"nodeType":"YulFunctionCall","src":"2444:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:18"},"nodeType":"YulFunctionCall","src":"2440:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:18"},"nodeType":"YulFunctionCall","src":"2427:36:18"},"nodeType":"YulExpressionStatement","src":"2427:36:18"}]},"nodeType":"YulCase","src":"1810:663:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:18","statements":[{"nodeType":"YulAssignment","src":"2571:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:18"},"nodeType":"YulFunctionCall","src":"2586:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:18"},"nodeType":"YulFunctionCall","src":"2580:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:18"},"nodeType":"YulIf","src":"2531:89:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:18"},"nodeType":"YulFunctionCall","src":"2646:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:18"},"nodeType":"YulFunctionCall","src":"2633:81:18"},"nodeType":"YulExpressionStatement","src":"2633:81:18"}]},"nodeType":"YulCase","src":"2482:242:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:18"},"nodeType":"YulFunctionCall","src":"1787:14:18"},"nodeType":"YulSwitch","src":"1780:944:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:18","type":""}],"src":"1378:1352:18"},{"body":{"nodeType":"YulBlock","src":"2948:276:18","statements":[{"nodeType":"YulAssignment","src":"2958:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2970:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2981:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2966:3:18"},"nodeType":"YulFunctionCall","src":"2966:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2958:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3001:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"3012:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2994:6:18"},"nodeType":"YulFunctionCall","src":"2994:25:18"},"nodeType":"YulExpressionStatement","src":"2994:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3039:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3050:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3035:3:18"},"nodeType":"YulFunctionCall","src":"3035:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"3055:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3028:6:18"},"nodeType":"YulFunctionCall","src":"3028:34:18"},"nodeType":"YulExpressionStatement","src":"3028:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3082:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3093:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3078:3:18"},"nodeType":"YulFunctionCall","src":"3078:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"3098:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3071:6:18"},"nodeType":"YulFunctionCall","src":"3071:34:18"},"nodeType":"YulExpressionStatement","src":"3071:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3125:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3136:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3121:3:18"},"nodeType":"YulFunctionCall","src":"3121:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"3141:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3114:6:18"},"nodeType":"YulFunctionCall","src":"3114:34:18"},"nodeType":"YulExpressionStatement","src":"3114:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3168:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3179:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3164:3:18"},"nodeType":"YulFunctionCall","src":"3164:19:18"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"3189:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3205:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3210:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3201:3:18"},"nodeType":"YulFunctionCall","src":"3201:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"3214:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3197:3:18"},"nodeType":"YulFunctionCall","src":"3197:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3185:3:18"},"nodeType":"YulFunctionCall","src":"3185:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3157:6:18"},"nodeType":"YulFunctionCall","src":"3157:61:18"},"nodeType":"YulExpressionStatement","src":"3157:61:18"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2885:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2896:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2904:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2912:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2920:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2928:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2939:4:18","type":""}],"src":"2735:489:18"},{"body":{"nodeType":"YulBlock","src":"3350:427:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3360:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3370:2:18","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3364:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3388:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3399:2:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3381:6:18"},"nodeType":"YulFunctionCall","src":"3381:21:18"},"nodeType":"YulExpressionStatement","src":"3381:21:18"},{"nodeType":"YulVariableDeclaration","src":"3411:27:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3431:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3425:5:18"},"nodeType":"YulFunctionCall","src":"3425:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3415:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3458:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3469:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3454:3:18"},"nodeType":"YulFunctionCall","src":"3454:18:18"},{"name":"length","nodeType":"YulIdentifier","src":"3474:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3447:6:18"},"nodeType":"YulFunctionCall","src":"3447:34:18"},"nodeType":"YulExpressionStatement","src":"3447:34:18"},{"nodeType":"YulVariableDeclaration","src":"3490:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3499:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3494:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3559:90:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3588:9:18"},{"name":"i","nodeType":"YulIdentifier","src":"3599:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3584:3:18"},"nodeType":"YulFunctionCall","src":"3584:17:18"},{"kind":"number","nodeType":"YulLiteral","src":"3603:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3580:3:18"},"nodeType":"YulFunctionCall","src":"3580:26:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3622:6:18"},{"name":"i","nodeType":"YulIdentifier","src":"3630:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3618:3:18"},"nodeType":"YulFunctionCall","src":"3618:14:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3634:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3614:3:18"},"nodeType":"YulFunctionCall","src":"3614:23:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3608:5:18"},"nodeType":"YulFunctionCall","src":"3608:30:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:18"},"nodeType":"YulFunctionCall","src":"3573:66:18"},"nodeType":"YulExpressionStatement","src":"3573:66:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3520:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"3523:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3517:2:18"},"nodeType":"YulFunctionCall","src":"3517:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3531:19:18","statements":[{"nodeType":"YulAssignment","src":"3533:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3542:1:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3545:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3538:3:18"},"nodeType":"YulFunctionCall","src":"3538:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3533:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"3513:3:18","statements":[]},"src":"3509:140:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3673:9:18"},{"name":"length","nodeType":"YulIdentifier","src":"3684:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3669:3:18"},"nodeType":"YulFunctionCall","src":"3669:22:18"},{"kind":"number","nodeType":"YulLiteral","src":"3693:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3665:3:18"},"nodeType":"YulFunctionCall","src":"3665:31:18"},{"kind":"number","nodeType":"YulLiteral","src":"3698:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3658:6:18"},"nodeType":"YulFunctionCall","src":"3658:42:18"},"nodeType":"YulExpressionStatement","src":"3658:42:18"},{"nodeType":"YulAssignment","src":"3709:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3725:9:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3744:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3752:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3740:3:18"},"nodeType":"YulFunctionCall","src":"3740:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3761:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3757:3:18"},"nodeType":"YulFunctionCall","src":"3757:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3736:3:18"},"nodeType":"YulFunctionCall","src":"3736:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3721:3:18"},"nodeType":"YulFunctionCall","src":"3721:45:18"},{"kind":"number","nodeType":"YulLiteral","src":"3768:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3717:3:18"},"nodeType":"YulFunctionCall","src":"3717:54:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3709:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3319:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3330:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3341:4:18","type":""}],"src":"3229:548:18"},{"body":{"nodeType":"YulBlock","src":"3876:203:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3886:26:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3906:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3900:5:18"},"nodeType":"YulFunctionCall","src":"3900:12:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3890:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3921:32:18","value":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3940:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"3947:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3936:3:18"},"nodeType":"YulFunctionCall","src":"3936:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3930:5:18"},"nodeType":"YulFunctionCall","src":"3930:23:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3921:5:18"}]},{"body":{"nodeType":"YulBlock","src":"3990:83:18","statements":[{"nodeType":"YulAssignment","src":"4004:59:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4017:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4032:1:18","type":"","value":"3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4039:4:18","type":"","value":"0x20"},{"name":"length","nodeType":"YulIdentifier","src":"4045:6:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4035:3:18"},"nodeType":"YulFunctionCall","src":"4035:17:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4028:3:18"},"nodeType":"YulFunctionCall","src":"4028:25:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4059:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4055:3:18"},"nodeType":"YulFunctionCall","src":"4055:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4024:3:18"},"nodeType":"YulFunctionCall","src":"4024:38:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4013:3:18"},"nodeType":"YulFunctionCall","src":"4013:50:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4004:5:18"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3968:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3976:4:18","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3965:2:18"},"nodeType":"YulFunctionCall","src":"3965:16:18"},"nodeType":"YulIf","src":"3962:111:18"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3856:5:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3866:5:18","type":""}],"src":"3782:297:18"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x20B8382337B93BB0B93232B9 PUSH1 0xA1 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP4 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH3 0x5E DUP3 PUSH1 0x0 PUSH3 0x10D JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0x6F DUP2 PUSH1 0x1 PUSH3 0x10D JUMP JUMPDEST PUSH2 0x140 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0xE0 MSTORE DUP2 MLOAD SWAP1 DUP3 ADD KECCAK256 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH3 0xFD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x80 MSTORE POP POP ADDRESS PUSH1 0xC0 MSTORE POP PUSH3 0x378 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x12D JUMPI PUSH3 0x125 DUP4 PUSH3 0x146 JUMP JUMPDEST SWAP1 POP PUSH3 0x140 JUMP JUMPDEST DUP2 PUSH3 0x13A DUP5 DUP3 PUSH3 0x237 JUMP JUMPDEST POP PUSH1 0xFF SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x17D JUMPI DUP3 PUSH1 0x40 MLOAD PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x174 SWAP2 SWAP1 PUSH3 0x303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH3 0x18A DUP3 PUSH3 0x353 JUMP JUMPDEST OR SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1BD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x232 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x20D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x22E JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x219 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x253 JUMPI PUSH3 0x253 PUSH3 0x192 JUMP JUMPDEST PUSH3 0x26B DUP2 PUSH3 0x264 DUP5 SLOAD PUSH3 0x1A8 JUMP JUMPDEST DUP5 PUSH3 0x1E4 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x2A3 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x28A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x22E JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2D4 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x2B3 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2F3 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x332 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH3 0x314 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH3 0x1DE JUMPI PUSH1 0x0 NOT PUSH1 0x20 SWAP2 SWAP1 SWAP2 SUB PUSH1 0x3 SHL SHL AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x105C PUSH3 0x3D3 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x44A ADD MSTORE PUSH1 0x0 PUSH2 0x418 ADD MSTORE PUSH1 0x0 PUSH2 0xB5F ADD MSTORE PUSH1 0x0 PUSH2 0xB37 ADD MSTORE PUSH1 0x0 PUSH2 0xA92 ADD MSTORE PUSH1 0x0 PUSH2 0xABC ADD MSTORE PUSH1 0x0 PUSH2 0xAE6 ADD MSTORE PUSH2 0x105C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xCCF96B4A EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xDF905CAF EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x19D8D38C EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x20B8382337B93BB0B93232B9 PUSH1 0xA1 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0A JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1B9 DUP6 PUSH2 0x38C JUMP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP1 ISZERO PUSH2 0x1CA JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x1D3 JUMPI POP DUP1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x1F0 PUSH2 0x411 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2EA JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x24C JUMPI PUSH2 0x24C PUSH2 0xE90 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x26C SWAP1 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH2 0x29D DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x285 JUMPI PUSH2 0x285 PUSH2 0xE90 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST DUP7 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2D9 JUMPI DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x2B6 JUMPI PUSH2 0x2B6 PUSH2 0xE90 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x2D6 SWAP1 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x2E3 DUP2 PUSH2 0xEEF JUMP JUMPDEST SWAP1 POP PUSH2 0x232 JUMP JUMPDEST POP CALLVALUE DUP3 EQ PUSH2 0x319 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70647F79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLVALUE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x329 JUMPI PUSH2 0x329 DUP5 DUP3 PUSH2 0x653 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x40 ADD CALLDATALOAD CALLVALUE EQ PUSH2 0x361 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x70647F79 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 ADD CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE CALLVALUE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x310 JUMP JUMPDEST PUSH2 0x36C DUP2 PUSH1 0x1 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x389 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x39E DUP8 PUSH2 0x6E9 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x3BB PUSH2 0x3B6 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST TIMESTAMP PUSH2 0x3CC PUSH1 0xA0 DUP11 ADD PUSH1 0x80 DUP12 ADD PUSH2 0xF08 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND LT ISZERO DUP4 DUP1 ISZERO PUSH2 0x400 JUMPI POP PUSH2 0x3EB PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x43E PUSH32 0x0 PUSH1 0x0 PUSH2 0x8DB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x43E PUSH32 0x0 PUSH1 0x1 PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x481 DUP8 PUSH2 0x38C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP6 ISZERO PUSH2 0x547 JUMPI DUP4 PUSH2 0x4CF JUMPI PUSH2 0x4A4 PUSH1 0x40 DUP9 ADD PUSH1 0x20 DUP10 ADD PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD2650CD1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x310 JUMP JUMPDEST DUP3 PUSH2 0x508 JUMPI PUSH2 0x4E4 PUSH1 0xA0 DUP9 ADD PUSH1 0x80 DUP10 ADD PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A777AC5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x310 JUMP JUMPDEST DUP2 PUSH2 0x547 JUMPI DUP1 PUSH2 0x51B PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6422D02B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x310 JUMP JUMPDEST DUP4 DUP1 ISZERO PUSH2 0x551 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x55A JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x649 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH1 0x0 PUSH2 0x599 PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0xD57 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD PUSH1 0x0 PUSH2 0x5AF PUSH1 0xA0 DUP14 ADD DUP14 PUSH2 0xF30 JUMP JUMPDEST PUSH2 0x5BC PUSH1 0x20 DUP16 ADD DUP16 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x20 DUP6 ADD DUP7 DUP9 DUP11 CALL SWAP11 POP GAS SWAP1 POP PUSH2 0x5FD DUP2 DUP15 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE DUP13 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH32 0x842FB24A83793558587A3DAB2BE7674DA4A51D09C5542D6DD354E5D0EA70813C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6CB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x6E3 JUMPI PUSH2 0x6E3 DUP2 PUSH2 0x9A4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x838 PUSH2 0x6FE PUSH1 0xC0 DUP8 ADD DUP8 PUSH2 0xF30 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x832 SWAP3 POP PUSH32 0x7F96328B83274EBC7C1CF4F7A3ABDA602B51A78B7FA1D86A2CE353D75E587CAC SWAP2 POP PUSH2 0x766 SWAP1 POP PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x776 PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 DUP12 ADD CALLDATALOAD PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH2 0x790 PUSH2 0x131 PUSH1 0x20 DUP16 ADD DUP16 PUSH2 0xD57 JUMP JUMPDEST DUP14 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST DUP15 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C1 SWAP3 SWAP2 SWAP1 PUSH2 0xFA4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND SWAP1 DUP3 ADD MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH6 0xFFFFFFFFFFFF AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x9CC JUMP JUMPDEST SWAP1 PUSH2 0x9F9 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x852 JUMPI PUSH2 0x852 PUSH2 0xFB4 JUMP JUMPDEST EQ SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x572B6C05 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 DUP10 GAS STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x8C5 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x8D1 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x8F5 JUMPI PUSH2 0x8EE DUP4 PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP PUSH2 0x982 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x901 SWAP1 PUSH2 0xFCA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x92D SWAP1 PUSH2 0xFCA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x97A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x97A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x95D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x997 PUSH1 0x3F PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH2 0x1004 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x9A0 JUMPI INVALID JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x9B3 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x982 PUSH2 0x9D9 PUSH2 0xA85 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0xA33 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xA25 DUP9 DUP3 DUP6 DUP6 PUSH2 0xBB0 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xA3F JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA53 DUP4 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xADE JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xB08 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x43E PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xBEB JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC6B JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xC75 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCCD JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xCB1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD00 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCA7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0xE0 DUP2 DUP6 SUB SLT ISZERO PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD00 DUP2 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0xD94 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0xCA7 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xDA6 DUP2 DUP11 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDF8 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDDC JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xE6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP POP DUP5 ADD CALLDATALOAD PUSH2 0xE85 DUP2 PUSH2 0xD42 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0xDE NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xEBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xF01 JUMPI PUSH2 0xF01 PUSH2 0xEC6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xF77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFDE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFFE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1021 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x354126C843A7419AE4117D8254C55DC51145B46696E8 PUSH30 0xA5CC9E64411966B364736F6C634300081400330000000000000000000000 ","sourceMap":"298:481:17:-:0;;;346:49;;;;;;;;;-1:-1:-1;4360:52:2;;;;;;;;;;;-1:-1:-1;;;4360:52:2;;;;;;;;3428:431:12;;;;;;;;;;;-1:-1:-1;;;3428:431:12;;;;4360:52:2;;;3501:45:12;4360:52:2;-1:-1:-1;3501:30:12;:45::i;:::-;3493:53;;3567:51;:7;3601:16;3567:33;:51::i;:::-;3556:62;;3642:22;;;;;;;;;;3628:36;;3691:25;;;;;;3674:42;;3744:13;3727:30;;3792:23;4326:11;;4339:14;;4304:80;;;2079:95;4304:80;;;2994:25:18;3035:18;;;3028:34;;;;3078:18;;;3071:34;4355:13:12;3121:18:18;;;3114:34;4378:4:12;3164:19:18;;;3157:61;4268:7:12;;2966:19:18;;4304:80:12;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;3792:23;3767:48;;-1:-1:-1;;3847:4:12;3825:27;;-1:-1:-1;298:481:17;;2887:340:8;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;:20::i;:::-;3050:27;;;;3006:215;3134:5;3108:46;3149:5;3134;3108:46;:::i;:::-;-1:-1:-1;1390:66:8;;-1:-1:-1;3006:215:8;2887:340;;;;:::o;1708:286::-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;-1:-1:-1;;;1879:18:8;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:11;;1957:13;1974:4;1957:13;:::i;:::-;1949:36;;1708:286;-1:-1:-1;;;1708:286:8:o;14:127:18:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:18;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:18;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:18;;;2580:26;2531:89;-1:-1:-1;;1335:1:18;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:18;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:18;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:18;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:18:o;3229:548::-;3341:4;3370:2;3399;3388:9;3381:21;3431:6;3425:13;3474:6;3469:2;3458:9;3454:18;3447:34;3499:1;3509:140;3523:6;3520:1;3517:13;3509:140;;;3618:14;;;3614:23;;3608:30;3584:17;;;3603:2;3580:26;3573:66;3538:10;;3509:140;;;3513:3;3698:1;3693:2;3684:6;3673:9;3669:22;3665:31;3658:42;3768:2;3761;3757:7;3752:2;3744:6;3740:15;3736:29;3725:9;3721:45;3717:54;3709:62;;;;3229:548;;;;:::o;3782:297::-;3900:12;;3947:4;3936:16;;;3930:23;;3900:12;3965:16;;3962:111;;;-1:-1:-1;;4039:4:18;4035:17;;;;4032:1;4028:25;4024:38;4013:50;;3782:297;-1:-1:-1;3782:297:18:o;:::-;298:481:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_EIP712Name_3415":{"entryPoint":1041,"id":3415,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3427":{"entryPoint":1091,"id":3427,"parameterSlots":0,"returnSlots":1},"@_buildDomainSeparator_3345":{"entryPoint":null,"id":3345,"parameterSlots":0,"returnSlots":1},"@_checkForwardedGas_677":{"entryPoint":2440,"id":677,"parameterSlots":2,"returnSlots":0},"@_domainSeparatorV4_3324":{"entryPoint":2693,"id":3324,"parameterSlots":0,"returnSlots":1},"@_execute_616":{"entryPoint":1136,"id":616,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_3361":{"entryPoint":2508,"id":3361,"parameterSlots":1,"returnSlots":1},"@_isTrustedByTarget_658":{"entryPoint":2142,"id":658,"parameterSlots":1,"returnSlots":1},"@_recoverForwardRequestSigner_504":{"entryPoint":1769,"id":504,"parameterSlots":1,"returnSlots":2},"@_revert_937":{"entryPoint":2468,"id":937,"parameterSlots":1,"returnSlots":0},"@_useNonce_1032":{"entryPoint":null,"id":1032,"parameterSlots":1,"returnSlots":1},"@_validate_448":{"entryPoint":908,"id":448,"parameterSlots":1,"returnSlots":4},"@byteLength_1228":{"entryPoint":3199,"id":1228,"parameterSlots":1,"returnSlots":1},"@eip712Domain_3403":{"entryPoint":476,"id":3403,"parameterSlots":0,"returnSlots":7},"@executeBatch_406":{"entryPoint":546,"id":406,"parameterSlots":3,"returnSlots":0},"@execute_317":{"entryPoint":817,"id":317,"parameterSlots":1,"returnSlots":0},"@name_7066":{"entryPoint":null,"id":7066,"parameterSlots":0,"returnSlots":1},"@nonces_1017":{"entryPoint":null,"id":1017,"parameterSlots":1,"returnSlots":1},"@sendValue_736":{"entryPoint":1619,"id":736,"parameterSlots":2,"returnSlots":0},"@toStringWithFallback_1295":{"entryPoint":2267,"id":1295,"parameterSlots":2,"returnSlots":1},"@toString_1196":{"entryPoint":2630,"id":1196,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3513":{"entryPoint":null,"id":3513,"parameterSlots":2,"returnSlots":1},"@tryRecover_2927":{"entryPoint":2553,"id":2927,"parameterSlots":2,"returnSlots":3},"@tryRecover_3115":{"entryPoint":2992,"id":3115,"parameterSlots":4,"returnSlots":3},"@verify_283":{"entryPoint":426,"id":283,"parameterSlots":1,"returnSlots":1},"@version_7075":{"entryPoint":null,"id":7075,"parameterSlots":0,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3415,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_struct$_ForwardRequestData_$206_calldata_ptr_$dyn_calldata_ptrt_address_payable":{"entryPoint":3594,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_struct$_ForwardRequestData_$206_calldata_ptr":{"entryPoint":3335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint48":{"entryPoint":3848,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4004,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":3966,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":3444,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3309,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":3888,"id":null,"parameterSlots":2,"returnSlots":2},"access_calldata_tail_t_struct$_ForwardRequestData_$206_calldata_ptr":{"entryPoint":3750,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3804,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":4100,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4042,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":3823,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3782,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":4020,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3728,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":3394,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:10195:18","statements":[{"nodeType":"YulBlock","src":"6:3:18","statements":[]},{"body":{"nodeType":"YulBlock","src":"64:373:18","statements":[{"nodeType":"YulVariableDeclaration","src":"74:26:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"94:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"88:5:18"},"nodeType":"YulFunctionCall","src":"88:12:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"78:6:18","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"116:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"121:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"109:6:18"},"nodeType":"YulFunctionCall","src":"109:19:18"},"nodeType":"YulExpressionStatement","src":"109:19:18"},{"nodeType":"YulVariableDeclaration","src":"137:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"146:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"141:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"208:110:18","statements":[{"nodeType":"YulVariableDeclaration","src":"222:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"232:4:18","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"226:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"264:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"269:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"260:3:18"},"nodeType":"YulFunctionCall","src":"260:11:18"},{"name":"_1","nodeType":"YulIdentifier","src":"273:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"256:3:18"},"nodeType":"YulFunctionCall","src":"256:20:18"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:18"},{"name":"i","nodeType":"YulIdentifier","src":"299:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"288:3:18"},"nodeType":"YulFunctionCall","src":"288:13:18"},{"name":"_1","nodeType":"YulIdentifier","src":"303:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"284:3:18"},"nodeType":"YulFunctionCall","src":"284:22:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"278:5:18"},"nodeType":"YulFunctionCall","src":"278:29:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"249:6:18"},"nodeType":"YulFunctionCall","src":"249:59:18"},"nodeType":"YulExpressionStatement","src":"249:59:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"167:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"170:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"164:2:18"},"nodeType":"YulFunctionCall","src":"164:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"178:21:18","statements":[{"nodeType":"YulAssignment","src":"180:17:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"189:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"192:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"185:3:18"},"nodeType":"YulFunctionCall","src":"185:12:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"180:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"160:3:18","statements":[]},"src":"156:162:18"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"342:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"347:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"338:3:18"},"nodeType":"YulFunctionCall","src":"338:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"356:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"334:3:18"},"nodeType":"YulFunctionCall","src":"334:27:18"},{"kind":"number","nodeType":"YulLiteral","src":"363:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"327:6:18"},"nodeType":"YulFunctionCall","src":"327:38:18"},"nodeType":"YulExpressionStatement","src":"327:38:18"},{"nodeType":"YulAssignment","src":"374:57:18","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"389:3:18"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"402:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"410:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"398:3:18"},"nodeType":"YulFunctionCall","src":"398:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"419:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"415:3:18"},"nodeType":"YulFunctionCall","src":"415:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"394:3:18"},"nodeType":"YulFunctionCall","src":"394:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"385:3:18"},"nodeType":"YulFunctionCall","src":"385:39:18"},{"kind":"number","nodeType":"YulLiteral","src":"426:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"381:3:18"},"nodeType":"YulFunctionCall","src":"381:50:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"374:3:18"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"41:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"48:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56:3:18","type":""}],"src":"14:423:18"},{"body":{"nodeType":"YulBlock","src":"563:99:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"580:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"591:2:18","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"573:6:18"},"nodeType":"YulFunctionCall","src":"573:21:18"},"nodeType":"YulExpressionStatement","src":"573:21:18"},{"nodeType":"YulAssignment","src":"603:53:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"629:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"641:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"652:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"637:3:18"},"nodeType":"YulFunctionCall","src":"637:18:18"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"611:17:18"},"nodeType":"YulFunctionCall","src":"611:45:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"603:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"532:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"543:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"554:4:18","type":""}],"src":"442:220:18"},{"body":{"nodeType":"YulBlock","src":"774:290:18","statements":[{"body":{"nodeType":"YulBlock","src":"820:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"829:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"832:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"822:6:18"},"nodeType":"YulFunctionCall","src":"822:12:18"},"nodeType":"YulExpressionStatement","src":"822:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"795:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"804:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"791:3:18"},"nodeType":"YulFunctionCall","src":"791:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"816:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"787:3:18"},"nodeType":"YulFunctionCall","src":"787:32:18"},"nodeType":"YulIf","src":"784:52:18"},{"nodeType":"YulVariableDeclaration","src":"845:37:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"872:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"859:12:18"},"nodeType":"YulFunctionCall","src":"859:23:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"849:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"925:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"934:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"937:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"927:6:18"},"nodeType":"YulFunctionCall","src":"927:12:18"},"nodeType":"YulExpressionStatement","src":"927:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"897:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"905:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"894:2:18"},"nodeType":"YulFunctionCall","src":"894:30:18"},"nodeType":"YulIf","src":"891:50:18"},{"nodeType":"YulVariableDeclaration","src":"950:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"964:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"975:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"960:3:18"},"nodeType":"YulFunctionCall","src":"960:22:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"954:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1021:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1030:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1033:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1023:6:18"},"nodeType":"YulFunctionCall","src":"1023:12:18"},"nodeType":"YulExpressionStatement","src":"1023:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1002:7:18"},{"name":"_1","nodeType":"YulIdentifier","src":"1011:2:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"998:3:18"},"nodeType":"YulFunctionCall","src":"998:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"1016:3:18","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"994:3:18"},"nodeType":"YulFunctionCall","src":"994:26:18"},"nodeType":"YulIf","src":"991:46:18"},{"nodeType":"YulAssignment","src":"1046:12:18","value":{"name":"_1","nodeType":"YulIdentifier","src":"1056:2:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1046:6:18"}]}]},"name":"abi_decode_tuple_t_struct$_ForwardRequestData_$206_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"740:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"751:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"763:6:18","type":""}],"src":"667:397:18"},{"body":{"nodeType":"YulBlock","src":"1164:92:18","statements":[{"nodeType":"YulAssignment","src":"1174:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1186:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1197:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1182:3:18"},"nodeType":"YulFunctionCall","src":"1182:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1174:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1216:9:18"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1241:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1234:6:18"},"nodeType":"YulFunctionCall","src":"1234:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1227:6:18"},"nodeType":"YulFunctionCall","src":"1227:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1209:6:18"},"nodeType":"YulFunctionCall","src":"1209:41:18"},"nodeType":"YulExpressionStatement","src":"1209:41:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1133:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1144:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1155:4:18","type":""}],"src":"1069:187:18"},{"body":{"nodeType":"YulBlock","src":"1306:86:18","statements":[{"body":{"nodeType":"YulBlock","src":"1370:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1379:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1382:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1372:6:18"},"nodeType":"YulFunctionCall","src":"1372:12:18"},"nodeType":"YulExpressionStatement","src":"1372:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1329:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1340:5:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1355:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1360:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1351:3:18"},"nodeType":"YulFunctionCall","src":"1351:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"1364:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1347:3:18"},"nodeType":"YulFunctionCall","src":"1347:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1336:3:18"},"nodeType":"YulFunctionCall","src":"1336:31:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1326:2:18"},"nodeType":"YulFunctionCall","src":"1326:42:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1319:6:18"},"nodeType":"YulFunctionCall","src":"1319:50:18"},"nodeType":"YulIf","src":"1316:70:18"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1295:5:18","type":""}],"src":"1261:131:18"},{"body":{"nodeType":"YulBlock","src":"1467:177:18","statements":[{"body":{"nodeType":"YulBlock","src":"1513:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1522:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1525:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1515:6:18"},"nodeType":"YulFunctionCall","src":"1515:12:18"},"nodeType":"YulExpressionStatement","src":"1515:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1488:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1497:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1484:3:18"},"nodeType":"YulFunctionCall","src":"1484:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1509:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1480:3:18"},"nodeType":"YulFunctionCall","src":"1480:32:18"},"nodeType":"YulIf","src":"1477:52:18"},{"nodeType":"YulVariableDeclaration","src":"1538:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1564:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1551:12:18"},"nodeType":"YulFunctionCall","src":"1551:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1542:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1608:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1583:24:18"},"nodeType":"YulFunctionCall","src":"1583:31:18"},"nodeType":"YulExpressionStatement","src":"1583:31:18"},{"nodeType":"YulAssignment","src":"1623:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1633:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1623:6:18"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1433:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1444:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1456:6:18","type":""}],"src":"1397:247:18"},{"body":{"nodeType":"YulBlock","src":"1750:76:18","statements":[{"nodeType":"YulAssignment","src":"1760:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1772:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1783:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1768:3:18"},"nodeType":"YulFunctionCall","src":"1768:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1760:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1802:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"1813:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1795:6:18"},"nodeType":"YulFunctionCall","src":"1795:25:18"},"nodeType":"YulExpressionStatement","src":"1795:25:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1719:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1730:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1741:4:18","type":""}],"src":"1649:177:18"},{"body":{"nodeType":"YulBlock","src":"2188:902:18","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2205:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2220:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2232:3:18","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"2237:3:18","type":"","value":"255"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2228:3:18"},"nodeType":"YulFunctionCall","src":"2228:13:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2216:3:18"},"nodeType":"YulFunctionCall","src":"2216:26:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2198:6:18"},"nodeType":"YulFunctionCall","src":"2198:45:18"},"nodeType":"YulExpressionStatement","src":"2198:45:18"},{"nodeType":"YulVariableDeclaration","src":"2252:12:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2262:2:18","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2256:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2284:9:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2295:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2280:3:18"},"nodeType":"YulFunctionCall","src":"2280:18:18"},{"kind":"number","nodeType":"YulLiteral","src":"2300:3:18","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2273:6:18"},"nodeType":"YulFunctionCall","src":"2273:31:18"},"nodeType":"YulExpressionStatement","src":"2273:31:18"},{"nodeType":"YulVariableDeclaration","src":"2313:60:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2345:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2357:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2368:3:18","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2353:3:18"},"nodeType":"YulFunctionCall","src":"2353:19:18"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2327:17:18"},"nodeType":"YulFunctionCall","src":"2327:46:18"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2317:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2393:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2404:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2389:3:18"},"nodeType":"YulFunctionCall","src":"2389:18:18"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2413:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2421:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2409:3:18"},"nodeType":"YulFunctionCall","src":"2409:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2382:6:18"},"nodeType":"YulFunctionCall","src":"2382:50:18"},"nodeType":"YulExpressionStatement","src":"2382:50:18"},{"nodeType":"YulVariableDeclaration","src":"2441:47:18","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2473:6:18"},{"name":"tail_1","nodeType":"YulIdentifier","src":"2481:6:18"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2455:17:18"},"nodeType":"YulFunctionCall","src":"2455:33:18"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"2445:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2508:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2519:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2504:3:18"},"nodeType":"YulFunctionCall","src":"2504:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"2524:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2497:6:18"},"nodeType":"YulFunctionCall","src":"2497:34:18"},"nodeType":"YulExpressionStatement","src":"2497:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2551:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2562:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2547:3:18"},"nodeType":"YulFunctionCall","src":"2547:19:18"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2572:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2588:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2593:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2584:3:18"},"nodeType":"YulFunctionCall","src":"2584:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"2597:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2580:3:18"},"nodeType":"YulFunctionCall","src":"2580:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2568:3:18"},"nodeType":"YulFunctionCall","src":"2568:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2540:6:18"},"nodeType":"YulFunctionCall","src":"2540:61:18"},"nodeType":"YulExpressionStatement","src":"2540:61:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2621:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2632:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2617:3:18"},"nodeType":"YulFunctionCall","src":"2617:19:18"},{"name":"value5","nodeType":"YulIdentifier","src":"2638:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2610:6:18"},"nodeType":"YulFunctionCall","src":"2610:35:18"},"nodeType":"YulExpressionStatement","src":"2610:35:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2665:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2676:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2661:3:18"},"nodeType":"YulFunctionCall","src":"2661:19:18"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"2686:6:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2694:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2682:3:18"},"nodeType":"YulFunctionCall","src":"2682:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2654:6:18"},"nodeType":"YulFunctionCall","src":"2654:51:18"},"nodeType":"YulExpressionStatement","src":"2654:51:18"},{"nodeType":"YulVariableDeclaration","src":"2714:17:18","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"2725:6:18"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"2718:3:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2740:27:18","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"2760:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2754:5:18"},"nodeType":"YulFunctionCall","src":"2754:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2744:6:18","type":""}]},{"expression":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"2783:6:18"},{"name":"length","nodeType":"YulIdentifier","src":"2791:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2776:6:18"},"nodeType":"YulFunctionCall","src":"2776:22:18"},"nodeType":"YulExpressionStatement","src":"2776:22:18"},{"nodeType":"YulAssignment","src":"2807:22:18","value":{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"2818:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2826:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2814:3:18"},"nodeType":"YulFunctionCall","src":"2814:15:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2807:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"2838:29:18","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"2856:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"2864:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2852:3:18"},"nodeType":"YulFunctionCall","src":"2852:15:18"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2842:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2876:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2885:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2880:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2944:120:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2965:3:18"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2976:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2970:5:18"},"nodeType":"YulFunctionCall","src":"2970:13:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2958:6:18"},"nodeType":"YulFunctionCall","src":"2958:26:18"},"nodeType":"YulExpressionStatement","src":"2958:26:18"},{"nodeType":"YulAssignment","src":"2997:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3008:3:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3013:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3004:3:18"},"nodeType":"YulFunctionCall","src":"3004:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2997:3:18"}]},{"nodeType":"YulAssignment","src":"3029:25:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3043:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3051:2:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3039:3:18"},"nodeType":"YulFunctionCall","src":"3039:15:18"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3029:6:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2906:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"2909:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2903:2:18"},"nodeType":"YulFunctionCall","src":"2903:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2917:18:18","statements":[{"nodeType":"YulAssignment","src":"2919:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2928:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"2931:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2924:3:18"},"nodeType":"YulFunctionCall","src":"2924:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2919:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"2899:3:18","statements":[]},"src":"2895:169:18"},{"nodeType":"YulAssignment","src":"3073:11:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"3081:3:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3073:4:18"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2109:9:18","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2120:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2128:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2136:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2144:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2152:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2160:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2168:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2179:4:18","type":""}],"src":"1831:1259:18"},{"body":{"nodeType":"YulBlock","src":"3262:634:18","statements":[{"body":{"nodeType":"YulBlock","src":"3308:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3317:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3320:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3310:6:18"},"nodeType":"YulFunctionCall","src":"3310:12:18"},"nodeType":"YulExpressionStatement","src":"3310:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3283:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3292:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3279:3:18"},"nodeType":"YulFunctionCall","src":"3279:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3304:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3275:3:18"},"nodeType":"YulFunctionCall","src":"3275:32:18"},"nodeType":"YulIf","src":"3272:52:18"},{"nodeType":"YulVariableDeclaration","src":"3333:37:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3347:12:18"},"nodeType":"YulFunctionCall","src":"3347:23:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3337:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3379:28:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3389:18:18","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3383:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3434:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3443:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3446:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3436:6:18"},"nodeType":"YulFunctionCall","src":"3436:12:18"},"nodeType":"YulExpressionStatement","src":"3436:12:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3422:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3430:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3419:2:18"},"nodeType":"YulFunctionCall","src":"3419:14:18"},"nodeType":"YulIf","src":"3416:34:18"},{"nodeType":"YulVariableDeclaration","src":"3459:32:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3473:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3484:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3469:3:18"},"nodeType":"YulFunctionCall","src":"3469:22:18"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3463:2:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3539:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3548:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3551:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3541:6:18"},"nodeType":"YulFunctionCall","src":"3541:12:18"},"nodeType":"YulExpressionStatement","src":"3541:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3518:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"3522:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3514:3:18"},"nodeType":"YulFunctionCall","src":"3514:13:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3529:7:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3510:3:18"},"nodeType":"YulFunctionCall","src":"3510:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3503:6:18"},"nodeType":"YulFunctionCall","src":"3503:35:18"},"nodeType":"YulIf","src":"3500:55:18"},{"nodeType":"YulVariableDeclaration","src":"3564:30:18","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3591:2:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3578:12:18"},"nodeType":"YulFunctionCall","src":"3578:16:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3568:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3621:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3630:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3633:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3623:6:18"},"nodeType":"YulFunctionCall","src":"3623:12:18"},"nodeType":"YulExpressionStatement","src":"3623:12:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3609:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"3617:2:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3606:2:18"},"nodeType":"YulFunctionCall","src":"3606:14:18"},"nodeType":"YulIf","src":"3603:34:18"},{"body":{"nodeType":"YulBlock","src":"3697:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3706:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3709:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3699:6:18"},"nodeType":"YulFunctionCall","src":"3699:12:18"},"nodeType":"YulExpressionStatement","src":"3699:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3660:2:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3668:1:18","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"3671:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3664:3:18"},"nodeType":"YulFunctionCall","src":"3664:14:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3656:3:18"},"nodeType":"YulFunctionCall","src":"3656:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3681:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3652:3:18"},"nodeType":"YulFunctionCall","src":"3652:34:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3688:7:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3649:2:18"},"nodeType":"YulFunctionCall","src":"3649:47:18"},"nodeType":"YulIf","src":"3646:67:18"},{"nodeType":"YulAssignment","src":"3722:23:18","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"3736:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"3740:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3732:3:18"},"nodeType":"YulFunctionCall","src":"3732:13:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3722:6:18"}]},{"nodeType":"YulAssignment","src":"3754:16:18","value":{"name":"length","nodeType":"YulIdentifier","src":"3764:6:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3754:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3779:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3809:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3820:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3805:3:18"},"nodeType":"YulFunctionCall","src":"3805:20:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3792:12:18"},"nodeType":"YulFunctionCall","src":"3792:34:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3783:5:18","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3860:5:18"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3835:24:18"},"nodeType":"YulFunctionCall","src":"3835:31:18"},"nodeType":"YulExpressionStatement","src":"3835:31:18"},{"nodeType":"YulAssignment","src":"3875:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"3885:5:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3875:6:18"}]}]},"name":"abi_decode_tuple_t_array$_t_struct$_ForwardRequestData_$206_calldata_ptr_$dyn_calldata_ptrt_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3212:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3223:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3235:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3243:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3251:6:18","type":""}],"src":"3095:801:18"},{"body":{"nodeType":"YulBlock","src":"3933:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3950:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3957:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3962:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3953:3:18"},"nodeType":"YulFunctionCall","src":"3953:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3943:6:18"},"nodeType":"YulFunctionCall","src":"3943:31:18"},"nodeType":"YulExpressionStatement","src":"3943:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3990:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3993:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3983:6:18"},"nodeType":"YulFunctionCall","src":"3983:15:18"},"nodeType":"YulExpressionStatement","src":"3983:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4014:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4017:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4007:6:18"},"nodeType":"YulFunctionCall","src":"4007:15:18"},"nodeType":"YulExpressionStatement","src":"4007:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3901:127:18"},{"body":{"nodeType":"YulBlock","src":"4065:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4082:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4089:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4094:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4085:3:18"},"nodeType":"YulFunctionCall","src":"4085:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4075:6:18"},"nodeType":"YulFunctionCall","src":"4075:31:18"},"nodeType":"YulExpressionStatement","src":"4075:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4122:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4125:4:18","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4115:6:18"},"nodeType":"YulFunctionCall","src":"4115:15:18"},"nodeType":"YulExpressionStatement","src":"4115:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4146:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4149:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4139:6:18"},"nodeType":"YulFunctionCall","src":"4139:15:18"},"nodeType":"YulExpressionStatement","src":"4139:15:18"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4033:127:18"},{"body":{"nodeType":"YulBlock","src":"4277:223:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4287:51:18","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"4326:11:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4313:12:18"},"nodeType":"YulFunctionCall","src":"4313:25:18"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"4291:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4428:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4437:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4440:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4430:6:18"},"nodeType":"YulFunctionCall","src":"4430:12:18"},"nodeType":"YulExpressionStatement","src":"4430:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"4361:18:18"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"4389:12:18"},"nodeType":"YulFunctionCall","src":"4389:14:18"},{"name":"base_ref","nodeType":"YulIdentifier","src":"4405:8:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4385:3:18"},"nodeType":"YulFunctionCall","src":"4385:29:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4420:3:18","type":"","value":"222"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4416:3:18"},"nodeType":"YulFunctionCall","src":"4416:8:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4381:3:18"},"nodeType":"YulFunctionCall","src":"4381:44:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4357:3:18"},"nodeType":"YulFunctionCall","src":"4357:69:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4350:6:18"},"nodeType":"YulFunctionCall","src":"4350:77:18"},"nodeType":"YulIf","src":"4347:97:18"},{"nodeType":"YulAssignment","src":"4453:41:18","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"4465:8:18"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"4475:18:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4461:3:18"},"nodeType":"YulFunctionCall","src":"4461:33:18"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"4453:4:18"}]}]},"name":"access_calldata_tail_t_struct$_ForwardRequestData_$206_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"4242:8:18","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"4252:11:18","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"4268:4:18","type":""}],"src":"4165:335:18"},{"body":{"nodeType":"YulBlock","src":"4537:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4554:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4561:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4566:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4557:3:18"},"nodeType":"YulFunctionCall","src":"4557:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4547:6:18"},"nodeType":"YulFunctionCall","src":"4547:31:18"},"nodeType":"YulExpressionStatement","src":"4547:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4594:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4597:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4587:6:18"},"nodeType":"YulFunctionCall","src":"4587:15:18"},"nodeType":"YulExpressionStatement","src":"4587:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4618:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4621:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4611:6:18"},"nodeType":"YulFunctionCall","src":"4611:15:18"},"nodeType":"YulExpressionStatement","src":"4611:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4505:127:18"},{"body":{"nodeType":"YulBlock","src":"4685:77:18","statements":[{"nodeType":"YulAssignment","src":"4695:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4706:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"4709:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4702:3:18"},"nodeType":"YulFunctionCall","src":"4702:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4695:3:18"}]},{"body":{"nodeType":"YulBlock","src":"4734:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4736:16:18"},"nodeType":"YulFunctionCall","src":"4736:18:18"},"nodeType":"YulExpressionStatement","src":"4736:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4726:1:18"},{"name":"sum","nodeType":"YulIdentifier","src":"4729:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4723:2:18"},"nodeType":"YulFunctionCall","src":"4723:10:18"},"nodeType":"YulIf","src":"4720:36:18"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4668:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"4671:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4677:3:18","type":""}],"src":"4637:125:18"},{"body":{"nodeType":"YulBlock","src":"4814:88:18","statements":[{"body":{"nodeType":"YulBlock","src":"4845:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4847:16:18"},"nodeType":"YulFunctionCall","src":"4847:18:18"},"nodeType":"YulExpressionStatement","src":"4847:18:18"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4830:5:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4841:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4837:3:18"},"nodeType":"YulFunctionCall","src":"4837:6:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4827:2:18"},"nodeType":"YulFunctionCall","src":"4827:17:18"},"nodeType":"YulIf","src":"4824:43:18"},{"nodeType":"YulAssignment","src":"4876:20:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4887:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"4894:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:18"},"nodeType":"YulFunctionCall","src":"4883:13:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4876:3:18"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4796:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4806:3:18","type":""}],"src":"4767:135:18"},{"body":{"nodeType":"YulBlock","src":"5036:119:18","statements":[{"nodeType":"YulAssignment","src":"5046:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5058:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5069:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5054:3:18"},"nodeType":"YulFunctionCall","src":"5054:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5046:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5088:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"5099:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5081:6:18"},"nodeType":"YulFunctionCall","src":"5081:25:18"},"nodeType":"YulExpressionStatement","src":"5081:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5126:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5137:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5122:3:18"},"nodeType":"YulFunctionCall","src":"5122:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"5142:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5115:6:18"},"nodeType":"YulFunctionCall","src":"5115:34:18"},"nodeType":"YulExpressionStatement","src":"5115:34:18"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4997:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5008:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5016:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5027:4:18","type":""}],"src":"4907:248:18"},{"body":{"nodeType":"YulBlock","src":"5229:211:18","statements":[{"body":{"nodeType":"YulBlock","src":"5275:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5284:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5287:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5277:6:18"},"nodeType":"YulFunctionCall","src":"5277:12:18"},"nodeType":"YulExpressionStatement","src":"5277:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5250:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5259:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5246:3:18"},"nodeType":"YulFunctionCall","src":"5246:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5271:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5242:3:18"},"nodeType":"YulFunctionCall","src":"5242:32:18"},"nodeType":"YulIf","src":"5239:52:18"},{"nodeType":"YulVariableDeclaration","src":"5300:36:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5326:9:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5313:12:18"},"nodeType":"YulFunctionCall","src":"5313:23:18"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5304:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5394:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5403:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5406:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5396:6:18"},"nodeType":"YulFunctionCall","src":"5396:12:18"},"nodeType":"YulExpressionStatement","src":"5396:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5358:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5369:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5376:14:18","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5365:3:18"},"nodeType":"YulFunctionCall","src":"5365:26:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5355:2:18"},"nodeType":"YulFunctionCall","src":"5355:37:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5348:6:18"},"nodeType":"YulFunctionCall","src":"5348:45:18"},"nodeType":"YulIf","src":"5345:65:18"},{"nodeType":"YulAssignment","src":"5419:15:18","value":{"name":"value","nodeType":"YulIdentifier","src":"5429:5:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5419:6:18"}]}]},"name":"abi_decode_tuple_t_uint48","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5195:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5206:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5218:6:18","type":""}],"src":"5160:280:18"},{"body":{"nodeType":"YulBlock","src":"5574:175:18","statements":[{"nodeType":"YulAssignment","src":"5584:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5596:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5607:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5592:3:18"},"nodeType":"YulFunctionCall","src":"5592:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5584:4:18"}]},{"nodeType":"YulVariableDeclaration","src":"5619:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5637:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5642:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5633:3:18"},"nodeType":"YulFunctionCall","src":"5633:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"5646:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5629:3:18"},"nodeType":"YulFunctionCall","src":"5629:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5623:2:18","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5664:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5679:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"5687:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5675:3:18"},"nodeType":"YulFunctionCall","src":"5675:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5657:6:18"},"nodeType":"YulFunctionCall","src":"5657:34:18"},"nodeType":"YulExpressionStatement","src":"5657:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5711:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5722:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5707:3:18"},"nodeType":"YulFunctionCall","src":"5707:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5731:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"5739:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5727:3:18"},"nodeType":"YulFunctionCall","src":"5727:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5700:6:18"},"nodeType":"YulFunctionCall","src":"5700:43:18"},"nodeType":"YulExpressionStatement","src":"5700:43:18"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5535:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5546:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5554:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5565:4:18","type":""}],"src":"5445:304:18"},{"body":{"nodeType":"YulBlock","src":"5853:97:18","statements":[{"nodeType":"YulAssignment","src":"5863:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5875:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5886:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5871:3:18"},"nodeType":"YulFunctionCall","src":"5871:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5863:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5905:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5920:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5928:14:18","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5916:3:18"},"nodeType":"YulFunctionCall","src":"5916:27:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5898:6:18"},"nodeType":"YulFunctionCall","src":"5898:46:18"},"nodeType":"YulExpressionStatement","src":"5898:46:18"}]},"name":"abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5822:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5833:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5844:4:18","type":""}],"src":"5754:196:18"},{"body":{"nodeType":"YulBlock","src":"6049:427:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6059:51:18","value":{"arguments":[{"name":"ptr_to_tail","nodeType":"YulIdentifier","src":"6098:11:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6085:12:18"},"nodeType":"YulFunctionCall","src":"6085:25:18"},"variables":[{"name":"rel_offset_of_tail","nodeType":"YulTypedName","src":"6063:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6199:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6208:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6211:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6201:6:18"},"nodeType":"YulFunctionCall","src":"6201:12:18"},"nodeType":"YulExpressionStatement","src":"6201:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"6133:18:18"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"6161:12:18"},"nodeType":"YulFunctionCall","src":"6161:14:18"},{"name":"base_ref","nodeType":"YulIdentifier","src":"6177:8:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6157:3:18"},"nodeType":"YulFunctionCall","src":"6157:29:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6192:2:18","type":"","value":"30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6188:3:18"},"nodeType":"YulFunctionCall","src":"6188:7:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6153:3:18"},"nodeType":"YulFunctionCall","src":"6153:43:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6129:3:18"},"nodeType":"YulFunctionCall","src":"6129:68:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6122:6:18"},"nodeType":"YulFunctionCall","src":"6122:76:18"},"nodeType":"YulIf","src":"6119:96:18"},{"nodeType":"YulVariableDeclaration","src":"6224:47:18","value":{"arguments":[{"name":"base_ref","nodeType":"YulIdentifier","src":"6242:8:18"},{"name":"rel_offset_of_tail","nodeType":"YulIdentifier","src":"6252:18:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6238:3:18"},"nodeType":"YulFunctionCall","src":"6238:33:18"},"variables":[{"name":"addr_1","nodeType":"YulTypedName","src":"6228:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6280:30:18","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"6303:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6290:12:18"},"nodeType":"YulFunctionCall","src":"6290:20:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6280:6:18"}]},{"body":{"nodeType":"YulBlock","src":"6353:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6362:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6365:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6355:6:18"},"nodeType":"YulFunctionCall","src":"6355:12:18"},"nodeType":"YulExpressionStatement","src":"6355:12:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6325:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6333:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6322:2:18"},"nodeType":"YulFunctionCall","src":"6322:30:18"},"nodeType":"YulIf","src":"6319:50:18"},{"nodeType":"YulAssignment","src":"6378:25:18","value":{"arguments":[{"name":"addr_1","nodeType":"YulIdentifier","src":"6390:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"6398:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6386:3:18"},"nodeType":"YulFunctionCall","src":"6386:17:18"},"variableNames":[{"name":"addr","nodeType":"YulIdentifier","src":"6378:4:18"}]},{"body":{"nodeType":"YulBlock","src":"6454:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6463:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6466:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6456:6:18"},"nodeType":"YulFunctionCall","src":"6456:12:18"},"nodeType":"YulExpressionStatement","src":"6456:12:18"}]},"condition":{"arguments":[{"name":"addr","nodeType":"YulIdentifier","src":"6419:4:18"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"6429:12:18"},"nodeType":"YulFunctionCall","src":"6429:14:18"},{"name":"length","nodeType":"YulIdentifier","src":"6445:6:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6425:3:18"},"nodeType":"YulFunctionCall","src":"6425:27:18"}],"functionName":{"name":"sgt","nodeType":"YulIdentifier","src":"6415:3:18"},"nodeType":"YulFunctionCall","src":"6415:38:18"},"nodeType":"YulIf","src":"6412:58:18"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nodeType":"YulTypedName","src":"6006:8:18","type":""},{"name":"ptr_to_tail","nodeType":"YulTypedName","src":"6016:11:18","type":""}],"returnVariables":[{"name":"addr","nodeType":"YulTypedName","src":"6032:4:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"6038:6:18","type":""}],"src":"5955:521:18"},{"body":{"nodeType":"YulBlock","src":"6656:185:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6679:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"6684:6:18"},{"name":"value1","nodeType":"YulIdentifier","src":"6692:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6666:12:18"},"nodeType":"YulFunctionCall","src":"6666:33:18"},"nodeType":"YulExpressionStatement","src":"6666:33:18"},{"nodeType":"YulVariableDeclaration","src":"6708:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6722:3:18"},{"name":"value1","nodeType":"YulIdentifier","src":"6727:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6718:3:18"},"nodeType":"YulFunctionCall","src":"6718:16:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6712:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6750:2:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6762:2:18","type":"","value":"96"},{"name":"value2","nodeType":"YulIdentifier","src":"6766:6:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6758:3:18"},"nodeType":"YulFunctionCall","src":"6758:15:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6779:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:18"},"nodeType":"YulFunctionCall","src":"6775:31:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6754:3:18"},"nodeType":"YulFunctionCall","src":"6754:53:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6743:6:18"},"nodeType":"YulFunctionCall","src":"6743:65:18"},"nodeType":"YulExpressionStatement","src":"6743:65:18"},{"nodeType":"YulAssignment","src":"6817:18:18","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6828:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"6832:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6824:3:18"},"nodeType":"YulFunctionCall","src":"6824:11:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6817:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6616:3:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6621:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6629:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6637:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6648:3:18","type":""}],"src":"6481:360:18"},{"body":{"nodeType":"YulBlock","src":"6969:135:18","statements":[{"nodeType":"YulAssignment","src":"6979:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6991:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7002:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6987:3:18"},"nodeType":"YulFunctionCall","src":"6987:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6979:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7021:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"7032:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7014:6:18"},"nodeType":"YulFunctionCall","src":"7014:25:18"},"nodeType":"YulExpressionStatement","src":"7014:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7059:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7070:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7055:3:18"},"nodeType":"YulFunctionCall","src":"7055:18:18"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7089:6:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7082:6:18"},"nodeType":"YulFunctionCall","src":"7082:14:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7075:6:18"},"nodeType":"YulFunctionCall","src":"7075:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7048:6:18"},"nodeType":"YulFunctionCall","src":"7048:50:18"},"nodeType":"YulExpressionStatement","src":"7048:50:18"}]},"name":"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6930:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6941:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6949:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6960:4:18","type":""}],"src":"6846:258:18"},{"body":{"nodeType":"YulBlock","src":"7300:14:18","statements":[{"nodeType":"YulAssignment","src":"7302:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"7309:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7302:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7284:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7292:3:18","type":""}],"src":"7109:205:18"},{"body":{"nodeType":"YulBlock","src":"7466:124:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7489:3:18"},{"name":"value0","nodeType":"YulIdentifier","src":"7494:6:18"},{"name":"value1","nodeType":"YulIdentifier","src":"7502:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7476:12:18"},"nodeType":"YulFunctionCall","src":"7476:33:18"},"nodeType":"YulExpressionStatement","src":"7476:33:18"},{"nodeType":"YulVariableDeclaration","src":"7518:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7532:3:18"},{"name":"value1","nodeType":"YulIdentifier","src":"7537:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7528:3:18"},"nodeType":"YulFunctionCall","src":"7528:16:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7522:2:18","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"7560:2:18"},{"kind":"number","nodeType":"YulLiteral","src":"7564:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7553:6:18"},"nodeType":"YulFunctionCall","src":"7553:13:18"},"nodeType":"YulExpressionStatement","src":"7553:13:18"},{"nodeType":"YulAssignment","src":"7575:9:18","value":{"name":"_1","nodeType":"YulIdentifier","src":"7582:2:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7575:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7434:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7439:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7447:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7458:3:18","type":""}],"src":"7319:271:18"},{"body":{"nodeType":"YulBlock","src":"7890:459:18","statements":[{"nodeType":"YulAssignment","src":"7900:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7912:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7923:3:18","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7908:3:18"},"nodeType":"YulFunctionCall","src":"7908:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7900:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7943:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"7954:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7936:6:18"},"nodeType":"YulFunctionCall","src":"7936:25:18"},"nodeType":"YulExpressionStatement","src":"7936:25:18"},{"nodeType":"YulVariableDeclaration","src":"7970:29:18","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7988:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7993:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7984:3:18"},"nodeType":"YulFunctionCall","src":"7984:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"7997:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7980:3:18"},"nodeType":"YulFunctionCall","src":"7980:19:18"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7974:2:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8019:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8030:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8015:3:18"},"nodeType":"YulFunctionCall","src":"8015:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8039:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"8047:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8035:3:18"},"nodeType":"YulFunctionCall","src":"8035:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8008:6:18"},"nodeType":"YulFunctionCall","src":"8008:43:18"},"nodeType":"YulExpressionStatement","src":"8008:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8071:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8082:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8067:3:18"},"nodeType":"YulFunctionCall","src":"8067:18:18"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"8091:6:18"},{"name":"_1","nodeType":"YulIdentifier","src":"8099:2:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8087:3:18"},"nodeType":"YulFunctionCall","src":"8087:15:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8060:6:18"},"nodeType":"YulFunctionCall","src":"8060:43:18"},"nodeType":"YulExpressionStatement","src":"8060:43:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8123:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8134:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8119:3:18"},"nodeType":"YulFunctionCall","src":"8119:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"8139:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8112:6:18"},"nodeType":"YulFunctionCall","src":"8112:34:18"},"nodeType":"YulExpressionStatement","src":"8112:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8166:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8177:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8162:3:18"},"nodeType":"YulFunctionCall","src":"8162:19:18"},{"name":"value4","nodeType":"YulIdentifier","src":"8183:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8155:6:18"},"nodeType":"YulFunctionCall","src":"8155:35:18"},"nodeType":"YulExpressionStatement","src":"8155:35:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8210:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8221:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8206:3:18"},"nodeType":"YulFunctionCall","src":"8206:19:18"},{"name":"value5","nodeType":"YulIdentifier","src":"8227:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8199:6:18"},"nodeType":"YulFunctionCall","src":"8199:35:18"},"nodeType":"YulExpressionStatement","src":"8199:35:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8254:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8265:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8250:3:18"},"nodeType":"YulFunctionCall","src":"8250:19:18"},{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"8275:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8283:14:18","type":"","value":"0xffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8271:3:18"},"nodeType":"YulFunctionCall","src":"8271:27:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8243:6:18"},"nodeType":"YulFunctionCall","src":"8243:56:18"},"nodeType":"YulExpressionStatement","src":"8243:56:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8319:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8330:3:18","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8315:3:18"},"nodeType":"YulFunctionCall","src":"8315:19:18"},{"name":"value7","nodeType":"YulIdentifier","src":"8336:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8308:6:18"},"nodeType":"YulFunctionCall","src":"8308:35:18"},"nodeType":"YulExpressionStatement","src":"8308:35:18"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7803:9:18","type":""},{"name":"value7","nodeType":"YulTypedName","src":"7814:6:18","type":""},{"name":"value6","nodeType":"YulTypedName","src":"7822:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7830:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7838:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7846:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7854:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7862:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7870:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7881:4:18","type":""}],"src":"7595:754:18"},{"body":{"nodeType":"YulBlock","src":"8386:95:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8403:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8410:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8415:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8406:3:18"},"nodeType":"YulFunctionCall","src":"8406:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8396:6:18"},"nodeType":"YulFunctionCall","src":"8396:31:18"},"nodeType":"YulExpressionStatement","src":"8396:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8443:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8446:4:18","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8436:6:18"},"nodeType":"YulFunctionCall","src":"8436:15:18"},"nodeType":"YulExpressionStatement","src":"8436:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8467:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8470:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8460:6:18"},"nodeType":"YulFunctionCall","src":"8460:15:18"},"nodeType":"YulExpressionStatement","src":"8460:15:18"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"8354:127:18"},{"body":{"nodeType":"YulBlock","src":"8587:102:18","statements":[{"nodeType":"YulAssignment","src":"8597:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8609:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8620:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8605:3:18"},"nodeType":"YulFunctionCall","src":"8605:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8597:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8639:9:18"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8654:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8670:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8675:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8666:3:18"},"nodeType":"YulFunctionCall","src":"8666:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"8679:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8662:3:18"},"nodeType":"YulFunctionCall","src":"8662:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8650:3:18"},"nodeType":"YulFunctionCall","src":"8650:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8632:6:18"},"nodeType":"YulFunctionCall","src":"8632:51:18"},"nodeType":"YulExpressionStatement","src":"8632:51:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8556:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8567:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8578:4:18","type":""}],"src":"8486:203:18"},{"body":{"nodeType":"YulBlock","src":"8749:325:18","statements":[{"nodeType":"YulAssignment","src":"8759:22:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8773:1:18","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"8776:4:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8769:3:18"},"nodeType":"YulFunctionCall","src":"8769:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8759:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"8790:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8820:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"8826:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8816:3:18"},"nodeType":"YulFunctionCall","src":"8816:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8794:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8867:31:18","statements":[{"nodeType":"YulAssignment","src":"8869:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8883:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8891:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8879:3:18"},"nodeType":"YulFunctionCall","src":"8879:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8869:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8847:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8840:6:18"},"nodeType":"YulFunctionCall","src":"8840:26:18"},"nodeType":"YulIf","src":"8837:61:18"},{"body":{"nodeType":"YulBlock","src":"8957:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8978:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8985:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8990:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8981:3:18"},"nodeType":"YulFunctionCall","src":"8981:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8971:6:18"},"nodeType":"YulFunctionCall","src":"8971:31:18"},"nodeType":"YulExpressionStatement","src":"8971:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9022:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9025:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9015:6:18"},"nodeType":"YulFunctionCall","src":"9015:15:18"},"nodeType":"YulExpressionStatement","src":"9015:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9050:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9053:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9043:6:18"},"nodeType":"YulFunctionCall","src":"9043:15:18"},"nodeType":"YulExpressionStatement","src":"9043:15:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8913:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8936:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8944:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8933:2:18"},"nodeType":"YulFunctionCall","src":"8933:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8910:2:18"},"nodeType":"YulFunctionCall","src":"8910:38:18"},"nodeType":"YulIf","src":"8907:161:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8729:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8738:6:18","type":""}],"src":"8694:380:18"},{"body":{"nodeType":"YulBlock","src":"9125:171:18","statements":[{"body":{"nodeType":"YulBlock","src":"9156:111:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9177:1:18","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9184:3:18","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9189:10:18","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9180:3:18"},"nodeType":"YulFunctionCall","src":"9180:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9170:6:18"},"nodeType":"YulFunctionCall","src":"9170:31:18"},"nodeType":"YulExpressionStatement","src":"9170:31:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9221:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9224:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9214:6:18"},"nodeType":"YulFunctionCall","src":"9214:15:18"},"nodeType":"YulExpressionStatement","src":"9214:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9249:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9252:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9242:6:18"},"nodeType":"YulFunctionCall","src":"9242:15:18"},"nodeType":"YulExpressionStatement","src":"9242:15:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9145:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9138:6:18"},"nodeType":"YulFunctionCall","src":"9138:9:18"},"nodeType":"YulIf","src":"9135:132:18"},{"nodeType":"YulAssignment","src":"9276:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9285:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"9288:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9281:3:18"},"nodeType":"YulFunctionCall","src":"9281:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9276:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9110:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"9113:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"9119:1:18","type":""}],"src":"9079:217:18"},{"body":{"nodeType":"YulBlock","src":"9482:217:18","statements":[{"nodeType":"YulAssignment","src":"9492:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9504:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9515:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9500:3:18"},"nodeType":"YulFunctionCall","src":"9500:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9492:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9535:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"9546:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9528:6:18"},"nodeType":"YulFunctionCall","src":"9528:25:18"},"nodeType":"YulExpressionStatement","src":"9528:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9573:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9584:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9569:3:18"},"nodeType":"YulFunctionCall","src":"9569:18:18"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9593:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9601:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9589:3:18"},"nodeType":"YulFunctionCall","src":"9589:17:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9562:6:18"},"nodeType":"YulFunctionCall","src":"9562:45:18"},"nodeType":"YulExpressionStatement","src":"9562:45:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9627:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9638:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9623:3:18"},"nodeType":"YulFunctionCall","src":"9623:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"9643:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9616:6:18"},"nodeType":"YulFunctionCall","src":"9616:34:18"},"nodeType":"YulExpressionStatement","src":"9616:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9670:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9681:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9666:3:18"},"nodeType":"YulFunctionCall","src":"9666:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"9686:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9659:6:18"},"nodeType":"YulFunctionCall","src":"9659:34:18"},"nodeType":"YulExpressionStatement","src":"9659:34:18"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9427:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9438:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9446:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9454:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9462:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9473:4:18","type":""}],"src":"9301:398:18"},{"body":{"nodeType":"YulBlock","src":"9917:276:18","statements":[{"nodeType":"YulAssignment","src":"9927:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9939:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9950:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9935:3:18"},"nodeType":"YulFunctionCall","src":"9935:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9927:4:18"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9970:9:18"},{"name":"value0","nodeType":"YulIdentifier","src":"9981:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9963:6:18"},"nodeType":"YulFunctionCall","src":"9963:25:18"},"nodeType":"YulExpressionStatement","src":"9963:25:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10008:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10019:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10004:3:18"},"nodeType":"YulFunctionCall","src":"10004:18:18"},{"name":"value1","nodeType":"YulIdentifier","src":"10024:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9997:6:18"},"nodeType":"YulFunctionCall","src":"9997:34:18"},"nodeType":"YulExpressionStatement","src":"9997:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10051:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10062:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10047:3:18"},"nodeType":"YulFunctionCall","src":"10047:18:18"},{"name":"value2","nodeType":"YulIdentifier","src":"10067:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10040:6:18"},"nodeType":"YulFunctionCall","src":"10040:34:18"},"nodeType":"YulExpressionStatement","src":"10040:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10094:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10105:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10090:3:18"},"nodeType":"YulFunctionCall","src":"10090:18:18"},{"name":"value3","nodeType":"YulIdentifier","src":"10110:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10083:6:18"},"nodeType":"YulFunctionCall","src":"10083:34:18"},"nodeType":"YulExpressionStatement","src":"10083:34:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10137:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10148:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10133:3:18"},"nodeType":"YulFunctionCall","src":"10133:19:18"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10158:6:18"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10174:3:18","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10179:1:18","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10170:3:18"},"nodeType":"YulFunctionCall","src":"10170:11:18"},{"kind":"number","nodeType":"YulLiteral","src":"10183:1:18","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10166:3:18"},"nodeType":"YulFunctionCall","src":"10166:19:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10154:3:18"},"nodeType":"YulFunctionCall","src":"10154:32:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10126:6:18"},"nodeType":"YulFunctionCall","src":"10126:61:18"},"nodeType":"YulExpressionStatement","src":"10126:61:18"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9854:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9865:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9873:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9881:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9889:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9897:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9908:4:18","type":""}],"src":"9704:489:18"}]},"contents":"{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_struct$_ForwardRequestData_$206_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 224) { revert(0, 0) }\n        value0 := _1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, shl(248, 255)))\n        let _1 := 32\n        mstore(add(headStart, _1), 224)\n        let tail_1 := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value6)\n        mstore(tail_2, length)\n        pos := add(tail_2, _1)\n        let srcPtr := add(value6, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_array$_t_struct$_ForwardRequestData_$206_calldata_ptr_$dyn_calldata_ptrt_address_payable(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        let value := calldataload(add(headStart, 0x20))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function access_calldata_tail_t_struct$_ForwardRequestData_$206_calldata_ptr(base_ref, ptr_to_tail) -> addr\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(222)))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint48(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint48__to_t_uint48__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffff))\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, and(shl(96, value2), not(0xffffffffffffffffffffffff)))\n        end := add(_1, 20)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_bytes32__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), and(value6, 0xffffffffffff))\n        mstore(add(headStart, 224), value7)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3222":[{"length":32,"start":2790}],"3224":[{"length":32,"start":2748}],"3226":[{"length":32,"start":2706}],"3228":[{"length":32,"start":2871}],"3230":[{"length":32,"start":2911}],"3233":[{"length":32,"start":1048}],"3236":[{"length":32,"start":1098}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xCCF96B4A EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xDF905CAF EQ PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x19D8D38C EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xC DUP2 MSTORE PUSH12 0x20B8382337B93BB0B93232B9 PUSH1 0xA1 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0xCED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16F PUSH2 0x1DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0x195 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0A JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x331 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1B9 DUP6 PUSH2 0x38C JUMP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP DUP3 DUP1 ISZERO PUSH2 0x1CA JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x1D3 JUMPI POP DUP1 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x1F0 PUSH2 0x411 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x443 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0xF PUSH1 0xF8 SHL SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP CHAINID SWAP8 POP ADDRESS SWAP7 POP SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2EA JUMPI DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x24C JUMPI PUSH2 0x24C PUSH2 0xE90 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x25E SWAP2 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x26C SWAP1 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH2 0x29D DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x285 JUMPI PUSH2 0x285 PUSH2 0xE90 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST DUP7 PUSH2 0x470 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2D9 JUMPI DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x2B6 JUMPI PUSH2 0x2B6 PUSH2 0xE90 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0xEA6 JUMP JUMPDEST PUSH2 0x2D6 SWAP1 PUSH1 0x40 ADD CALLDATALOAD DUP5 PUSH2 0xEDC JUMP JUMPDEST SWAP3 POP JUMPDEST POP PUSH2 0x2E3 DUP2 PUSH2 0xEEF JUMP JUMPDEST SWAP1 POP PUSH2 0x232 JUMP JUMPDEST POP CALLVALUE DUP3 EQ PUSH2 0x319 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70647F79 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLVALUE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x329 JUMPI PUSH2 0x329 DUP5 DUP3 PUSH2 0x653 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x40 ADD CALLDATALOAD CALLVALUE EQ PUSH2 0x361 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x70647F79 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP3 ADD CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE CALLVALUE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x310 JUMP JUMPDEST PUSH2 0x36C DUP2 PUSH1 0x1 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x389 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x39E DUP8 PUSH2 0x6E9 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x3BB PUSH2 0x3B6 PUSH1 0x40 DUP10 ADD PUSH1 0x20 DUP11 ADD PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x85E JUMP JUMPDEST TIMESTAMP PUSH2 0x3CC PUSH1 0xA0 DUP11 ADD PUSH1 0x80 DUP12 ADD PUSH2 0xF08 JUMP JUMPDEST PUSH6 0xFFFFFFFFFFFF AND LT ISZERO DUP4 DUP1 ISZERO PUSH2 0x400 JUMPI POP PUSH2 0x3EB PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP4 POP SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x43E PUSH32 0x0 PUSH1 0x0 PUSH2 0x8DB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x43E PUSH32 0x0 PUSH1 0x1 PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x481 DUP8 PUSH2 0x38C JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP6 ISZERO PUSH2 0x547 JUMPI DUP4 PUSH2 0x4CF JUMPI PUSH2 0x4A4 PUSH1 0x40 DUP9 ADD PUSH1 0x20 DUP10 ADD PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD2650CD1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x310 JUMP JUMPDEST DUP3 PUSH2 0x508 JUMPI PUSH2 0x4E4 PUSH1 0xA0 DUP9 ADD PUSH1 0x80 DUP10 ADD PUSH2 0xF08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A777AC5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH6 0xFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x310 JUMP JUMPDEST DUP2 PUSH2 0x547 JUMPI DUP1 PUSH2 0x51B PUSH1 0x20 DUP10 ADD DUP10 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6422D02B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x310 JUMP JUMPDEST DUP4 DUP1 ISZERO PUSH2 0x551 JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x55A JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x649 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP1 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD PUSH1 0x0 PUSH2 0x599 PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0xD57 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD PUSH1 0x0 PUSH2 0x5AF PUSH1 0xA0 DUP14 ADD DUP14 PUSH2 0xF30 JUMP JUMPDEST PUSH2 0x5BC PUSH1 0x20 DUP16 ADD DUP16 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x20 DUP6 ADD DUP7 DUP9 DUP11 CALL SWAP11 POP GAS SWAP1 POP PUSH2 0x5FD DUP2 DUP15 PUSH2 0x988 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE DUP13 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP2 PUSH32 0x842FB24A83793558587A3DAB2BE7674DA4A51D09C5542D6DD354E5D0EA70813C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH4 0xCF479181 PUSH1 0xE0 SHL DUP2 MSTORE SELFBALANCE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x310 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6CB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x6E3 JUMPI PUSH2 0x6E3 DUP2 PUSH2 0x9A4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x838 PUSH2 0x6FE PUSH1 0xC0 DUP8 ADD DUP8 PUSH2 0xF30 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x832 SWAP3 POP PUSH32 0x7F96328B83274EBC7C1CF4F7A3ABDA602B51A78B7FA1D86A2CE353D75E587CAC SWAP2 POP PUSH2 0x766 SWAP1 POP PUSH1 0x20 DUP11 ADD DUP11 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x776 PUSH1 0x40 DUP12 ADD PUSH1 0x20 DUP13 ADD PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 DUP12 ADD CALLDATALOAD PUSH1 0x60 DUP13 ADD CALLDATALOAD PUSH2 0x790 PUSH2 0x131 PUSH1 0x20 DUP16 ADD DUP16 PUSH2 0xD57 JUMP JUMPDEST DUP14 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7A3 SWAP2 SWAP1 PUSH2 0xF08 JUMP JUMPDEST DUP15 DUP1 PUSH1 0xA0 ADD SWAP1 PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C1 SWAP3 SWAP2 SWAP1 PUSH2 0xFA4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x20 DUP4 ADD SWAP10 SWAP1 SWAP10 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND SWAP1 DUP3 ADD MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH6 0xFFFFFFFFFFFF AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x120 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x9CC JUMP JUMPDEST SWAP1 PUSH2 0x9F9 JUMP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x852 JUMPI PUSH2 0x852 PUSH2 0xFB4 JUMP JUMPDEST EQ SWAP6 SWAP2 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x572B6C05 PUSH1 0xE0 SHL OR DUP2 MSTORE DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 SWAP1 SWAP2 DUP4 SWAP2 DUP10 GAS STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0x8C5 JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x8D1 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF DUP4 EQ PUSH2 0x8F5 JUMPI PUSH2 0x8EE DUP4 PUSH2 0xA46 JUMP JUMPDEST SWAP1 POP PUSH2 0x982 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x901 SWAP1 PUSH2 0xFCA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x92D SWAP1 PUSH2 0xFCA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x97A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x97A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x95D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x997 PUSH1 0x3F PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH2 0x1004 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x9A0 JUMPI INVALID JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x9B3 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD6BDA275 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x982 PUSH2 0x9D9 PUSH2 0xA85 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0xA33 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xA25 DUP9 DUP3 DUP6 DUP6 PUSH2 0xBB0 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xA3F JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA53 DUP4 PUSH2 0xC7F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0xADE JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xB08 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x43E PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xBEB JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC6B JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xC75 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCCD JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xCB1 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xD00 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xCA7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0xE0 DUP2 DUP6 SUB SLT ISZERO PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xD00 DUP2 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0xFF PUSH1 0xF8 SHL DUP9 AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0xE0 DUP2 DUP5 ADD MSTORE PUSH2 0xD94 PUSH1 0xE0 DUP5 ADD DUP11 PUSH2 0xCA7 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0xDA6 DUP2 DUP11 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD DUP8 SWAP1 MSTORE DUP5 DUP2 SUB PUSH1 0xC0 DUP7 ADD MSTORE DUP6 MLOAD DUP1 DUP3 MSTORE DUP4 DUP8 ADD SWAP3 POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDF8 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xDDC JUMP JUMPDEST POP SWAP1 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xE6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP6 POP SWAP4 POP POP DUP5 ADD CALLDATALOAD PUSH2 0xE85 DUP2 PUSH2 0xD42 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH1 0xDE NOT DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xEBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x982 JUMPI PUSH2 0x982 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xF01 JUMPI PUSH2 0xF01 PUSH2 0xEC6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH6 0xFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xF47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xF77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFDE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFFE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1021 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x354126C843A7419AE4117D8254C55DC51145B46696E8 PUSH30 0xA5CC9E64411966B364736F6C634300081400330000000000000000000000 ","sourceMap":"298:481:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:90;;;;;;;;;;-1:-1:-1;559:21:17;;;;;;;;;;;;-1:-1:-1;;;559:21:17;;;;497:90;;;;;;;:::i;:::-;;;;;;;;4890:244:2;;;;;;;;;;-1:-1:-1;4890:244:2;;;;;:::i;:::-;;:::i;:::-;;;1234:14:18;;1227:22;1209:41;;1197:2;1182:18;4890:244:2;1069:187:18;695:82:17;;;;;;;;;;-1:-1:-1;760:10:17;;;;;;;;;;;;-1:-1:-1;;;760:10:17;;;;695:82;;538:107:6;;;;;;;;;;-1:-1:-1;538:107:6;;;;;:::i;:::-;-1:-1:-1;;;;;624:14:6;598:7;624:14;;;:7;:14;;;;;;;538:107;;;;1795:25:18;;;1783:2;1768:18;538:107:6;1649:177:18;5228:557:12;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;7558:1264:2:-;;;;;;:::i;:::-;;:::i;:::-;;5650:507;;;;;;:::i;:::-;;:::i;4890:244::-;4972:4;4989:23;5014:11;5027:16;5049:18;5059:7;5049:9;:18::i;:::-;4988:79;;;;;;;5084:18;:28;;;;;5106:6;5084:28;:43;;;;;5116:11;5084:43;5077:50;4890:244;-1:-1:-1;;;;;4890:244:2:o;5228:557:12:-;5326:13;5353:18;5385:21;5420:15;5449:25;5488:12;5514:27;5617:13;:11;:13::i;:::-;5644:16;:14;:16::i;:::-;5752;;;5736:1;5752:16;;;;;;;;;-1:-1:-1;;;5566:212:12;;;-1:-1:-1;5566:212:12;;-1:-1:-1;5674:13:12;;-1:-1:-1;5709:4:12;;-1:-1:-1;5736:1:12;-1:-1:-1;5752:16:12;-1:-1:-1;5566:212:12;-1:-1:-1;5228:557:12:o;7558:1264:2:-;-1:-1:-1;;;;;7721:28:2;;;7707:11;;;7821:251;7837:19;;;7821:251;;;7894:8;;7903:1;7894:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7877:34;;7894:17;;;7877:34;;:::i;:::-;;;7925:12;7940:29;7949:8;;7958:1;7949:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;7962:6;7940:8;:29::i;:::-;7925:44;;7988:7;7983:79;;8030:8;;8039:1;8030:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;8015:32;;8030:17;;;8015:32;;:::i;:::-;;;7983:79;-1:-1:-1;7858:3:2;;;:::i;:::-;;;7821:251;;;;8225:9;8208:13;:26;8204:121;;8257:57;;-1:-1:-1;;;8257:57:2;;;;;5081:25:18;;;8304:9:2;5122:18:18;;;5115:34;5054:18;;8257:57:2;;;;;;;;8204:121;8492:16;;8488:328;;8759:46;8777:14;8793:11;8759:17;:46::i;:::-;7697:1125;;;7558:1264;;;:::o;5650:507::-;5956:7;:13;;;5943:9;:26;5939:121;;6024:13;5992:57;;-1:-1:-1;;;5992:57:2;;6024:13;;;;5992:57;;;5081:25:18;6039:9:2;5122:18:18;;;5115:34;5054:18;;5992:57:2;4907:248:18;5939:121:2;6075:23;6084:7;6093:4;6075:8;:23::i;:::-;6070:81;;6121:19;;-1:-1:-1;;;6121:19:2;;;;;;;;;;;6070:81;5650:507;:::o;9006:457::-;9107:23;9132:11;9145:16;9163:14;9190:12;9204:17;9225:37;9254:7;9225:28;:37::i;:::-;9189:73;;-1:-1:-1;9189:73:2;-1:-1:-1;9294:30:2;9313:10;;;;;;;;:::i;:::-;9294:18;:30::i;:::-;9358:15;9338:16;;;;;;;;:::i;:::-;:35;;;;9387:7;:36;;;;-1:-1:-1;9411:12:2;;;;:7;:12;:::i;:::-;-1:-1:-1;;;;;9398:25:2;:9;-1:-1:-1;;;;;9398:25:2;;9387:36;9273:183;;-1:-1:-1;9273:183:2;-1:-1:-1;9273:183:2;-1:-1:-1;9437:9:2;-1:-1:-1;;9006:457:2;;;;;:::o;6105:126:12:-;6151:13;6183:41;:5;6210:13;6183:26;:41::i;:::-;6176:48;;6105:126;:::o;6557:135::-;6606:13;6638:47;:8;6668:16;6638:29;:47::i;11063:1659:2:-;11192:12;11217:23;11242:11;11255:16;11273:14;11291:18;11301:7;11291:9;:18::i;:::-;11216:93;;;;;;;;11507:19;11503:402;;;11547:18;11542:115;;11616:10;;;;;;;;:::i;:::-;11592:50;;-1:-1:-1;;;11592:50:2;;-1:-1:-1;;;;;5675:15:18;;;11592:50:2;;;5657:34:18;11636:4:2;5707:18:18;;;5700:43;5592:18;;11592:50:2;5445:304:18;11542:115:2;11676:6;11671:101;;11740:16;;;;;;;;:::i;:::-;11709:48;;-1:-1:-1;;;11709:48:2;;5928:14:18;5916:27;;;11709:48:2;;;5898:46:18;5871:18;;11709:48:2;5754:196:18;11671:101:2;11791:11;11786:109;;11859:6;11867:12;;;;:7;:12;:::i;:::-;11829:51;;-1:-1:-1;;;11829:51:2;;-1:-1:-1;;;;;5675:15:18;;;11829:51:2;;;5657:34:18;5727:15;;5707:18;;;5700:43;5592:18;;11829:51:2;5445:304:18;11786:109:2;11992:18;:33;;;;;12014:11;11992:33;:43;;;;;12029:6;11992:43;11988:728;;;-1:-1:-1;;;;;1121:14:6;;12136:20:2;1121:14:6;;;:7;:14;;;;;:16;;;;;;;;12136:40:2;-1:-1:-1;12208:11:2;;;;12191:14;12246:10;;;;;;;;:::i;:::-;12233:23;-1:-1:-1;12286:13:2;;;;12270;12350:12;;;;12286:7;12350:12;:::i;:::-;12364;;;;:7;:12;:::i;:::-;12333:44;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12313:64;;12392:15;12533:1;12530;12523:4;12517:11;12510:4;12504;12500:15;12493:5;12489:2;12481:6;12476:59;12465:70;;12563:5;12552:16;;12596:36;12615:7;12624;12596:18;:36::i;:::-;12652:53;;;7014:25:18;;;7082:14;;7075:22;7070:2;7055:18;;7048:50;-1:-1:-1;;;;;12652:53:2;;;;;6987:18:18;12652:53:2;;;;;;;12037:679;;;;;;11988:728;11206:1516;;;;11063:1659;;;;:::o;1290:365:3:-;1399:6;1375:21;:30;1371:125;;;1428:57;;-1:-1:-1;;;1428:57:3;;1455:21;1428:57;;;5081:25:18;5122:18;;;5115:34;;;5054:18;;1428:57:3;4907:248:18;1371:125:3;1507:12;1521:23;1548:9;-1:-1:-1;;;;;1548:14:3;1570:6;1548:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:75;;;;1596:7;1591:58;;1619:19;1627:10;1619:7;:19::i;:::-;1361:294;;1290:365;;:::o;9755:724:2:-;9875:12;;;;9963:445;10390:17;;;;:7;:17;:::i;:::-;9963:445;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9963:415:2;;-1:-1:-1;3115:141:2;;-1:-1:-1;10099:12:2;;-1:-1:-1;10099:12:2;;;:7;:12;:::i;:::-;10133:10;;;;;;;;:::i;:::-;10165:13;;;;10200:11;;;;10233:20;10240:12;;;;10165:7;10240:12;:::i;10233:20::-;10275:7;:16;;;;;;;;;;:::i;:::-;10323:7;:12;;;;;;;;:::i;:::-;10313:23;;;;;;;:::i;:::-;;;;;;;;;;10020:334;;;7936:25:18;;;;-1:-1:-1;;;;;8035:15:18;;;8015:18;;;8008:43;8087:15;;;;8067:18;;;8060:43;8119:18;;;8112:34;;;;8162:19;;;8155:35;8206:19;;;8199:35;8283:14;8271:27;8250:19;;;8243:56;8315:19;;;8308:35;;;;7908:19;;10020:334:2;;;;;;;;;;;;9993:375;;;;;;9963:16;:415::i;:::-;:426;;:445::i;:::-;-1:-1:-1;9915:493:2;;-1:-1:-1;9915:493:2;-1:-1:-1;10434:26:2;10427:3;:33;;;;;;;;:::i;:::-;;;10462:9;;-1:-1:-1;9755:724:2;;-1:-1:-1;;;9755:724:2:o;13133:1087::-;13253:66;;13312:4;13253:66;;;8632:51:18;13208:4:2;;;;8605:18:18;;13253:66:2;;;-1:-1:-1;;13253:66:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;13253:66:2;-1:-1:-1;;;13253:66:2;;;14029:20;;13253:66;;-1:-1:-1;;;;;;;13253:66:2;;-1:-1:-1;;13995:6:2;13988:5;13977:82;13966:93;;14086:16;14072:30;;14136:1;14130:8;14115:23;;14165:7;:29;;;;;14190:4;14176:10;:18;;14165:29;:48;;;;;14212:1;14198:11;:15;14165:48;14158:55;13133:1087;-1:-1:-1;;;;;;13133:1087:2:o;3368:267:8:-;3462:13;1390:66;3491:46;;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3487:142;3368:267;;;;:::o;14840:2159:2:-;16584:16;16598:2;16584:11;;;;:16;:::i;:::-;16574:7;:26;16570:423;;;16960:9;16570:423;14840:2159;;:::o;5559:434:3:-;5690:17;;:21;5686:301;;5894:10;5888:17;5881:4;5869:10;5865:21;5858:48;5686:301;5957:19;;-1:-1:-1;;;5957:19:3;;;;;;;;;;;5017:176:12;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;4049:4:13;4043:11;-1:-1:-1;;;4067:23:13;;4119:4;4110:14;;4103:39;;;;4171:4;4162:14;;4155:34;4227:4;4212:20;;;3874:374;2129:778:11;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:11;;2823:1;;-1:-1:-1;2827:35:11;;2295:606;2129:778;;;;;:::o;2078:378:8:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2300:14;;;2311:2;2300:14;;;;;;;;;2162:30;;-1:-1:-1;2280:17:8;;2300:14;;;;;;;;;-1:-1:-1;;;2363:16:8;;;-1:-1:-1;2408:4:8;2399:14;;2392:28;;;;-1:-1:-1;2363:16:8;2078:378::o;3945:262:12:-;3998:7;4029:4;-1:-1:-1;;;;;4038:11:12;4021:28;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;-1:-1:-1;4107:22:12;;3945:262::o;4017:184::-;4167:23;4304:80;;;2079:95;4304:80;;;9963:25:18;4326:11:12;10004:18:18;;;9997:34;;;;4339:14:12;10047:18:18;;;10040:34;4355:13:12;10090:18:18;;;10083:34;4378:4:12;10133:19:18;;;10126:61;4268:7:12;;9935:19:18;;4304:80:12;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;;5203:1551:11;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:11;;-1:-1:-1;6385:30:11;;-1:-1:-1;6417:1:11;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;9528:25:18;;;9601:4;9589:17;;9569:18;;;9562:45;;;;9623:18;;;9616:34;;;9666:18;;;9659:34;;;6541:24:11;;9500:19:18;;6541:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:11;;-1:-1:-1;;6541:24:11;;;-1:-1:-1;;;;;;;6579:20:11;;6575:113;;-1:-1:-1;6631:1:11;;-1:-1:-1;6635:29:11;;-1:-1:-1;6631:1:11;;-1:-1:-1;6615:62:11;;6575:113;6706:6;-1:-1:-1;6714:20:11;;-1:-1:-1;6714:20:11;;-1:-1:-1;5203:1551:11;;;;;;;;;:::o;2528:245:8:-;2589:7;2661:4;2625:40;;2688:2;2679:11;;2675:69;;;2713:20;;-1:-1:-1;;;2713:20:8;;;;;;;;;;;14:423:18;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;160:3;363:1;356:4;347:6;342:3;338:16;334:27;327:38;426:4;419:2;415:7;410:2;402:6;398:15;394:29;389:3;385:39;381:50;374:57;;;14:423;;;;:::o;442:220::-;591:2;580:9;573:21;554:4;611:45;652:2;641:9;637:18;629:6;611:45;:::i;:::-;603:53;442:220;-1:-1:-1;;;442:220:18:o;667:397::-;763:6;816:2;804:9;795:7;791:23;787:32;784:52;;;832:1;829;822:12;784:52;872:9;859:23;905:18;897:6;894:30;891:50;;;937:1;934;927:12;891:50;960:22;;1016:3;998:16;;;994:26;991:46;;;1033:1;1030;1023:12;1261:131;-1:-1:-1;;;;;1336:31:18;;1326:42;;1316:70;;1382:1;1379;1372:12;1397:247;1456:6;1509:2;1497:9;1488:7;1484:23;1480:32;1477:52;;;1525:1;1522;1515:12;1477:52;1564:9;1551:23;1583:31;1608:5;1583:31;:::i;1831:1259::-;2237:3;2232;2228:13;2220:6;2216:26;2205:9;2198:45;2179:4;2262:2;2300:3;2295:2;2284:9;2280:18;2273:31;2327:46;2368:3;2357:9;2353:19;2345:6;2327:46;:::i;:::-;2421:9;2413:6;2409:22;2404:2;2393:9;2389:18;2382:50;2455:33;2481:6;2473;2455:33;:::i;:::-;2519:2;2504:18;;2497:34;;;-1:-1:-1;;;;;2568:32:18;;2562:3;2547:19;;2540:61;2588:3;2617:19;;2610:35;;;2682:22;;;2676:3;2661:19;;2654:51;2754:13;;2776:22;;;2852:15;;;;-1:-1:-1;2814:15:18;;;;-1:-1:-1;2895:169:18;2909:6;2906:1;2903:13;2895:169;;;2970:13;;2958:26;;3039:15;;;;3004:12;;;;2931:1;2924:9;2895:169;;;-1:-1:-1;3081:3:18;;1831:1259;-1:-1:-1;;;;;;;;;;;;1831:1259:18:o;3095:801::-;3235:6;3243;3251;3304:2;3292:9;3283:7;3279:23;3275:32;3272:52;;;3320:1;3317;3310:12;3272:52;3360:9;3347:23;3389:18;3430:2;3422:6;3419:14;3416:34;;;3446:1;3443;3436:12;3416:34;3484:6;3473:9;3469:22;3459:32;;3529:7;3522:4;3518:2;3514:13;3510:27;3500:55;;3551:1;3548;3541:12;3500:55;3591:2;3578:16;3617:2;3609:6;3606:14;3603:34;;;3633:1;3630;3623:12;3603:34;3688:7;3681:4;3671:6;3668:1;3664:14;3660:2;3656:23;3652:34;3649:47;3646:67;;;3709:1;3706;3699:12;3646:67;3740:4;3732:13;;;;-1:-1:-1;3764:6:18;-1:-1:-1;;3805:20:18;;3792:34;3835:31;3792:34;3835:31;:::i;:::-;3885:5;3875:15;;;3095:801;;;;;:::o;4033:127::-;4094:10;4089:3;4085:20;4082:1;4075:31;4125:4;4122:1;4115:15;4149:4;4146:1;4139:15;4165:335;4268:4;4326:11;4313:25;4420:3;4416:8;4405;4389:14;4385:29;4381:44;4361:18;4357:69;4347:97;;4440:1;4437;4430:12;4347:97;4461:33;;;;;4165:335;-1:-1:-1;;4165:335:18:o;4505:127::-;4566:10;4561:3;4557:20;4554:1;4547:31;4597:4;4594:1;4587:15;4621:4;4618:1;4611:15;4637:125;4702:9;;;4723:10;;;4720:36;;;4736:18;;:::i;4767:135::-;4806:3;4827:17;;;4824:43;;4847:18;;:::i;:::-;-1:-1:-1;4894:1:18;4883:13;;4767:135::o;5160:280::-;5218:6;5271:2;5259:9;5250:7;5246:23;5242:32;5239:52;;;5287:1;5284;5277:12;5239:52;5326:9;5313:23;5376:14;5369:5;5365:26;5358:5;5355:37;5345:65;;5406:1;5403;5396:12;5955:521;6032:4;6038:6;6098:11;6085:25;6192:2;6188:7;6177:8;6161:14;6157:29;6153:43;6133:18;6129:68;6119:96;;6211:1;6208;6201:12;6119:96;6238:33;;6290:20;;;-1:-1:-1;6333:18:18;6322:30;;6319:50;;;6365:1;6362;6355:12;6319:50;6398:4;6386:17;;-1:-1:-1;6429:14:18;6425:27;;;6415:38;;6412:58;;;6466:1;6463;6456:12;6412:58;5955:521;;;;;:::o;6481:360::-;6692:6;6684;6679:3;6666:33;6762:2;6758:15;;;;-1:-1:-1;;6754:53:18;6718:16;;6743:65;;;6832:2;6824:11;;6481:360;-1:-1:-1;6481:360:18:o;7319:271::-;7502:6;7494;7489:3;7476:33;7458:3;7528:16;;7553:13;;;7528:16;7319:271;-1:-1:-1;7319:271:18:o;8354:127::-;8415:10;8410:3;8406:20;8403:1;8396:31;8446:4;8443:1;8436:15;8470:4;8467:1;8460:15;8694:380;8773:1;8769:12;;;;8816;;;8837:61;;8891:4;8883:6;8879:17;8869:27;;8837:61;8944:2;8936:6;8933:14;8913:18;8910:38;8907:161;;8990:10;8985:3;8981:20;8978:1;8971:31;9025:4;9022:1;9015:15;9053:4;9050:1;9043:15;8907:161;;8694:380;;;:::o;9079:217::-;9119:1;9145;9135:132;;9189:10;9184:3;9180:20;9177:1;9170:31;9224:4;9221:1;9214:15;9252:4;9249:1;9242:15;9135:132;-1:-1:-1;9281:9:18;;9079:217::o"},"methodIdentifiers":{"eip712Domain()":"84b0196e","execute((address,address,uint256,uint256,uint48,bytes,bytes))":"df905caf","executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)":"ccf96b4a","name()":"06fdde03","nonces(address)":"7ecebe00","verify((address,address,uint256,uint256,uint48,bytes,bytes))":"19d8d38c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"ERC2771ForwarderExpiredRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ERC2771ForwarderInvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"ERC2771ForwarderMismatchedValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"ERC2771UntrustfulTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedForwardRequest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC2771Forwarder implementation for offline QR payments\",\"errors\":{\"ERC2771ForwarderExpiredRequest(uint48)\":[{\"details\":\"The request `deadline` has expired.\"}],\"ERC2771ForwarderInvalidSigner(address,address)\":[{\"details\":\"The request `from` doesn't match with the recovered `signer`.\"}],\"ERC2771ForwarderMismatchedValue(uint256,uint256)\":[{\"details\":\"The `requestedValue` doesn't match with the available `msgValue`.\"}],\"ERC2771UntrustfulTarget(address,address)\":[{\"details\":\"The request target doesn't trust the `forwarder`.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ExecutedForwardRequest(address,uint256,bool)\":{\"details\":\"Emitted when a `ForwardRequest` is executed. NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline, or simply a revert in the requested call. The contract guarantees that the relayer is not able to force the requested call to run out of gas.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"execute((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}.\"},\"executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)\":{\"details\":\"Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting.\"},\"name()\":{\"details\":\"Get the forwarder name\",\"returns\":{\"_0\":\"The name of the forwarder\"}},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"verify((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided.\"},\"version()\":{\"details\":\"Get the forwarder version\",\"returns\":{\"_0\":\"The version of the forwarder\"}}},\"title\":\"AppForwarder\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract handles meta-transactions for offline payment processing\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AppForwarder.sol\":\"AppForwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x345acfb731203002ef98916d5a222339709db0ad44dc4a389e7f1ce4088ce59b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1dcd7e6c8ca2b402e232d2e44666c282a894c475bca15532464a47513222e5d\",\"dweb:/ipfs/QmbfGjwHHCUxHtkCECoisxr7JDiZXSFtrHNizwwKzNNSHJ\"]},\"@openzeppelin/contracts/metatx/ERC2771Forwarder.sol\":{\"keccak256\":\"0x2727ef32bb32f440c5ab7225ae4bdd6bd8706d61d76ba573b85b824cbfd9c03a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8afdc43560109a2fe87e17a05d7871530aaa506a8c5c4f5c0b6d00a9304ca61\",\"dweb:/ipfs/QmdWXRUPHhgmuLHkhiqAab53Y3Ark7Zezu3jJmfqx9S8dK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/AppForwarder.sol\":{\"keccak256\":\"0xf13adefb90e9d4707778626d2356ea7fd2ec501092e19e845e4bc4b0a9bd35b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a47affde6e5992e10fa0b7ff1fb5c23409c3590c9c6797bd2a18223fcca74d6a\",\"dweb:/ipfs/QmQNHhb8eV7VKvdziKWdYZ4uCmY8BSinNpkLH1whbZWhEP\"]}},\"version\":1}"}}}}}