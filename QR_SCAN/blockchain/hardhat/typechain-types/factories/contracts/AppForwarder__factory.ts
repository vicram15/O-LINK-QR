/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AppForwarder,
  AppForwarderInterface,
} from "../../contracts/AppForwarder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "deadline",
        type: "uint48",
      },
    ],
    name: "ERC2771ForwarderExpiredRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "ERC2771ForwarderInvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
    ],
    name: "ERC2771ForwarderMismatchedValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "ERC2771UntrustfulTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "ExecutedForwardRequest",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771Forwarder.ForwardRequestData",
        name: "request",
        type: "tuple",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771Forwarder.ForwardRequestData[]",
        name: "requests",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "refundReceiver",
        type: "address",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771Forwarder.ForwardRequestData",
        name: "request",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b50604080518082018252600c81526b20b8382337b93bb0b93232b960a11b602080830191909152825180840190935260018352603160f81b908301529081906200005e8260006200010d565b610120526200006f8160016200010d565b61014052815160208084019190912060e052815190820120610100524660a052620000fd60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525062000378565b60006020835110156200012d57620001258362000146565b905062000140565b816200013a848262000237565b5060ff90505b92915050565b600080829050601f815111156200017d578260405163305a27a960e01b815260040162000174919062000303565b60405180910390fd5b80516200018a8262000353565b179392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001bd57607f821691505b602082108103620001de57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023257600081815260208120601f850160051c810160208610156200020d5750805b601f850160051c820191505b818110156200022e5782815560010162000219565b5050505b505050565b81516001600160401b0381111562000253576200025362000192565b6200026b81620002648454620001a8565b84620001e4565b602080601f831160018114620002a357600084156200028a5750858301515b600019600386901b1c1916600185901b1785556200022e565b600085815260208120601f198616915b82811015620002d457888601518255948401946001909101908401620002b3565b5085821015620002f35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015620003325785810183015185820160400152820162000314565b506000604082860101526040601f19601f8301168501019250505092915050565b80516020808301519190811015620001de5760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161105c620003d3600039600061044a0152600061041801526000610b5f01526000610b3701526000610a9201526000610abc01526000610ae6015261105c6000f3fe6080604052600436106100705760003560e01c80637ecebe001161004e5780637ecebe001461011657806384b0196e1461015a578063ccf96b4a14610182578063df905caf1461019757600080fd5b806306fdde031461007557806319d8d38c146100bc57806354fd4d50146100ec575b600080fd5b34801561008157600080fd5b5060408051808201909152600c81526b20b8382337b93bb0b93232b960a11b60208201525b6040516100b39190610ced565b60405180910390f35b3480156100c857600080fd5b506100dc6100d7366004610d07565b6101aa565b60405190151581526020016100b3565b3480156100f857600080fd5b506040805180820190915260018152603160f81b60208201526100a6565b34801561012257600080fd5b5061014c610131366004610d57565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100b3565b34801561016657600080fd5b5061016f6101dc565b6040516100b39796959493929190610d74565b610195610190366004610e0a565b610222565b005b6101956101a5366004610d07565b610331565b6000806000806101b98561038c565b509250925092508280156101ca5750815b80156101d35750805b95945050505050565b6000606080600080600060606101f0610411565b6101f8610443565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6001600160a01b03811615600080805b858110156102ea5786868281811061024c5761024c610e90565b905060200281019061025e9190610ea6565b61026c906040013584610edc565b9250600061029d88888481811061028557610285610e90565b90506020028101906102979190610ea6565b86610470565b9050806102d9578787838181106102b6576102b6610e90565b90506020028101906102c89190610ea6565b6102d6906040013584610edc565b92505b506102e381610eef565b9050610232565b50348214610319576040516370647f7960e01b8152600481018390523460248201526044015b60405180910390fd5b8015610329576103298482610653565b505050505050565b8060400135341461036157604080516370647f7960e01b8152908201356004820152346024820152604401610310565b61036c816001610470565b6103895760405163d6bda27560e01b815260040160405180910390fd5b50565b60008060008060008061039e876106e9565b90925090506103bb6103b66040890160208a01610d57565b61085e565b426103cc60a08a0160808b01610f08565b65ffffffffffff16101583801561040057506103eb60208a018a610d57565b6001600160a01b0316836001600160a01b0316145b919750955093509150509193509193565b606061043e7f000000000000000000000000000000000000000000000000000000000000000060006108db565b905090565b606061043e7f000000000000000000000000000000000000000000000000000000000000000060016108db565b60008060008060006104818761038c565b9350935093509350851561054757836104cf576104a46040880160208901610d57565b60405163d2650cd160e01b81526001600160a01b039091166004820152306024820152604401610310565b82610508576104e460a0880160808901610f08565b604051634a777ac560e11b815265ffffffffffff9091166004820152602401610310565b81610547578061051b6020890189610d57565b604051636422d02b60e11b81526001600160a01b03928316600482015291166024820152604401610310565b8380156105515750815b801561055a5750825b15610649576001600160a01b038116600090815260026020526040812080546001810190915590506060880135600061059960408b0160208c01610d57565b905060408a013560006105af60a08d018d610f30565b6105bc60208f018f610d57565b6040516020016105ce93929190610f7e565b6040516020818303038152906040529050600080600083516020850186888af19a505a90506105fd818e610988565b604080518781528c151560208201526001600160a01b038916917f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c910160405180910390a25050505050505b5050505092915050565b8047101561067d5760405163cf47918160e01b815247600482015260248101829052604401610310565b600080836001600160a01b03168360405160006040518083038185875af1925050503d80600081146106cb576040519150601f19603f3d011682016040523d82523d6000602084013e6106d0565b606091505b5091509150816106e3576106e3816109a4565b50505050565b60008080806108386106fe60c0870187610f30565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061083292507f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac9150610766905060208a018a610d57565b61077660408b0160208c01610d57565b60408b013560608c013561079061013160208f018f610d57565b8d60800160208101906107a39190610f08565b8e8060a001906107b39190610f30565b6040516107c1929190610fa4565b6040805191829003822060208301999099526001600160a01b0397881690820152959094166060860152608085019290925260a084015260c083015265ffffffffffff1660e082015261010081019190915261012001604051602081830303815290604052805190602001206109cc565b906109f9565b509092509050600081600381111561085257610852610fb4565b14959194509092505050565b604051306024820152600090819060440160408051601f19818403018152919052602080820180516001600160e01b031663572b6c0560e01b17815282519293506000928392839290918391895afa92503d915060005190508280156108c5575060208210155b80156108d15750600081115b9695505050505050565b606060ff83146108f5576108ee83610a46565b9050610982565b81805461090190610fca565b80601f016020809104026020016040519081016040528092919081815260200182805461092d90610fca565b801561097a5780601f1061094f5761010080835404028352916020019161097a565b820191906000526020600020905b81548152906001019060200180831161095d57829003601f168201915b505050505090505b92915050565b610997603f6060830135611004565b8210156109a057fe5b5050565b8051156109b357805160208201fd5b60405163d6bda27560e01b815260040160405180910390fd5b60006109826109d9610a85565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008351604103610a335760208401516040850151606086015160001a610a2588828585610bb0565b955095509550505050610a3f565b50508151600091506002905b9250925092565b60606000610a5383610c7f565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610ade57507f000000000000000000000000000000000000000000000000000000000000000046145b15610b0857507f000000000000000000000000000000000000000000000000000000000000000090565b61043e604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610beb5750600091506003905082610c75565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610c3f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c6b57506000925060019150829050610c75565b9250600091508190505b9450945094915050565b600060ff8216601f81111561098257604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015610ccd57602081850181015186830182015201610cb1565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610d006020830184610ca7565b9392505050565b600060208284031215610d1957600080fd5b813567ffffffffffffffff811115610d3057600080fd5b820160e08185031215610d0057600080fd5b6001600160a01b038116811461038957600080fd5b600060208284031215610d6957600080fd5b8135610d0081610d42565b60ff60f81b881681526000602060e081840152610d9460e084018a610ca7565b8381036040850152610da6818a610ca7565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015610df857835183529284019291840191600101610ddc565b50909c9b505050505050505050505050565b600080600060408486031215610e1f57600080fd5b833567ffffffffffffffff80821115610e3757600080fd5b818601915086601f830112610e4b57600080fd5b813581811115610e5a57600080fd5b8760208260051b8501011115610e6f57600080fd5b60209283019550935050840135610e8581610d42565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000823560de19833603018112610ebc57600080fd5b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561098257610982610ec6565b600060018201610f0157610f01610ec6565b5060010190565b600060208284031215610f1a57600080fd5b813565ffffffffffff81168114610d0057600080fd5b6000808335601e19843603018112610f4757600080fd5b83018035915067ffffffffffffffff821115610f6257600080fd5b602001915036819003821315610f7757600080fd5b9250929050565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fd5b600181811c90821680610fde57607f821691505b602082108103610ffe57634e487b7160e01b600052602260045260246000fd5b50919050565b60008261102157634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122075354126c843a7419ae4117d8254c55dc51145b46696e87da5cc9e64411966b364736f6c63430008140033";

type AppForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AppForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AppForwarder__factory extends ContractFactory {
  constructor(...args: AppForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AppForwarder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AppForwarder__factory {
    return super.connect(runner) as AppForwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AppForwarderInterface {
    return new Interface(_abi) as AppForwarderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AppForwarder {
    return new Contract(address, _abi, runner) as unknown as AppForwarder;
  }
}
